{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/monova/eventbus/test/features/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/monova/eventbus\",\"filename\":\"/home/fpezzati/workspace/monova/eventbus/test/features/loadgeojson.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/monova/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/features/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/monova/eventbus",
      "filename": "/home/fpezzati/workspace/monova/eventbus/test/features/loadgeojson.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/monova/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/monova/eventbus/test/features/loadgeojson.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/monova/eventbus/test/features/loadgeojson.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/features/",
        "sourceFileName": "loadgeojson.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _loadgeojson = _interopRequireDefault(require(\"../../src/features/loadgeojson.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\nTests about the loadgeojson feature.\n*/\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nsut must have message's 'command' valued as 'loadgeojson'.\n*/\ntape('handler must provide a \"command\" property valued as \"loadgeojson\".', function (assert) {\n  var sut = new _loadgeojson[\"default\"]();\n  assert.equal(\"loadgeojson\", sut.command, 'Handler\\'s \"command\" property should be valued \"loadgeojson\".');\n  assert.end();\n});\n/*\nsut does nothing when message's 'payload' is undefined.\n*/\n\ntape('handler does returns unchanged state when message\\'s \"payload\" property is undefined.', function (assert) {\n  var message = {};\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _loadgeojson[\"default\"]();\n  assert.equal(state, sut.behave(message, state), 'When message has no \\'payload\\', handler returns state unchanged.');\n  assert.end();\n});\n/*\nwhen message's payload is solid, sut sets that value as state's 'serviceMap' property.\n*/\n\ntape('when message\\'s payload is not \\'undefined\\' handler updates state\\'s \"customerMap\" property with message\\'s \"payload\".', function (assert) {\n  var message = {\n    payload: {}\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _loadgeojson[\"default\"]();\n  assert.ok(lodash.isEqual({\n    say: \"hello\",\n    customerMap: {}\n  }, sut.behave(message, state)), 'Handler updates state\\'s \"customerMap\" value with message\\'s \"payload\".');\n  assert.end();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvYWRnZW9qc29uLnRlc3QuanMiXSwibmFtZXMiOlsidGFwZSIsInJlcXVpcmUiLCJsb2Rhc2giLCJhc3NlcnQiLCJzdXQiLCJMb2FkZ2VvanNvbiIsImVxdWFsIiwiY29tbWFuZCIsImVuZCIsIm1lc3NhZ2UiLCJzdGF0ZSIsInNheSIsImJlaGF2ZSIsInBheWxvYWQiLCJvayIsImlzRXF1YWwiLCJjdXN0b21lck1hcCJdLCJtYXBwaW5ncyI6Ijs7QUFLQTs7OztBQUxBO0FBQ0E7QUFDQTtBQUNBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFHQTtBQUNBO0FBQ0E7QUFDQUQsSUFBSSxDQUFDLG9FQUFELEVBQXVFLFVBQVNHLE1BQVQsRUFBaUI7QUFDMUYsTUFBSUMsR0FBRyxHQUFHLElBQUlDLHVCQUFKLEVBQVY7QUFDQUYsRUFBQUEsTUFBTSxDQUFDRyxLQUFQLENBQWEsYUFBYixFQUE0QkYsR0FBRyxDQUFDRyxPQUFoQyxFQUF5QywrREFBekM7QUFDQUosRUFBQUEsTUFBTSxDQUFDSyxHQUFQO0FBQ0QsQ0FKRyxDQUFKO0FBTUE7QUFDQTtBQUNBOztBQUNBUixJQUFJLENBQUMsdUZBQUQsRUFBMEYsVUFBU0csTUFBVCxFQUFpQjtBQUM3RyxNQUFJTSxPQUFPLEdBQUcsRUFBZDtBQUNBLE1BQUlDLEtBQUssR0FBRztBQUFFQyxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUFaO0FBQ0EsTUFBSVAsR0FBRyxHQUFHLElBQUlDLHVCQUFKLEVBQVY7QUFDQUYsRUFBQUEsTUFBTSxDQUFDRyxLQUFQLENBQWFJLEtBQWIsRUFBb0JOLEdBQUcsQ0FBQ1EsTUFBSixDQUFXSCxPQUFYLEVBQW9CQyxLQUFwQixDQUFwQixFQUFnRCxtRUFBaEQ7QUFDQVAsRUFBQUEsTUFBTSxDQUFDSyxHQUFQO0FBQ0QsQ0FORyxDQUFKO0FBUUE7QUFDQTtBQUNBOztBQUNBUixJQUFJLENBQUMseUhBQUQsRUFBNEgsVUFBU0csTUFBVCxFQUFpQjtBQUMvSSxNQUFJTSxPQUFPLEdBQUc7QUFBRUksSUFBQUEsT0FBTyxFQUFFO0FBQVgsR0FBZDtBQUNBLE1BQUlILEtBQUssR0FBRztBQUFFQyxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUFaO0FBQ0EsTUFBSVAsR0FBRyxHQUFHLElBQUlDLHVCQUFKLEVBQVY7QUFDQUYsRUFBQUEsTUFBTSxDQUFDVyxFQUFQLENBQVVaLE1BQU0sQ0FBQ2EsT0FBUCxDQUFlO0FBQUVKLElBQUFBLEdBQUcsRUFBRSxPQUFQO0FBQWdCSyxJQUFBQSxXQUFXLEVBQUU7QUFBN0IsR0FBZixFQUFrRFosR0FBRyxDQUFDUSxNQUFKLENBQVdILE9BQVgsRUFBb0JDLEtBQXBCLENBQWxELENBQVYsRUFBeUYseUVBQXpGO0FBQ0FQLEVBQUFBLE1BQU0sQ0FBQ0ssR0FBUDtBQUNELENBTkcsQ0FBSiIsInNvdXJjZVJvb3QiOiIvaG9tZS9mcGV6emF0aS93b3Jrc3BhY2UvbW9ub3ZhL2V2ZW50YnVzL3Rlc3QvZmVhdHVyZXMvIiwic291cmNlc0NvbnRlbnQiOlsiLypcblRlc3RzIGFib3V0IHRoZSBsb2FkZ2VvanNvbiBmZWF0dXJlLlxuKi9cbnZhciB0YXBlID0gcmVxdWlyZSgndGFwZScpO1xudmFyIGxvZGFzaCA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuaW1wb3J0IExvYWRnZW9qc29uIGZyb20gJy4uLy4uL3NyYy9mZWF0dXJlcy9sb2FkZ2VvanNvbi5qcyc7XG5cbi8qXG5zdXQgbXVzdCBoYXZlIG1lc3NhZ2UncyAnY29tbWFuZCcgdmFsdWVkIGFzICdsb2FkZ2VvanNvbicuXG4qL1xudGFwZSgnaGFuZGxlciBtdXN0IHByb3ZpZGUgYSBcImNvbW1hbmRcIiBwcm9wZXJ0eSB2YWx1ZWQgYXMgXCJsb2FkZ2VvanNvblwiLicsIGZ1bmN0aW9uKGFzc2VydCkge1xuICB2YXIgc3V0ID0gbmV3IExvYWRnZW9qc29uO1xuICBhc3NlcnQuZXF1YWwoXCJsb2FkZ2VvanNvblwiLCBzdXQuY29tbWFuZCwgJ0hhbmRsZXJcXCdzIFwiY29tbWFuZFwiIHByb3BlcnR5IHNob3VsZCBiZSB2YWx1ZWQgXCJsb2FkZ2VvanNvblwiLicpO1xuICBhc3NlcnQuZW5kKCk7XG59KTtcblxuLypcbnN1dCBkb2VzIG5vdGhpbmcgd2hlbiBtZXNzYWdlJ3MgJ3BheWxvYWQnIGlzIHVuZGVmaW5lZC5cbiovXG50YXBlKCdoYW5kbGVyIGRvZXMgcmV0dXJucyB1bmNoYW5nZWQgc3RhdGUgd2hlbiBtZXNzYWdlXFwncyBcInBheWxvYWRcIiBwcm9wZXJ0eSBpcyB1bmRlZmluZWQuJywgZnVuY3Rpb24oYXNzZXJ0KSB7XG4gIHZhciBtZXNzYWdlID0ge307XG4gIHZhciBzdGF0ZSA9IHsgc2F5OiBcImhlbGxvXCIgfTtcbiAgdmFyIHN1dCA9IG5ldyBMb2FkZ2VvanNvbjtcbiAgYXNzZXJ0LmVxdWFsKHN0YXRlLCBzdXQuYmVoYXZlKG1lc3NhZ2UsIHN0YXRlKSwgJ1doZW4gbWVzc2FnZSBoYXMgbm8gXFwncGF5bG9hZFxcJywgaGFuZGxlciByZXR1cm5zIHN0YXRlIHVuY2hhbmdlZC4nKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbi8qXG53aGVuIG1lc3NhZ2UncyBwYXlsb2FkIGlzIHNvbGlkLCBzdXQgc2V0cyB0aGF0IHZhbHVlIGFzIHN0YXRlJ3MgJ3NlcnZpY2VNYXAnIHByb3BlcnR5LlxuKi9cbnRhcGUoJ3doZW4gbWVzc2FnZVxcJ3MgcGF5bG9hZCBpcyBub3QgXFwndW5kZWZpbmVkXFwnIGhhbmRsZXIgdXBkYXRlcyBzdGF0ZVxcJ3MgXCJjdXN0b21lck1hcFwiIHByb3BlcnR5IHdpdGggbWVzc2FnZVxcJ3MgXCJwYXlsb2FkXCIuJywgZnVuY3Rpb24oYXNzZXJ0KSB7XG4gIHZhciBtZXNzYWdlID0geyBwYXlsb2FkOiB7fSB9O1xuICB2YXIgc3RhdGUgPSB7IHNheTogXCJoZWxsb1wiIH07XG4gIHZhciBzdXQgPSBuZXcgTG9hZGdlb2pzb247XG4gIGFzc2VydC5vayhsb2Rhc2guaXNFcXVhbCh7IHNheTogXCJoZWxsb1wiLCBjdXN0b21lck1hcDoge30gfSwgc3V0LmJlaGF2ZShtZXNzYWdlLCBzdGF0ZSkpLCAnSGFuZGxlciB1cGRhdGVzIHN0YXRlXFwncyBcImN1c3RvbWVyTWFwXCIgdmFsdWUgd2l0aCBtZXNzYWdlXFwncyBcInBheWxvYWRcIi4nKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "loadgeojson.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "sut",
        "Loadgeojson",
        "equal",
        "command",
        "end",
        "message",
        "state",
        "say",
        "behave",
        "payload",
        "ok",
        "isEqual",
        "customerMap"
      ],
      "mappings": ";;AAKA;;;;AALA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,oEAAD,EAAuE,UAASG,MAAT,EAAiB;AAC1F,MAAIC,GAAG,GAAG,IAAIC,uBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACG,KAAP,CAAa,aAAb,EAA4BF,GAAG,CAACG,OAAhC,EAAyC,+DAAzC;AACAJ,EAAAA,MAAM,CAACK,GAAP;AACD,CAJG,CAAJ;AAMA;AACA;AACA;;AACAR,IAAI,CAAC,uFAAD,EAA0F,UAASG,MAAT,EAAiB;AAC7G,MAAIM,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIP,GAAG,GAAG,IAAIC,uBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACG,KAAP,CAAaI,KAAb,EAAoBN,GAAG,CAACQ,MAAJ,CAAWH,OAAX,EAAoBC,KAApB,CAApB,EAAgD,mEAAhD;AACAP,EAAAA,MAAM,CAACK,GAAP;AACD,CANG,CAAJ;AAQA;AACA;AACA;;AACAR,IAAI,CAAC,yHAAD,EAA4H,UAASG,MAAT,EAAiB;AAC/I,MAAIM,OAAO,GAAG;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIH,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIP,GAAG,GAAG,IAAIC,uBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACa,OAAP,CAAe;AAAEJ,IAAAA,GAAG,EAAE,OAAP;AAAgBK,IAAAA,WAAW,EAAE;AAA7B,GAAf,EAAkDZ,GAAG,CAACQ,MAAJ,CAAWH,OAAX,EAAoBC,KAApB,CAAlD,CAAV,EAAyF,yEAAzF;AACAP,EAAAA,MAAM,CAACK,GAAP;AACD,CANG,CAAJ",
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/features/",
      "sourcesContent": [
        "/*\nTests about the loadgeojson feature.\n*/\nvar tape = require('tape');\nvar lodash = require('lodash');\nimport Loadgeojson from '../../src/features/loadgeojson.js';\n\n/*\nsut must have message's 'command' valued as 'loadgeojson'.\n*/\ntape('handler must provide a \"command\" property valued as \"loadgeojson\".', function(assert) {\n  var sut = new Loadgeojson;\n  assert.equal(\"loadgeojson\", sut.command, 'Handler\\'s \"command\" property should be valued \"loadgeojson\".');\n  assert.end();\n});\n\n/*\nsut does nothing when message's 'payload' is undefined.\n*/\ntape('handler does returns unchanged state when message\\'s \"payload\" property is undefined.', function(assert) {\n  var message = {};\n  var state = { say: \"hello\" };\n  var sut = new Loadgeojson;\n  assert.equal(state, sut.behave(message, state), 'When message has no \\'payload\\', handler returns state unchanged.');\n  assert.end();\n});\n\n/*\nwhen message's payload is solid, sut sets that value as state's 'serviceMap' property.\n*/\ntape('when message\\'s payload is not \\'undefined\\' handler updates state\\'s \"customerMap\" property with message\\'s \"payload\".', function(assert) {\n  var message = { payload: {} };\n  var state = { say: \"hello\" };\n  var sut = new Loadgeojson;\n  assert.ok(lodash.isEqual({ say: \"hello\", customerMap: {} }, sut.behave(message, state)), 'Handler updates state\\'s \"customerMap\" value with message\\'s \"payload\".');\n  assert.end();\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633801268486
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/monova/eventbus/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/monova/eventbus\",\"filename\":\"/home/fpezzati/workspace/monova/eventbus/test/eventbus.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/monova/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/monova/eventbus",
      "filename": "/home/fpezzati/workspace/monova/eventbus/test/eventbus.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/monova/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/monova/eventbus/test/eventbus.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/monova/eventbus/test/eventbus.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/",
        "sourceFileName": "eventbus.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _eventbus = _interopRequireDefault(require(\"../src/eventbus.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\nTests about the eventbus.\n*/\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nsut came with a default handler.\n*/\ntape('Eventbus provides a default handler', function (assert) {\n  var defaultHandler = {\n    command: \"default\",\n    behave: function behave(msg) {\n      console.log(\"Not aware of: \" + JSON.stringify(msg));\n    }\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(newSutCameWithASingleDefaultHandler(sut), 'Eventbus: should have a single default handler.');\n  assert.end();\n});\n\nfunction newSutCameWithASingleDefaultHandler(sut) {\n  return sut.handlers.size == 1 && typeof sut.handlers.get('default') === 'function';\n}\n\n;\n/*\nwhen eventbus receives a message with no 'command', he discard it and returns a copy of state immutated.\n*/\n\ntape('When sut receives a message with no \"command\", he dumps it.', function (assert) {\n  var message = {};\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has no \"command\".');\n  assert.end();\n});\n/*\nwhen eventbus receives a message with a 'command' he is not aware of, he discard it and returns a copy of state immutated.\n*/\n\ntape('When sut receives a message with a \"command\" he is not aware of, he discard it and returns a copy of state immutated.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has unmanageable \"command\".');\n  assert.end();\n});\n/*\neventbus always returns a copy of the managed state, even if managed state was left unchanged while handling.\n*/\n\ntape('Eventbus always returns a copy of the managed state.', function (assert) {\n  var message = {};\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(statesAreEqualButNotTheSameObject(state, sut.accept(message, state)), 'Eventbus: state should a copy not the same object.');\n  assert.end();\n});\n\nfunction statesAreEqualButNotTheSameObject(originalState, copyState) {\n  return lodash.isEqual(originalState, copyState) && originalState !== copyState;\n}\n\n;\n/*\nwhen a wrong handler is setted, eventbus manage the error and returns an immutated copy of state.\n*/\n\ntape('When sut handles a message with an invalid handler, he manage the error and returns an immutated copy of state.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  var badHandler = {\n    command: \"dosomething\",\n    behave: function behave(msg, state) {\n      throw 'Unexpected error!';\n    }\n  };\n  sut.handlers.set(\"dosomething\", badHandler);\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message is managed by wrong or invalid handler.');\n  assert.end();\n});\n/*\nwhen eventbus receives a message with a 'command' he is aware of, he passes the message to the handler and returns an updated copy of state.\n*/\n\ntape('When sut receives a message he can handle, he passes a copy of message and a copy of the state to the proper handler.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  var someHandler = {\n    command: \"dosomething\",\n    behave: function behave(msg, state) {\n      state.name = \"Joe\";\n      return state;\n    }\n  };\n  sut.handlers.set(\"dosomething\", someHandler);\n  assert.ok(statesAreEqualButNotTheSameObject({\n    say: \"hello\",\n    name: \"Joe\"\n  }, sut.accept(message, state)), 'Eventbus: state should be updated accordingly by adding a \"name\" valued \"Joe\" property.');\n  assert.end();\n});\n/*\n\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "eventbus.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "defaultHandler",
        "command",
        "behave",
        "msg",
        "console",
        "log",
        "JSON",
        "stringify",
        "sut",
        "Eventbus",
        "ok",
        "newSutCameWithASingleDefaultHandler",
        "end",
        "handlers",
        "size",
        "get",
        "message",
        "state",
        "say",
        "isEqual",
        "accept",
        "statesAreEqualButNotTheSameObject",
        "originalState",
        "copyState",
        "badHandler",
        "set",
        "someHandler",
        "name"
      ],
      "mappings": ";;AAKA;;;;AALA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,qCAAD,EAAwC,UAASG,MAAT,EAAiB;AAC3D,MAAIC,cAAc,GAAG;AAAEC,IAAAA,OAAO,EAAE,SAAX;AAAsBC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAc;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA/B;AAAoD;AAAlG,GAArB;AACA,MAAIK,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUC,mCAAmC,CAACH,GAAD,CAA7C,EAAoD,iDAApD;AACAT,EAAAA,MAAM,CAACa,GAAP;AACD,CALG,CAAJ;;AAOA,SAASD,mCAAT,CAA6CH,GAA7C,EAAkD;AAChD,SAAOA,GAAG,CAACK,QAAJ,CAAaC,IAAb,IAAqB,CAArB,IAA0B,OAAON,GAAG,CAACK,QAAJ,CAAaE,GAAb,CAAiB,SAAjB,CAAP,KAAuC,UAAxE;AACD;;AAAA;AAED;AACA;AACA;;AACAnB,IAAI,CAAC,6DAAD,EAAgE,UAASG,MAAT,EAAiB;AACnF,MAAIiB,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,sEAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;AAQA;AACA;AACA;;AACAhB,IAAI,CAAC,uHAAD,EAA0H,UAASG,MAAT,EAAiB;AAC7I,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,gFAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;AAQA;AACA;AACA;;AACAhB,IAAI,CAAC,sDAAD,EAAyD,UAASG,MAAT,EAAiB;AAC5E,MAAIiB,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUW,iCAAiC,CAACJ,KAAD,EAAQT,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAR,CAA3C,EAAgF,oDAAhF;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;;AAQA,SAASS,iCAAT,CAA2CC,aAA3C,EAA0DC,SAA1D,EAAqE;AACnE,SAAOzB,MAAM,CAACqB,OAAP,CAAeG,aAAf,EAA8BC,SAA9B,KAA4CD,aAAa,KAAKC,SAArE;AACD;;AAAA;AAED;AACA;AACA;;AACA3B,IAAI,CAAC,iHAAD,EAAoH,UAASG,MAAT,EAAiB;AACvI,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AAEA,MAAIe,UAAU,GAAG;AACfvB,IAAAA,OAAO,EAAE,aADM;AAEfC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcc,KAAd,EAAqB;AAC3B,YAAM,mBAAN;AACD;AAJc,GAAjB;AAOAT,EAAAA,GAAG,CAACK,QAAJ,CAAaY,GAAb,CAAiB,aAAjB,EAAgCD,UAAhC;AACAzB,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,4FAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CAfG,CAAJ;AAiBA;AACA;AACA;;AACAhB,IAAI,CAAC,uHAAD,EAA0H,UAASG,MAAT,EAAiB;AAC7I,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AAEA,MAAIiB,WAAW,GAAG;AAChBzB,IAAAA,OAAO,EAAE,aADO;AAEhBC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcc,KAAd,EAAqB;AAC3BA,MAAAA,KAAK,CAACU,IAAN,GAAa,KAAb;AACA,aAAOV,KAAP;AACD;AALe,GAAlB;AAQAT,EAAAA,GAAG,CAACK,QAAJ,CAAaY,GAAb,CAAiB,aAAjB,EAAgCC,WAAhC;AACA3B,EAAAA,MAAM,CAACW,EAAP,CAAUW,iCAAiC,CAAC;AAAEH,IAAAA,GAAG,EAAE,OAAP;AAAgBS,IAAAA,IAAI,EAAE;AAAtB,GAAD,EAAgCnB,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAhC,CAA3C,EAAwG,yFAAxG;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CAhBG,CAAJ;AAkBA;AACA;AACA",
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/",
      "sourcesContent": [
        "/*\nTests about the eventbus.\n*/\nvar tape = require('tape');\nvar lodash = require('lodash');\nimport Eventbus from '../src/eventbus.js';\n\n/*\nsut came with a default handler.\n*/\ntape('Eventbus provides a default handler', function(assert) {\n  var defaultHandler = { command: \"default\", behave: function(msg) { console.log(\"Not aware of: \" + JSON.stringify(msg))} };\n  var sut = new Eventbus;\n  assert.ok(newSutCameWithASingleDefaultHandler(sut), 'Eventbus: should have a single default handler.');\n  assert.end();\n});\n\nfunction newSutCameWithASingleDefaultHandler(sut) {\n  return sut.handlers.size == 1 && typeof sut.handlers.get('default') === 'function';\n};\n\n/*\nwhen eventbus receives a message with no 'command', he discard it and returns a copy of state immutated.\n*/\ntape('When sut receives a message with no \"command\", he dumps it.', function(assert) {\n  var message = {};\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has no \"command\".');\n  assert.end();\n});\n\n/*\nwhen eventbus receives a message with a 'command' he is not aware of, he discard it and returns a copy of state immutated.\n*/\ntape('When sut receives a message with a \"command\" he is not aware of, he discard it and returns a copy of state immutated.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has unmanageable \"command\".');\n  assert.end();\n});\n\n/*\neventbus always returns a copy of the managed state, even if managed state was left unchanged while handling.\n*/\ntape('Eventbus always returns a copy of the managed state.', function(assert) {\n  var message = {};\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(statesAreEqualButNotTheSameObject(state, sut.accept(message, state)), 'Eventbus: state should a copy not the same object.');\n  assert.end();\n});\n\nfunction statesAreEqualButNotTheSameObject(originalState, copyState) {\n  return lodash.isEqual(originalState, copyState) && originalState !== copyState;\n};\n\n/*\nwhen a wrong handler is setted, eventbus manage the error and returns an immutated copy of state.\n*/\ntape('When sut handles a message with an invalid handler, he manage the error and returns an immutated copy of state.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n\n  var badHandler = {\n    command: \"dosomething\",\n    behave: function(msg, state) {\n      throw 'Unexpected error!';\n    }\n  }\n\n  sut.handlers.set(\"dosomething\", badHandler);\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message is managed by wrong or invalid handler.');\n  assert.end();\n});\n\n/*\nwhen eventbus receives a message with a 'command' he is aware of, he passes the message to the handler and returns an updated copy of state.\n*/\ntape('When sut receives a message he can handle, he passes a copy of message and a copy of the state to the proper handler.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n\n  var someHandler = {\n    command: \"dosomething\",\n    behave: function(msg, state) {\n      state.name = \"Joe\";\n      return state;\n    }\n  }\n\n  sut.handlers.set(\"dosomething\", someHandler);\n  assert.ok(statesAreEqualButNotTheSameObject({ say: \"hello\", name: \"Joe\" }, sut.accept(message, state)), 'Eventbus: state should be updated accordingly by adding a \"name\" valued \"Joe\" property.');\n  assert.end();\n});\n\n/*\n\n*/\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633820920625
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/monova/eventbus/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/monova/eventbus\",\"filename\":\"/home/fpezzati/workspace/monova/eventbus/src/eventbus.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/monova/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/monova/eventbus",
      "filename": "/home/fpezzati/workspace/monova/eventbus/src/eventbus.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/monova/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/monova/eventbus/src/eventbus.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/monova/eventbus/src/eventbus.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/src/",
        "sourceFileName": "eventbus.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Eventbus = /*#__PURE__*/function () {\n  function Eventbus() {\n    var defaultHandler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      command: \"default\",\n      behave: function behave(msg, state) {\n        console.log(\"Not aware of: \" + JSON.stringify(msg));\n        return state;\n      }\n    };\n\n    _classCallCheck(this, Eventbus);\n\n    this.handlers = new Map();\n    this.handlers.set(defaultHandler.command, defaultHandler.behave);\n  }\n\n  _createClass(Eventbus, [{\n    key: \"accept\",\n    value: function accept(message, state) {\n      try {\n        var copyedState = JSON.parse(JSON.stringify(state));\n        var copyedMessage = JSON.parse(JSON.stringify(message));\n\n        if (typeof this.handlers.get(message.command) === 'undefined') {\n          return this.handlers.get('default').call(this, copyedMessage, copyedState);\n        }\n\n        return this.handlers.get(message.command)['behave'](copyedMessage, copyedState);\n      } catch (error) {\n        return JSON.parse(JSON.stringify(copyedState));\n      }\n    }\n  }]);\n\n  return Eventbus;\n}();\n\n;\nvar _default = Eventbus;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50YnVzLmpzIl0sIm5hbWVzIjpbIkV2ZW50YnVzIiwiZGVmYXVsdEhhbmRsZXIiLCJjb21tYW5kIiwiYmVoYXZlIiwibXNnIiwic3RhdGUiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImhhbmRsZXJzIiwiTWFwIiwic2V0IiwibWVzc2FnZSIsImNvcHllZFN0YXRlIiwicGFyc2UiLCJjb3B5ZWRNZXNzYWdlIiwiZ2V0IiwiY2FsbCIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0lBQU1BLFE7QUFFSixzQkFNRztBQUFBLFFBTlNDLGNBTVQsdUVBTjBCO0FBQzNCQyxNQUFBQSxPQUFPLEVBQUUsU0FEa0I7QUFFM0JDLE1BQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjQyxLQUFkLEVBQXFCO0FBQzNCQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBbUJDLElBQUksQ0FBQ0MsU0FBTCxDQUFlTCxHQUFmLENBQS9CO0FBQ0EsZUFBT0MsS0FBUDtBQUNEO0FBTDBCLEtBTTFCOztBQUFBOztBQUNELFNBQUtLLFFBQUwsR0FBZ0IsSUFBSUMsR0FBSixFQUFoQjtBQUNBLFNBQUtELFFBQUwsQ0FBY0UsR0FBZCxDQUFrQlgsY0FBYyxDQUFDQyxPQUFqQyxFQUEwQ0QsY0FBYyxDQUFDRSxNQUF6RDtBQUNEOzs7O1dBRUQsZ0JBQU9VLE9BQVAsRUFBZ0JSLEtBQWhCLEVBQXVCO0FBQ3JCLFVBQUk7QUFDRixZQUFJUyxXQUFXLEdBQUdOLElBQUksQ0FBQ08sS0FBTCxDQUFXUCxJQUFJLENBQUNDLFNBQUwsQ0FBZUosS0FBZixDQUFYLENBQWxCO0FBQ0EsWUFBSVcsYUFBYSxHQUFHUixJQUFJLENBQUNPLEtBQUwsQ0FBV1AsSUFBSSxDQUFDQyxTQUFMLENBQWVJLE9BQWYsQ0FBWCxDQUFwQjs7QUFDQSxZQUFHLE9BQU8sS0FBS0gsUUFBTCxDQUFjTyxHQUFkLENBQWtCSixPQUFPLENBQUNYLE9BQTFCLENBQVAsS0FBOEMsV0FBakQsRUFBOEQ7QUFDNUQsaUJBQU8sS0FBS1EsUUFBTCxDQUFjTyxHQUFkLENBQWtCLFNBQWxCLEVBQTZCQyxJQUE3QixDQUFrQyxJQUFsQyxFQUF3Q0YsYUFBeEMsRUFBdURGLFdBQXZELENBQVA7QUFDRDs7QUFDRCxlQUFPLEtBQUtKLFFBQUwsQ0FBY08sR0FBZCxDQUFrQkosT0FBTyxDQUFDWCxPQUExQixFQUFtQyxRQUFuQyxFQUE2Q2MsYUFBN0MsRUFBNERGLFdBQTVELENBQVA7QUFDRCxPQVBELENBT0UsT0FBT0ssS0FBUCxFQUFjO0FBQ2QsZUFBT1gsSUFBSSxDQUFDTyxLQUFMLENBQVdQLElBQUksQ0FBQ0MsU0FBTCxDQUFlSyxXQUFmLENBQVgsQ0FBUDtBQUNEO0FBQ0Y7Ozs7OztBQUNGO2VBRWNkLFEiLCJzb3VyY2VSb290IjoiL2hvbWUvZnBlenphdGkvd29ya3NwYWNlL21vbm92YS9ldmVudGJ1cy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRXZlbnRidXMge1xuXG4gIGNvbnN0cnVjdG9yKGRlZmF1bHRIYW5kbGVyID0ge1xuICAgIGNvbW1hbmQ6IFwiZGVmYXVsdFwiLFxuICAgIGJlaGF2ZTogZnVuY3Rpb24obXNnLCBzdGF0ZSkge1xuICAgICAgY29uc29sZS5sb2coXCJOb3QgYXdhcmUgb2Y6IFwiICsgSlNPTi5zdHJpbmdpZnkobXNnKSk7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9KSB7XG4gICAgdGhpcy5oYW5kbGVycyA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLmhhbmRsZXJzLnNldChkZWZhdWx0SGFuZGxlci5jb21tYW5kLCBkZWZhdWx0SGFuZGxlci5iZWhhdmUpO1xuICB9XG5cbiAgYWNjZXB0KG1lc3NhZ2UsIHN0YXRlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBjb3B5ZWRTdGF0ZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3RhdGUpKTtcbiAgICAgIHZhciBjb3B5ZWRNZXNzYWdlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShtZXNzYWdlKSk7XG4gICAgICBpZih0eXBlb2YgdGhpcy5oYW5kbGVycy5nZXQobWVzc2FnZS5jb21tYW5kKSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlcnMuZ2V0KCdkZWZhdWx0JykuY2FsbCh0aGlzLCBjb3B5ZWRNZXNzYWdlLCBjb3B5ZWRTdGF0ZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5oYW5kbGVycy5nZXQobWVzc2FnZS5jb21tYW5kKVsnYmVoYXZlJ10oY29weWVkTWVzc2FnZSwgY29weWVkU3RhdGUpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjb3B5ZWRTdGF0ZSkpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgRXZlbnRidXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "eventbus.js"
      ],
      "names": [
        "Eventbus",
        "defaultHandler",
        "command",
        "behave",
        "msg",
        "state",
        "console",
        "log",
        "JSON",
        "stringify",
        "handlers",
        "Map",
        "set",
        "message",
        "copyedState",
        "parse",
        "copyedMessage",
        "get",
        "call",
        "error"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,Q;AAEJ,sBAMG;AAAA,QANSC,cAMT,uEAN0B;AAC3BC,MAAAA,OAAO,EAAE,SADkB;AAE3BC,MAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeL,GAAf,CAA/B;AACA,eAAOC,KAAP;AACD;AAL0B,KAM1B;;AAAA;;AACD,SAAKK,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACA,SAAKD,QAAL,CAAcE,GAAd,CAAkBX,cAAc,CAACC,OAAjC,EAA0CD,cAAc,CAACE,MAAzD;AACD;;;;WAED,gBAAOU,OAAP,EAAgBR,KAAhB,EAAuB;AACrB,UAAI;AACF,YAAIS,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAX,CAAlB;AACA,YAAIW,aAAa,GAAGR,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeI,OAAf,CAAX,CAApB;;AACA,YAAG,OAAO,KAAKH,QAAL,CAAcO,GAAd,CAAkBJ,OAAO,CAACX,OAA1B,CAAP,KAA8C,WAAjD,EAA8D;AAC5D,iBAAO,KAAKQ,QAAL,CAAcO,GAAd,CAAkB,SAAlB,EAA6BC,IAA7B,CAAkC,IAAlC,EAAwCF,aAAxC,EAAuDF,WAAvD,CAAP;AACD;;AACD,eAAO,KAAKJ,QAAL,CAAcO,GAAd,CAAkBJ,OAAO,CAACX,OAA1B,EAAmC,QAAnC,EAA6Cc,aAA7C,EAA4DF,WAA5D,CAAP;AACD,OAPD,CAOE,OAAOK,KAAP,EAAc;AACd,eAAOX,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeK,WAAf,CAAX,CAAP;AACD;AACF;;;;;;AACF;eAEcd,Q",
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/src/",
      "sourcesContent": [
        "class Eventbus {\n\n  constructor(defaultHandler = {\n    command: \"default\",\n    behave: function(msg, state) {\n      console.log(\"Not aware of: \" + JSON.stringify(msg));\n      return state;\n    }\n  }) {\n    this.handlers = new Map();\n    this.handlers.set(defaultHandler.command, defaultHandler.behave);\n  }\n\n  accept(message, state) {\n    try {\n      var copyedState = JSON.parse(JSON.stringify(state));\n      var copyedMessage = JSON.parse(JSON.stringify(message));\n      if(typeof this.handlers.get(message.command) === 'undefined') {\n        return this.handlers.get('default').call(this, copyedMessage, copyedState);\n      }\n      return this.handlers.get(message.command)['behave'](copyedMessage, copyedState);\n    } catch (error) {\n      return JSON.parse(JSON.stringify(copyedState));\n    }\n  }\n};\n\nexport default Eventbus;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633884863822
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/monova/eventbus/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/monova/eventbus\",\"filename\":\"/home/fpezzati/workspace/monova/eventbus/test/ctrlz.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/monova/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/monova/eventbus",
      "filename": "/home/fpezzati/workspace/monova/eventbus/test/ctrlz.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/monova/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/monova/eventbus/test/ctrlz.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/monova/eventbus/test/ctrlz.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/",
        "sourceFileName": "ctrlz.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _eventbus = _interopRequireDefault(require(\"../src/eventbus.js\"));\n\nvar _ctrlz = _interopRequireDefault(require(\"../src/ctrlz.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\nCtrlz keeps an application's state copy and a collection of already occurred events.\n\nUser wants to return back to, let's say three events earlier in time. Ctrlz pick state copy and applies all the events he stored\nminus three.\n\nCtrlz relies on Eventbus quite much..\n\n-TESTS\n\nAs event arrives, if status is 'undefined', Ctrlz puts event in queue and stores a copy of application's state too.\n\nAs event arrives, if status is not 'undefined', Ctrl puts event in queue only.\n\nAs event arrives, if status is not 'undefined' and queue is full, a special event is dispatched with a copy of status and the first\nevent in queue. Say 'n' is the size of the queue, that event will trigger update of the 'n' old status by something(?) who knows how\nto manage that 'n' event to obtain an 'n-1' in time status. Event sent is removed from the queue.\n\nCtrlz provides an handler to manage 'return at status x in time': handler manage an event shipping status and all the events in queue that\noccurr after x. Handler dispatch all the events in the message one by one in the given order and collect returned status. Event sent are\nnot consumed and won't be removed from queue.\n*/\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nCtrlz is created with an 'undefined' as status to keep and an empty events queue.\n*/\ntape('sut is created with undefined as status and an empty events queue.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  assert.ok(brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(sut));\n  assert.end();\n});\n\nfunction brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(ctrlz) {\n  return lodash.isUndefined(ctrlz.status) && lodash.isEmpty(ctrlz.eventqueue);\n}\n/*\nIf no queue size is specified, default max size is 10.\n*/\n\n\ntape('if no size is provided, sut set a default value of 10 as queue max size', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  assert.equals(sut.queueMaxSize, 10, '10 is the default Ctrlz\\'s queue max size');\n  assert.end();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN0cmx6LnRlc3QuanMiXSwibmFtZXMiOlsidGFwZSIsInJlcXVpcmUiLCJsb2Rhc2giLCJhc3NlcnQiLCJzdXQiLCJDdHJseiIsIm9rIiwiYnJhbmROZXdDdHJsekhhc1VuZGVmaW5lZFN0YXR1c0FuZEVtcHR5RXZlbnRRdWV1ZSIsImVuZCIsImN0cmx6IiwiaXNVbmRlZmluZWQiLCJzdGF0dXMiLCJpc0VtcHR5IiwiZXZlbnRxdWV1ZSIsImVxdWFscyIsInF1ZXVlTWF4U2l6ZSJdLCJtYXBwaW5ncyI6Ijs7QUF3QkE7O0FBQ0E7Ozs7QUF6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQWxCOztBQUNBLElBQUlDLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBSUE7QUFDQTtBQUNBO0FBQ0FELElBQUksQ0FBQyxvRUFBRCxFQUF1RSxVQUFTRyxNQUFULEVBQWdCO0FBQ3pGLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxpQkFBSixFQUFWO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0csRUFBUCxDQUFVQyxpREFBaUQsQ0FBQ0gsR0FBRCxDQUEzRDtBQUNBRCxFQUFBQSxNQUFNLENBQUNLLEdBQVA7QUFDRCxDQUpHLENBQUo7O0FBTUEsU0FBU0QsaURBQVQsQ0FBMkRFLEtBQTNELEVBQWtFO0FBQ2hFLFNBQU9QLE1BQU0sQ0FBQ1EsV0FBUCxDQUFtQkQsS0FBSyxDQUFDRSxNQUF6QixLQUFvQ1QsTUFBTSxDQUFDVSxPQUFQLENBQWVILEtBQUssQ0FBQ0ksVUFBckIsQ0FBM0M7QUFDRDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ0FiLElBQUksQ0FBQyx5RUFBRCxFQUE0RSxVQUFTRyxNQUFULEVBQWdCO0FBQzlGLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxpQkFBSixFQUFWO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ1csTUFBUCxDQUFjVixHQUFHLENBQUNXLFlBQWxCLEVBQWdDLEVBQWhDLEVBQW9DLDJDQUFwQztBQUNBWixFQUFBQSxNQUFNLENBQUNLLEdBQVA7QUFDRCxDQUpHLENBQUoiLCJzb3VyY2VSb290IjoiL2hvbWUvZnBlenphdGkvd29ya3NwYWNlL21vbm92YS9ldmVudGJ1cy90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5DdHJseiBrZWVwcyBhbiBhcHBsaWNhdGlvbidzIHN0YXRlIGNvcHkgYW5kIGEgY29sbGVjdGlvbiBvZiBhbHJlYWR5IG9jY3VycmVkIGV2ZW50cy5cblxuVXNlciB3YW50cyB0byByZXR1cm4gYmFjayB0bywgbGV0J3Mgc2F5IHRocmVlIGV2ZW50cyBlYXJsaWVyIGluIHRpbWUuIEN0cmx6IHBpY2sgc3RhdGUgY29weSBhbmQgYXBwbGllcyBhbGwgdGhlIGV2ZW50cyBoZSBzdG9yZWRcbm1pbnVzIHRocmVlLlxuXG5DdHJseiByZWxpZXMgb24gRXZlbnRidXMgcXVpdGUgbXVjaC4uXG5cbi1URVNUU1xuXG5BcyBldmVudCBhcnJpdmVzLCBpZiBzdGF0dXMgaXMgJ3VuZGVmaW5lZCcsIEN0cmx6IHB1dHMgZXZlbnQgaW4gcXVldWUgYW5kIHN0b3JlcyBhIGNvcHkgb2YgYXBwbGljYXRpb24ncyBzdGF0ZSB0b28uXG5cbkFzIGV2ZW50IGFycml2ZXMsIGlmIHN0YXR1cyBpcyBub3QgJ3VuZGVmaW5lZCcsIEN0cmwgcHV0cyBldmVudCBpbiBxdWV1ZSBvbmx5LlxuXG5BcyBldmVudCBhcnJpdmVzLCBpZiBzdGF0dXMgaXMgbm90ICd1bmRlZmluZWQnIGFuZCBxdWV1ZSBpcyBmdWxsLCBhIHNwZWNpYWwgZXZlbnQgaXMgZGlzcGF0Y2hlZCB3aXRoIGEgY29weSBvZiBzdGF0dXMgYW5kIHRoZSBmaXJzdFxuZXZlbnQgaW4gcXVldWUuIFNheSAnbicgaXMgdGhlIHNpemUgb2YgdGhlIHF1ZXVlLCB0aGF0IGV2ZW50IHdpbGwgdHJpZ2dlciB1cGRhdGUgb2YgdGhlICduJyBvbGQgc3RhdHVzIGJ5IHNvbWV0aGluZyg/KSB3aG8ga25vd3MgaG93XG50byBtYW5hZ2UgdGhhdCAnbicgZXZlbnQgdG8gb2J0YWluIGFuICduLTEnIGluIHRpbWUgc3RhdHVzLiBFdmVudCBzZW50IGlzIHJlbW92ZWQgZnJvbSB0aGUgcXVldWUuXG5cbkN0cmx6IHByb3ZpZGVzIGFuIGhhbmRsZXIgdG8gbWFuYWdlICdyZXR1cm4gYXQgc3RhdHVzIHggaW4gdGltZSc6IGhhbmRsZXIgbWFuYWdlIGFuIGV2ZW50IHNoaXBwaW5nIHN0YXR1cyBhbmQgYWxsIHRoZSBldmVudHMgaW4gcXVldWUgdGhhdFxub2NjdXJyIGFmdGVyIHguIEhhbmRsZXIgZGlzcGF0Y2ggYWxsIHRoZSBldmVudHMgaW4gdGhlIG1lc3NhZ2Ugb25lIGJ5IG9uZSBpbiB0aGUgZ2l2ZW4gb3JkZXIgYW5kIGNvbGxlY3QgcmV0dXJuZWQgc3RhdHVzLiBFdmVudCBzZW50IGFyZVxubm90IGNvbnN1bWVkIGFuZCB3b24ndCBiZSByZW1vdmVkIGZyb20gcXVldWUuXG4qL1xudmFyIHRhcGUgPSByZXF1aXJlKCd0YXBlJyk7XG52YXIgbG9kYXNoID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5pbXBvcnQgRXZlbnRidXMgZnJvbSAnLi4vc3JjL2V2ZW50YnVzLmpzJztcbmltcG9ydCBDdHJseiBmcm9tICcuLi9zcmMvY3RybHouanMnO1xuXG4vKlxuQ3RybHogaXMgY3JlYXRlZCB3aXRoIGFuICd1bmRlZmluZWQnIGFzIHN0YXR1cyB0byBrZWVwIGFuZCBhbiBlbXB0eSBldmVudHMgcXVldWUuXG4qL1xudGFwZSgnc3V0IGlzIGNyZWF0ZWQgd2l0aCB1bmRlZmluZWQgYXMgc3RhdHVzIGFuZCBhbiBlbXB0eSBldmVudHMgcXVldWUuJywgZnVuY3Rpb24oYXNzZXJ0KXtcbiAgdmFyIHN1dCA9IG5ldyBDdHJsejtcbiAgYXNzZXJ0Lm9rKGJyYW5kTmV3Q3RybHpIYXNVbmRlZmluZWRTdGF0dXNBbmRFbXB0eUV2ZW50UXVldWUoc3V0KSk7XG4gIGFzc2VydC5lbmQoKTtcbn0pO1xuXG5mdW5jdGlvbiBicmFuZE5ld0N0cmx6SGFzVW5kZWZpbmVkU3RhdHVzQW5kRW1wdHlFdmVudFF1ZXVlKGN0cmx6KSB7XG4gIHJldHVybiBsb2Rhc2guaXNVbmRlZmluZWQoY3RybHouc3RhdHVzKSAmJiBsb2Rhc2guaXNFbXB0eShjdHJsei5ldmVudHF1ZXVlKTtcbn1cblxuLypcbklmIG5vIHF1ZXVlIHNpemUgaXMgc3BlY2lmaWVkLCBkZWZhdWx0IG1heCBzaXplIGlzIDEwLlxuKi9cbnRhcGUoJ2lmIG5vIHNpemUgaXMgcHJvdmlkZWQsIHN1dCBzZXQgYSBkZWZhdWx0IHZhbHVlIG9mIDEwIGFzIHF1ZXVlIG1heCBzaXplJywgZnVuY3Rpb24oYXNzZXJ0KXtcbiAgdmFyIHN1dCA9IG5ldyBDdHJsejtcbiAgYXNzZXJ0LmVxdWFscyhzdXQucXVldWVNYXhTaXplLCAxMCwgJzEwIGlzIHRoZSBkZWZhdWx0IEN0cmx6XFwncyBxdWV1ZSBtYXggc2l6ZScpO1xuICBhc3NlcnQuZW5kKCk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ctrlz.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "sut",
        "Ctrlz",
        "ok",
        "brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue",
        "end",
        "ctrlz",
        "isUndefined",
        "status",
        "isEmpty",
        "eventqueue",
        "equals",
        "queueMaxSize"
      ],
      "mappings": ";;AAwBA;;AACA;;;;AAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAIA;AACA;AACA;AACAD,IAAI,CAAC,oEAAD,EAAuE,UAASG,MAAT,EAAgB;AACzF,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACG,EAAP,CAAUC,iDAAiD,CAACH,GAAD,CAA3D;AACAD,EAAAA,MAAM,CAACK,GAAP;AACD,CAJG,CAAJ;;AAMA,SAASD,iDAAT,CAA2DE,KAA3D,EAAkE;AAChE,SAAOP,MAAM,CAACQ,WAAP,CAAmBD,KAAK,CAACE,MAAzB,KAAoCT,MAAM,CAACU,OAAP,CAAeH,KAAK,CAACI,UAArB,CAA3C;AACD;AAED;AACA;AACA;;;AACAb,IAAI,CAAC,yEAAD,EAA4E,UAASG,MAAT,EAAgB;AAC9F,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACW,MAAP,CAAcV,GAAG,CAACW,YAAlB,EAAgC,EAAhC,EAAoC,2CAApC;AACAZ,EAAAA,MAAM,CAACK,GAAP;AACD,CAJG,CAAJ",
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/test/",
      "sourcesContent": [
        "/*\nCtrlz keeps an application's state copy and a collection of already occurred events.\n\nUser wants to return back to, let's say three events earlier in time. Ctrlz pick state copy and applies all the events he stored\nminus three.\n\nCtrlz relies on Eventbus quite much..\n\n-TESTS\n\nAs event arrives, if status is 'undefined', Ctrlz puts event in queue and stores a copy of application's state too.\n\nAs event arrives, if status is not 'undefined', Ctrl puts event in queue only.\n\nAs event arrives, if status is not 'undefined' and queue is full, a special event is dispatched with a copy of status and the first\nevent in queue. Say 'n' is the size of the queue, that event will trigger update of the 'n' old status by something(?) who knows how\nto manage that 'n' event to obtain an 'n-1' in time status. Event sent is removed from the queue.\n\nCtrlz provides an handler to manage 'return at status x in time': handler manage an event shipping status and all the events in queue that\noccurr after x. Handler dispatch all the events in the message one by one in the given order and collect returned status. Event sent are\nnot consumed and won't be removed from queue.\n*/\nvar tape = require('tape');\nvar lodash = require('lodash');\nimport Eventbus from '../src/eventbus.js';\nimport Ctrlz from '../src/ctrlz.js';\n\n/*\nCtrlz is created with an 'undefined' as status to keep and an empty events queue.\n*/\ntape('sut is created with undefined as status and an empty events queue.', function(assert){\n  var sut = new Ctrlz;\n  assert.ok(brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(sut));\n  assert.end();\n});\n\nfunction brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(ctrlz) {\n  return lodash.isUndefined(ctrlz.status) && lodash.isEmpty(ctrlz.eventqueue);\n}\n\n/*\nIf no queue size is specified, default max size is 10.\n*/\ntape('if no size is provided, sut set a default value of 10 as queue max size', function(assert){\n  var sut = new Ctrlz;\n  assert.equals(sut.queueMaxSize, 10, '10 is the default Ctrlz\\'s queue max size');\n  assert.end();\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633896802293
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/monova/eventbus/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/monova/eventbus\",\"filename\":\"/home/fpezzati/workspace/monova/eventbus/src/ctrlz.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/monova/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/monova/eventbus",
      "filename": "/home/fpezzati/workspace/monova/eventbus/src/ctrlz.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/monova/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/monova/eventbus/src/ctrlz.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/monova/eventbus/src/ctrlz.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/src/",
        "sourceFileName": "ctrlz.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Ctrlz = function Ctrlz() {\n  var queuesize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n\n  _classCallCheck(this, Ctrlz);\n\n  this.queueMaxSize = queuesize;\n  this.status = undefined;\n};\n\nvar _default = Ctrlz;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN0cmx6LmpzIl0sIm5hbWVzIjpbIkN0cmx6IiwicXVldWVzaXplIiwicXVldWVNYXhTaXplIiwic3RhdHVzIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7SUFBTUEsSyxHQUNKLGlCQUE0QjtBQUFBLE1BQWhCQyxTQUFnQix1RUFBSixFQUFJOztBQUFBOztBQUMxQixPQUFLQyxZQUFMLEdBQW9CRCxTQUFwQjtBQUNBLE9BQUtFLE1BQUwsR0FBY0MsU0FBZDtBQUNELEM7O2VBRVlKLEsiLCJzb3VyY2VSb290IjoiL2hvbWUvZnBlenphdGkvd29ya3NwYWNlL21vbm92YS9ldmVudGJ1cy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ3RybHoge1xuICBjb25zdHJ1Y3RvcihxdWV1ZXNpemUgPSAxMCkge1xuICAgIHRoaXMucXVldWVNYXhTaXplID0gcXVldWVzaXplO1xuICAgIHRoaXMuc3RhdHVzID0gdW5kZWZpbmVkO1xuICB9XG59XG5leHBvcnQgZGVmYXVsdCBDdHJsejtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ctrlz.js"
      ],
      "names": [
        "Ctrlz",
        "queuesize",
        "queueMaxSize",
        "status",
        "undefined"
      ],
      "mappings": ";;;;;;;;;IAAMA,K,GACJ,iBAA4B;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;;AAAA;;AAC1B,OAAKC,YAAL,GAAoBD,SAApB;AACA,OAAKE,MAAL,GAAcC,SAAd;AACD,C;;eAEYJ,K",
      "sourceRoot": "/home/fpezzati/workspace/monova/eventbus/src/",
      "sourcesContent": [
        "class Ctrlz {\n  constructor(queuesize = 10) {\n    this.queueMaxSize = queuesize;\n    this.status = undefined;\n  }\n}\nexport default Ctrlz;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633896500865
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventbus/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventbus\",\"filename\":\"/home/fpezzati/workspace/movona/eventbus/test/ctrlz.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventbus",
      "filename": "/home/fpezzati/workspace/movona/eventbus/test/ctrlz.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventbus/test/ctrlz.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventbus/test/ctrlz.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
        "sourceFileName": "ctrlz.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ctrlz = _interopRequireDefault(require(\"../src/ctrlz.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n# Ctrlz\nCtrlz keeps an application's state copy and a collection of already occurred events.\n\nUser wants to return back to, let's say three events earlier in time. Ctrlz pick state copy and applies all the events he stored\nminus three.\n\nCtrlz does not need Eventbus, but Eventbus is Ctrlz's natural symbiont.\n\n## How do Ctrlz interact with Eventbus? Or is Eventbus interacting with Ctrlz?\nEventbus handle events. Events arrive always with status. While finished handling the event, Eventbus pass it and status to Ctrlz.\nCtrlz stores status if none and store event if there are free slots. Ctrlz does not care if event is good or wrong.\n\nSo Eventbus and Ctrlz are completely separated tools developer can use as components.\n\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n-TESTS\n\nAs event arrives, if status is not 'undefined', Ctrl puts event in queue only.\n\nAs event arrives, if status is not 'undefined' and queue is full, a special event is dispatched with a copy of status and the first\nevent in queue. Say 'n' is the size of the queue, that event will trigger update of the 'n' old status by something(?) who knows how\nto manage that 'n' event to obtain an 'n-1' in time status. Event sent is removed from the queue.\n\nCtrlz provides an handler to manage 'return at status x in time': handler manage an event shipping status and all the events in queue that\noccurr after x. Handler dispatch all the events in the message one by one in the given order and collect returned status. Event sent are\nnot consumed and won't be removed from queue.\n*/\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nCtrlz is created with an 'undefined' as status to keep and an empty events queue.\n*/\ntape('Ctrlz is created with undefined as status and an empty events queue.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  assert.ok(brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(sut));\n  assert.end();\n});\n\nfunction brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(ctrlz) {\n  return lodash.isUndefined(ctrlz.status) && lodash.isEmpty(ctrlz.eventqueue);\n}\n\n;\n/*\nIf no queue size is specified, default max size is 10.\n*/\n\ntape('Ctrlz set a default value of 10 as queue max size if no value is provided.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  assert.equals(sut.queueMaxSize, 10, '10 is the default Ctrlz\\'s queue max size');\n  assert.end();\n});\n/*\nCtrlz's queue is empty and an event arrives. Because queue is empty, state is updated too.\n*/\n\ntape('Ctrlz stores in the queue the first event that comes and updates its state.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  var command = {\n    say: \"hello\"\n  };\n  var state = {\n    hello_count: 0\n  };\n  sut.accept(command, state);\n  assert.ok(ctrlzStoresStateAndEvents(sut, [command], state));\n  assert.end();\n});\n/*\nCtrlz's queue already stores 3 events and an event arrives. Ctrlz's state is left unchanged.\n*/\n\ntape('Ctrlz stores the third incoming event in queue\\'s third position.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  sut.accept({\n    add: 1\n  }, {\n    count: 0\n  });\n  sut.accept({\n    add: 2\n  }, {\n    count: 1\n  });\n  sut.accept({\n    add: 3\n  }, {\n    count: 3\n  });\n  assert.ok(ctrlzStoresStateAndEvents(sut, [{\n    add: 1\n  }, {\n    add: 2\n  }, {\n    add: 3\n  }], {\n    count: 0\n  }));\n  assert.end();\n});\n\nfunction ctrlzStoresStateAndEvents(ctrlz, commands, state) {\n  return lodash.isEqual(ctrlz.queue, commands) && lodash.isEqual(ctrlz.state, state);\n}\n\n;\n/*\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n\nCtrlz's queue is full and an event arrives.\n*/\n\ntape('Ctrlz has a default handler that listen for events to store them.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  fillCtrlzQueue(sut, getTenCommands());\n  sut.accept({\n    add: 10\n  }, {\n    count: 45\n  });\n  assert.ok(ctrlzStoresStateAndEvents(sut, getExpectedTenCommands(), {\n    count: 0\n  }));\n  assert.end();\n});\n\nfunction getTenCommands() {\n  return [{\n    add: 0\n  }, {\n    add: 1\n  }, {\n    add: 2\n  }, {\n    add: 3\n  }, {\n    add: 4\n  }, {\n    add: 5\n  }, {\n    add: 6\n  }, {\n    add: 7\n  }, {\n    add: 8\n  }, {\n    add: 9\n  }];\n}\n\nfunction getExpectedTenCommands() {\n  var expected = getTenCommands();\n  expected = expected.slice(1);\n  expected.push({\n    add: 10\n  });\n  return expected;\n}\n\nfunction fillCtrlzQueue(sut, commands) {\n  commands.forEach(function (command) {\n    sut.accept(command, {\n      count: 0\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN0cmx6LnRlc3QuanMiXSwibmFtZXMiOlsidGFwZSIsInJlcXVpcmUiLCJsb2Rhc2giLCJhc3NlcnQiLCJzdXQiLCJDdHJseiIsIm9rIiwiYnJhbmROZXdDdHJsekhhc1VuZGVmaW5lZFN0YXR1c0FuZEVtcHR5RXZlbnRRdWV1ZSIsImVuZCIsImN0cmx6IiwiaXNVbmRlZmluZWQiLCJzdGF0dXMiLCJpc0VtcHR5IiwiZXZlbnRxdWV1ZSIsImVxdWFscyIsInF1ZXVlTWF4U2l6ZSIsImNvbW1hbmQiLCJzYXkiLCJzdGF0ZSIsImhlbGxvX2NvdW50IiwiYWNjZXB0IiwiY3RybHpTdG9yZXNTdGF0ZUFuZEV2ZW50cyIsImFkZCIsImNvdW50IiwiY29tbWFuZHMiLCJpc0VxdWFsIiwicXVldWUiLCJmaWxsQ3RybHpRdWV1ZSIsImdldFRlbkNvbW1hbmRzIiwiZ2V0RXhwZWN0ZWRUZW5Db21tYW5kcyIsImV4cGVjdGVkIiwic2xpY2UiLCJwdXNoIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6Ijs7QUFtQ0E7Ozs7QUFuQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUdBO0FBQ0E7QUFDQTtBQUNBRCxJQUFJLENBQUMsc0VBQUQsRUFBeUUsVUFBU0csTUFBVCxFQUFnQjtBQUMzRixNQUFJQyxHQUFHLEdBQUcsSUFBSUMsaUJBQUosRUFBVjtBQUNBRixFQUFBQSxNQUFNLENBQUNHLEVBQVAsQ0FBVUMsaURBQWlELENBQUNILEdBQUQsQ0FBM0Q7QUFDQUQsRUFBQUEsTUFBTSxDQUFDSyxHQUFQO0FBQ0QsQ0FKRyxDQUFKOztBQU1BLFNBQVNELGlEQUFULENBQTJERSxLQUEzRCxFQUFrRTtBQUNoRSxTQUFPUCxNQUFNLENBQUNRLFdBQVAsQ0FBbUJELEtBQUssQ0FBQ0UsTUFBekIsS0FBb0NULE1BQU0sQ0FBQ1UsT0FBUCxDQUFlSCxLQUFLLENBQUNJLFVBQXJCLENBQTNDO0FBQ0Q7O0FBQUE7QUFFRDtBQUNBO0FBQ0E7O0FBQ0FiLElBQUksQ0FBQyw0RUFBRCxFQUErRSxVQUFTRyxNQUFULEVBQWdCO0FBQ2pHLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxpQkFBSixFQUFWO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ1csTUFBUCxDQUFjVixHQUFHLENBQUNXLFlBQWxCLEVBQWdDLEVBQWhDLEVBQW9DLDJDQUFwQztBQUNBWixFQUFBQSxNQUFNLENBQUNLLEdBQVA7QUFDRCxDQUpHLENBQUo7QUFNQTtBQUNBO0FBQ0E7O0FBQ0FSLElBQUksQ0FBQyw2RUFBRCxFQUFnRixVQUFTRyxNQUFULEVBQWdCO0FBQ2xHLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxpQkFBSixFQUFWO0FBQ0EsTUFBSVcsT0FBTyxHQUFHO0FBQUVDLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQWQ7QUFDQSxNQUFJQyxLQUFLLEdBQUc7QUFBRUMsSUFBQUEsV0FBVyxFQUFFO0FBQWYsR0FBWjtBQUNBZixFQUFBQSxHQUFHLENBQUNnQixNQUFKLENBQVdKLE9BQVgsRUFBb0JFLEtBQXBCO0FBQ0FmLEVBQUFBLE1BQU0sQ0FBQ0csRUFBUCxDQUFVZSx5QkFBeUIsQ0FBQ2pCLEdBQUQsRUFBTSxDQUFFWSxPQUFGLENBQU4sRUFBbUJFLEtBQW5CLENBQW5DO0FBQ0FmLEVBQUFBLE1BQU0sQ0FBQ0ssR0FBUDtBQUNELENBUEcsQ0FBSjtBQVNBO0FBQ0E7QUFDQTs7QUFDQVIsSUFBSSxDQUFDLG1FQUFELEVBQXNFLFVBQVNHLE1BQVQsRUFBZ0I7QUFDeEYsTUFBSUMsR0FBRyxHQUFHLElBQUlDLGlCQUFKLEVBQVY7QUFDQUQsRUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXO0FBQUVFLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQVgsRUFBdUI7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBdkI7QUFDQW5CLEVBQUFBLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBVztBQUFFRSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUFYLEVBQXVCO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQXZCO0FBQ0FuQixFQUFBQSxHQUFHLENBQUNnQixNQUFKLENBQVc7QUFBRUUsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FBWCxFQUF1QjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUF2QjtBQUNBcEIsRUFBQUEsTUFBTSxDQUFDRyxFQUFQLENBQVVlLHlCQUF5QixDQUFDakIsR0FBRCxFQUFNLENBQUM7QUFBRWtCLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQUQsRUFBYTtBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUFiLEVBQXlCO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQXpCLENBQU4sRUFBNEM7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBNUMsQ0FBbkM7QUFDQXBCLEVBQUFBLE1BQU0sQ0FBQ0ssR0FBUDtBQUNELENBUEcsQ0FBSjs7QUFTQSxTQUFTYSx5QkFBVCxDQUFtQ1osS0FBbkMsRUFBMENlLFFBQTFDLEVBQW9ETixLQUFwRCxFQUEyRDtBQUN6RCxTQUFPaEIsTUFBTSxDQUFDdUIsT0FBUCxDQUFlaEIsS0FBSyxDQUFDaUIsS0FBckIsRUFBNEJGLFFBQTVCLEtBQXlDdEIsTUFBTSxDQUFDdUIsT0FBUCxDQUFlaEIsS0FBSyxDQUFDUyxLQUFyQixFQUE0QkEsS0FBNUIsQ0FBaEQ7QUFDRDs7QUFBQTtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBbEIsSUFBSSxDQUFDLG1FQUFELEVBQXNFLFVBQVNHLE1BQVQsRUFBaUI7QUFDekYsTUFBSUMsR0FBRyxHQUFHLElBQUlDLGlCQUFKLEVBQVY7QUFDQXNCLEVBQUFBLGNBQWMsQ0FBQ3ZCLEdBQUQsRUFBTXdCLGNBQWMsRUFBcEIsQ0FBZDtBQUNBeEIsRUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXO0FBQUVFLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQVgsRUFBd0I7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBeEI7QUFDQXBCLEVBQUFBLE1BQU0sQ0FBQ0csRUFBUCxDQUFVZSx5QkFBeUIsQ0FBQ2pCLEdBQUQsRUFBTXlCLHNCQUFzQixFQUE1QixFQUFnQztBQUFFTixJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFoQyxDQUFuQztBQUNBcEIsRUFBQUEsTUFBTSxDQUFDSyxHQUFQO0FBQ0QsQ0FORyxDQUFKOztBQVFBLFNBQVNvQixjQUFULEdBQTBCO0FBQ3hCLFNBQU8sQ0FDTDtBQUFFTixJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQURLLEVBQ087QUFBRUEsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FEUCxFQUNtQjtBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQURuQixFQUMrQjtBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUQvQixFQUMyQztBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUQzQyxFQUVMO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRkssRUFFTztBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUZQLEVBRW1CO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRm5CLEVBRStCO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRi9CLEVBRTJDO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRjNDLENBQVA7QUFJRDs7QUFFRCxTQUFTTyxzQkFBVCxHQUFrQztBQUNoQyxNQUFJQyxRQUFRLEdBQUdGLGNBQWMsRUFBN0I7QUFDQUUsRUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUNDLEtBQVQsQ0FBZSxDQUFmLENBQVg7QUFDQUQsRUFBQUEsUUFBUSxDQUFDRSxJQUFULENBQWM7QUFBRVYsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FBZDtBQUNBLFNBQU9RLFFBQVA7QUFDRDs7QUFFRCxTQUFTSCxjQUFULENBQXdCdkIsR0FBeEIsRUFBNkJvQixRQUE3QixFQUF1QztBQUNyQ0EsRUFBQUEsUUFBUSxDQUFDUyxPQUFULENBQWlCLFVBQUFqQixPQUFPLEVBQUk7QUFBRVosSUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXSixPQUFYLEVBQW9CO0FBQUVPLE1BQUFBLEtBQUssRUFBRTtBQUFULEtBQXBCO0FBQW9DLEdBQWxFO0FBQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvZnBlenphdGkvd29ya3NwYWNlL21vdm9uYS9ldmVudGJ1cy90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4jIEN0cmx6XG5DdHJseiBrZWVwcyBhbiBhcHBsaWNhdGlvbidzIHN0YXRlIGNvcHkgYW5kIGEgY29sbGVjdGlvbiBvZiBhbHJlYWR5IG9jY3VycmVkIGV2ZW50cy5cblxuVXNlciB3YW50cyB0byByZXR1cm4gYmFjayB0bywgbGV0J3Mgc2F5IHRocmVlIGV2ZW50cyBlYXJsaWVyIGluIHRpbWUuIEN0cmx6IHBpY2sgc3RhdGUgY29weSBhbmQgYXBwbGllcyBhbGwgdGhlIGV2ZW50cyBoZSBzdG9yZWRcbm1pbnVzIHRocmVlLlxuXG5DdHJseiBkb2VzIG5vdCBuZWVkIEV2ZW50YnVzLCBidXQgRXZlbnRidXMgaXMgQ3RybHoncyBuYXR1cmFsIHN5bWJpb250LlxuXG4jIyBIb3cgZG8gQ3RybHogaW50ZXJhY3Qgd2l0aCBFdmVudGJ1cz8gT3IgaXMgRXZlbnRidXMgaW50ZXJhY3Rpbmcgd2l0aCBDdHJsej9cbkV2ZW50YnVzIGhhbmRsZSBldmVudHMuIEV2ZW50cyBhcnJpdmUgYWx3YXlzIHdpdGggc3RhdHVzLiBXaGlsZSBmaW5pc2hlZCBoYW5kbGluZyB0aGUgZXZlbnQsIEV2ZW50YnVzIHBhc3MgaXQgYW5kIHN0YXR1cyB0byBDdHJsei5cbkN0cmx6IHN0b3JlcyBzdGF0dXMgaWYgbm9uZSBhbmQgc3RvcmUgZXZlbnQgaWYgdGhlcmUgYXJlIGZyZWUgc2xvdHMuIEN0cmx6IGRvZXMgbm90IGNhcmUgaWYgZXZlbnQgaXMgZ29vZCBvciB3cm9uZy5cblxuU28gRXZlbnRidXMgYW5kIEN0cmx6IGFyZSBjb21wbGV0ZWx5IHNlcGFyYXRlZCB0b29scyBkZXZlbG9wZXIgY2FuIHVzZSBhcyBjb21wb25lbnRzLlxuXG4jIyBXaGF0IGhhcHBlbiB3aGVuIGEgbmV3IGV2ZW50IGFycml2ZXMgYW5kIEN0cmx6J3MgcXVldWUgaXMgZnVsbD9cbkN0cmx6IHBpY2sgdGhlIG9sZGVzdCBldmVudCBpbiBxdWV1ZSBhbmQgcGFzcyBpdCBhbG9uZyB3aXRoIHN0YXRlIHRvIGNvbXBvbmVudCB0aGF0IGlzIGFibGUgdG8gaGFuZGxlIGl0LiBDdHJseiBleHBlY3QgY29tcG9uZW50IHJldHVybnNcbmFuIHVwZGF0ZWQgc3RhdGUuIEN0cmx6IGRvZXMgbm90IGNhcmUgd2hvIGNvbXBvbmVudCByZWFsbHkgaXMsIGlmIG5vIGNvbXBvbmVudCBpcyBwcm92aWRlZCBoZSBzaW1wbHkgdXNlcyB0aGUgbGF0ZXN0IHJlbGlhYmxlIHN0YXRlIGhlXG5zdG9yZXMuXG5PbGRlc3QgZXZlbnQgaXMgcmVtb3ZlZCBmcm9tIHF1ZXVlLCBldmVuIGlmIG5vIGNvbXBvbmVudCBpcyBwcm92aWRlZC5cblxuLVRFU1RTXG5cbkFzIGV2ZW50IGFycml2ZXMsIGlmIHN0YXR1cyBpcyBub3QgJ3VuZGVmaW5lZCcsIEN0cmwgcHV0cyBldmVudCBpbiBxdWV1ZSBvbmx5LlxuXG5BcyBldmVudCBhcnJpdmVzLCBpZiBzdGF0dXMgaXMgbm90ICd1bmRlZmluZWQnIGFuZCBxdWV1ZSBpcyBmdWxsLCBhIHNwZWNpYWwgZXZlbnQgaXMgZGlzcGF0Y2hlZCB3aXRoIGEgY29weSBvZiBzdGF0dXMgYW5kIHRoZSBmaXJzdFxuZXZlbnQgaW4gcXVldWUuIFNheSAnbicgaXMgdGhlIHNpemUgb2YgdGhlIHF1ZXVlLCB0aGF0IGV2ZW50IHdpbGwgdHJpZ2dlciB1cGRhdGUgb2YgdGhlICduJyBvbGQgc3RhdHVzIGJ5IHNvbWV0aGluZyg/KSB3aG8ga25vd3MgaG93XG50byBtYW5hZ2UgdGhhdCAnbicgZXZlbnQgdG8gb2J0YWluIGFuICduLTEnIGluIHRpbWUgc3RhdHVzLiBFdmVudCBzZW50IGlzIHJlbW92ZWQgZnJvbSB0aGUgcXVldWUuXG5cbkN0cmx6IHByb3ZpZGVzIGFuIGhhbmRsZXIgdG8gbWFuYWdlICdyZXR1cm4gYXQgc3RhdHVzIHggaW4gdGltZSc6IGhhbmRsZXIgbWFuYWdlIGFuIGV2ZW50IHNoaXBwaW5nIHN0YXR1cyBhbmQgYWxsIHRoZSBldmVudHMgaW4gcXVldWUgdGhhdFxub2NjdXJyIGFmdGVyIHguIEhhbmRsZXIgZGlzcGF0Y2ggYWxsIHRoZSBldmVudHMgaW4gdGhlIG1lc3NhZ2Ugb25lIGJ5IG9uZSBpbiB0aGUgZ2l2ZW4gb3JkZXIgYW5kIGNvbGxlY3QgcmV0dXJuZWQgc3RhdHVzLiBFdmVudCBzZW50IGFyZVxubm90IGNvbnN1bWVkIGFuZCB3b24ndCBiZSByZW1vdmVkIGZyb20gcXVldWUuXG4qL1xudmFyIHRhcGUgPSByZXF1aXJlKCd0YXBlJyk7XG52YXIgbG9kYXNoID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5pbXBvcnQgQ3RybHogZnJvbSAnLi4vc3JjL2N0cmx6LmpzJztcblxuLypcbkN0cmx6IGlzIGNyZWF0ZWQgd2l0aCBhbiAndW5kZWZpbmVkJyBhcyBzdGF0dXMgdG8ga2VlcCBhbmQgYW4gZW1wdHkgZXZlbnRzIHF1ZXVlLlxuKi9cbnRhcGUoJ0N0cmx6IGlzIGNyZWF0ZWQgd2l0aCB1bmRlZmluZWQgYXMgc3RhdHVzIGFuZCBhbiBlbXB0eSBldmVudHMgcXVldWUuJywgZnVuY3Rpb24oYXNzZXJ0KXtcbiAgdmFyIHN1dCA9IG5ldyBDdHJsejtcbiAgYXNzZXJ0Lm9rKGJyYW5kTmV3Q3RybHpIYXNVbmRlZmluZWRTdGF0dXNBbmRFbXB0eUV2ZW50UXVldWUoc3V0KSk7XG4gIGFzc2VydC5lbmQoKTtcbn0pO1xuXG5mdW5jdGlvbiBicmFuZE5ld0N0cmx6SGFzVW5kZWZpbmVkU3RhdHVzQW5kRW1wdHlFdmVudFF1ZXVlKGN0cmx6KSB7XG4gIHJldHVybiBsb2Rhc2guaXNVbmRlZmluZWQoY3RybHouc3RhdHVzKSAmJiBsb2Rhc2guaXNFbXB0eShjdHJsei5ldmVudHF1ZXVlKTtcbn07XG5cbi8qXG5JZiBubyBxdWV1ZSBzaXplIGlzIHNwZWNpZmllZCwgZGVmYXVsdCBtYXggc2l6ZSBpcyAxMC5cbiovXG50YXBlKCdDdHJseiBzZXQgYSBkZWZhdWx0IHZhbHVlIG9mIDEwIGFzIHF1ZXVlIG1heCBzaXplIGlmIG5vIHZhbHVlIGlzIHByb3ZpZGVkLicsIGZ1bmN0aW9uKGFzc2VydCl7XG4gIHZhciBzdXQgPSBuZXcgQ3RybHo7XG4gIGFzc2VydC5lcXVhbHMoc3V0LnF1ZXVlTWF4U2l6ZSwgMTAsICcxMCBpcyB0aGUgZGVmYXVsdCBDdHJselxcJ3MgcXVldWUgbWF4IHNpemUnKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbi8qXG5DdHJseidzIHF1ZXVlIGlzIGVtcHR5IGFuZCBhbiBldmVudCBhcnJpdmVzLiBCZWNhdXNlIHF1ZXVlIGlzIGVtcHR5LCBzdGF0ZSBpcyB1cGRhdGVkIHRvby5cbiovXG50YXBlKCdDdHJseiBzdG9yZXMgaW4gdGhlIHF1ZXVlIHRoZSBmaXJzdCBldmVudCB0aGF0IGNvbWVzIGFuZCB1cGRhdGVzIGl0cyBzdGF0ZS4nLCBmdW5jdGlvbihhc3NlcnQpe1xuICB2YXIgc3V0ID0gbmV3IEN0cmx6O1xuICB2YXIgY29tbWFuZCA9IHsgc2F5OiBcImhlbGxvXCIgfTtcbiAgdmFyIHN0YXRlID0geyBoZWxsb19jb3VudDogMCB9O1xuICBzdXQuYWNjZXB0KGNvbW1hbmQsIHN0YXRlKTtcbiAgYXNzZXJ0Lm9rKGN0cmx6U3RvcmVzU3RhdGVBbmRFdmVudHMoc3V0LCBbIGNvbW1hbmQgXSwgc3RhdGUpKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbi8qXG5DdHJseidzIHF1ZXVlIGFscmVhZHkgc3RvcmVzIDMgZXZlbnRzIGFuZCBhbiBldmVudCBhcnJpdmVzLiBDdHJseidzIHN0YXRlIGlzIGxlZnQgdW5jaGFuZ2VkLlxuKi9cbnRhcGUoJ0N0cmx6IHN0b3JlcyB0aGUgdGhpcmQgaW5jb21pbmcgZXZlbnQgaW4gcXVldWVcXCdzIHRoaXJkIHBvc2l0aW9uLicsIGZ1bmN0aW9uKGFzc2VydCl7XG4gIHZhciBzdXQgPSBuZXcgQ3RybHo7XG4gIHN1dC5hY2NlcHQoeyBhZGQ6IDEgfSwgeyBjb3VudDogMCB9KTtcbiAgc3V0LmFjY2VwdCh7IGFkZDogMiB9LCB7IGNvdW50OiAxIH0pO1xuICBzdXQuYWNjZXB0KHsgYWRkOiAzIH0sIHsgY291bnQ6IDMgfSk7XG4gIGFzc2VydC5vayhjdHJselN0b3Jlc1N0YXRlQW5kRXZlbnRzKHN1dCwgW3sgYWRkOiAxIH0sIHsgYWRkOiAyIH0sIHsgYWRkOiAzIH1dLCB7IGNvdW50OiAwIH0pKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbmZ1bmN0aW9uIGN0cmx6U3RvcmVzU3RhdGVBbmRFdmVudHMoY3RybHosIGNvbW1hbmRzLCBzdGF0ZSkge1xuICByZXR1cm4gbG9kYXNoLmlzRXF1YWwoY3RybHoucXVldWUsIGNvbW1hbmRzKSAmJiBsb2Rhc2guaXNFcXVhbChjdHJsei5zdGF0ZSwgc3RhdGUpO1xufTtcblxuLypcbiMjIFdoYXQgaGFwcGVuIHdoZW4gYSBuZXcgZXZlbnQgYXJyaXZlcyBhbmQgQ3RybHoncyBxdWV1ZSBpcyBmdWxsP1xuQ3RybHogcGljayB0aGUgb2xkZXN0IGV2ZW50IGluIHF1ZXVlIGFuZCBwYXNzIGl0IGFsb25nIHdpdGggc3RhdGUgdG8gY29tcG9uZW50IHRoYXQgaXMgYWJsZSB0byBoYW5kbGUgaXQuIEN0cmx6IGV4cGVjdCBjb21wb25lbnQgcmV0dXJuc1xuYW4gdXBkYXRlZCBzdGF0ZS4gQ3RybHogZG9lcyBub3QgY2FyZSB3aG8gY29tcG9uZW50IHJlYWxseSBpcywgaWYgbm8gY29tcG9uZW50IGlzIHByb3ZpZGVkIGhlIHNpbXBseSB1c2VzIHRoZSBsYXRlc3QgcmVsaWFibGUgc3RhdGUgaGVcbnN0b3Jlcy5cbk9sZGVzdCBldmVudCBpcyByZW1vdmVkIGZyb20gcXVldWUsIGV2ZW4gaWYgbm8gY29tcG9uZW50IGlzIHByb3ZpZGVkLlxuXG5cbkN0cmx6J3MgcXVldWUgaXMgZnVsbCBhbmQgYW4gZXZlbnQgYXJyaXZlcy5cbiovXG5cbnRhcGUoJ0N0cmx6IGhhcyBhIGRlZmF1bHQgaGFuZGxlciB0aGF0IGxpc3RlbiBmb3IgZXZlbnRzIHRvIHN0b3JlIHRoZW0uJywgZnVuY3Rpb24oYXNzZXJ0KSB7XG4gIHZhciBzdXQgPSBuZXcgQ3RybHo7XG4gIGZpbGxDdHJselF1ZXVlKHN1dCwgZ2V0VGVuQ29tbWFuZHMoKSk7XG4gIHN1dC5hY2NlcHQoeyBhZGQ6IDEwIH0sIHsgY291bnQ6IDQ1IH0pO1xuICBhc3NlcnQub2soY3RybHpTdG9yZXNTdGF0ZUFuZEV2ZW50cyhzdXQsIGdldEV4cGVjdGVkVGVuQ29tbWFuZHMoKSwgeyBjb3VudDogMCB9KSk7XG4gIGFzc2VydC5lbmQoKTtcbn0pO1xuXG5mdW5jdGlvbiBnZXRUZW5Db21tYW5kcygpIHtcbiAgcmV0dXJuIFtcbiAgICB7IGFkZDogMCB9LCB7IGFkZDogMSB9LCB7IGFkZDogMiB9LCB7IGFkZDogMyB9LCB7IGFkZDogNCB9LFxuICAgIHsgYWRkOiA1IH0sIHsgYWRkOiA2IH0sIHsgYWRkOiA3IH0sIHsgYWRkOiA4IH0sIHsgYWRkOiA5IH1cbiAgXTtcbn1cblxuZnVuY3Rpb24gZ2V0RXhwZWN0ZWRUZW5Db21tYW5kcygpIHtcbiAgdmFyIGV4cGVjdGVkID0gZ2V0VGVuQ29tbWFuZHMoKTtcbiAgZXhwZWN0ZWQgPSBleHBlY3RlZC5zbGljZSgxKTtcbiAgZXhwZWN0ZWQucHVzaCh7IGFkZDogMTAgfSk7XG4gIHJldHVybiBleHBlY3RlZDtcbn1cblxuZnVuY3Rpb24gZmlsbEN0cmx6UXVldWUoc3V0LCBjb21tYW5kcykge1xuICBjb21tYW5kcy5mb3JFYWNoKGNvbW1hbmQgPT4geyBzdXQuYWNjZXB0KGNvbW1hbmQsIHsgY291bnQ6IDAgfSk7IH0pO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ctrlz.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "sut",
        "Ctrlz",
        "ok",
        "brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue",
        "end",
        "ctrlz",
        "isUndefined",
        "status",
        "isEmpty",
        "eventqueue",
        "equals",
        "queueMaxSize",
        "command",
        "say",
        "state",
        "hello_count",
        "accept",
        "ctrlzStoresStateAndEvents",
        "add",
        "count",
        "commands",
        "isEqual",
        "queue",
        "fillCtrlzQueue",
        "getTenCommands",
        "getExpectedTenCommands",
        "expected",
        "slice",
        "push",
        "forEach"
      ],
      "mappings": ";;AAmCA;;;;AAnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,sEAAD,EAAyE,UAASG,MAAT,EAAgB;AAC3F,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACG,EAAP,CAAUC,iDAAiD,CAACH,GAAD,CAA3D;AACAD,EAAAA,MAAM,CAACK,GAAP;AACD,CAJG,CAAJ;;AAMA,SAASD,iDAAT,CAA2DE,KAA3D,EAAkE;AAChE,SAAOP,MAAM,CAACQ,WAAP,CAAmBD,KAAK,CAACE,MAAzB,KAAoCT,MAAM,CAACU,OAAP,CAAeH,KAAK,CAACI,UAArB,CAA3C;AACD;;AAAA;AAED;AACA;AACA;;AACAb,IAAI,CAAC,4EAAD,EAA+E,UAASG,MAAT,EAAgB;AACjG,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACW,MAAP,CAAcV,GAAG,CAACW,YAAlB,EAAgC,EAAhC,EAAoC,2CAApC;AACAZ,EAAAA,MAAM,CAACK,GAAP;AACD,CAJG,CAAJ;AAMA;AACA;AACA;;AACAR,IAAI,CAAC,6EAAD,EAAgF,UAASG,MAAT,EAAgB;AAClG,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACA,MAAIW,OAAO,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAZ;AACAf,EAAAA,GAAG,CAACgB,MAAJ,CAAWJ,OAAX,EAAoBE,KAApB;AACAf,EAAAA,MAAM,CAACG,EAAP,CAAUe,yBAAyB,CAACjB,GAAD,EAAM,CAAEY,OAAF,CAAN,EAAmBE,KAAnB,CAAnC;AACAf,EAAAA,MAAM,CAACK,GAAP;AACD,CAPG,CAAJ;AASA;AACA;AACA;;AACAR,IAAI,CAAC,mEAAD,EAAsE,UAASG,MAAT,EAAgB;AACxF,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAD,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAuB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAvB;AACAnB,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAuB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAvB;AACAnB,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAuB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAvB;AACApB,EAAAA,MAAM,CAACG,EAAP,CAAUe,yBAAyB,CAACjB,GAAD,EAAM,CAAC;AAAEkB,IAAAA,GAAG,EAAE;AAAP,GAAD,EAAa;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAAb,EAAyB;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAAzB,CAAN,EAA4C;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA5C,CAAnC;AACApB,EAAAA,MAAM,CAACK,GAAP;AACD,CAPG,CAAJ;;AASA,SAASa,yBAAT,CAAmCZ,KAAnC,EAA0Ce,QAA1C,EAAoDN,KAApD,EAA2D;AACzD,SAAOhB,MAAM,CAACuB,OAAP,CAAehB,KAAK,CAACiB,KAArB,EAA4BF,QAA5B,KAAyCtB,MAAM,CAACuB,OAAP,CAAehB,KAAK,CAACS,KAArB,EAA4BA,KAA5B,CAAhD;AACD;;AAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlB,IAAI,CAAC,mEAAD,EAAsE,UAASG,MAAT,EAAiB;AACzF,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAsB,EAAAA,cAAc,CAACvB,GAAD,EAAMwB,cAAc,EAApB,CAAd;AACAxB,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAwB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAxB;AACApB,EAAAA,MAAM,CAACG,EAAP,CAAUe,yBAAyB,CAACjB,GAAD,EAAMyB,sBAAsB,EAA5B,EAAgC;AAAEN,IAAAA,KAAK,EAAE;AAAT,GAAhC,CAAnC;AACApB,EAAAA,MAAM,CAACK,GAAP;AACD,CANG,CAAJ;;AAQA,SAASoB,cAAT,GAA0B;AACxB,SAAO,CACL;AAAEN,IAAAA,GAAG,EAAE;AAAP,GADK,EACO;AAAEA,IAAAA,GAAG,EAAE;AAAP,GADP,EACmB;AAAEA,IAAAA,GAAG,EAAE;AAAP,GADnB,EAC+B;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAD/B,EAC2C;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAD3C,EAEL;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAFK,EAEO;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAFP,EAEmB;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAFnB,EAE+B;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAF/B,EAE2C;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAF3C,CAAP;AAID;;AAED,SAASO,sBAAT,GAAkC;AAChC,MAAIC,QAAQ,GAAGF,cAAc,EAA7B;AACAE,EAAAA,QAAQ,GAAGA,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAX;AACAD,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAEV,IAAAA,GAAG,EAAE;AAAP,GAAd;AACA,SAAOQ,QAAP;AACD;;AAED,SAASH,cAAT,CAAwBvB,GAAxB,EAA6BoB,QAA7B,EAAuC;AACrCA,EAAAA,QAAQ,CAACS,OAAT,CAAiB,UAAAjB,OAAO,EAAI;AAAEZ,IAAAA,GAAG,CAACgB,MAAJ,CAAWJ,OAAX,EAAoB;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAApB;AAAoC,GAAlE;AACD",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "sourcesContent": [
        "/*\n# Ctrlz\nCtrlz keeps an application's state copy and a collection of already occurred events.\n\nUser wants to return back to, let's say three events earlier in time. Ctrlz pick state copy and applies all the events he stored\nminus three.\n\nCtrlz does not need Eventbus, but Eventbus is Ctrlz's natural symbiont.\n\n## How do Ctrlz interact with Eventbus? Or is Eventbus interacting with Ctrlz?\nEventbus handle events. Events arrive always with status. While finished handling the event, Eventbus pass it and status to Ctrlz.\nCtrlz stores status if none and store event if there are free slots. Ctrlz does not care if event is good or wrong.\n\nSo Eventbus and Ctrlz are completely separated tools developer can use as components.\n\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n-TESTS\n\nAs event arrives, if status is not 'undefined', Ctrl puts event in queue only.\n\nAs event arrives, if status is not 'undefined' and queue is full, a special event is dispatched with a copy of status and the first\nevent in queue. Say 'n' is the size of the queue, that event will trigger update of the 'n' old status by something(?) who knows how\nto manage that 'n' event to obtain an 'n-1' in time status. Event sent is removed from the queue.\n\nCtrlz provides an handler to manage 'return at status x in time': handler manage an event shipping status and all the events in queue that\noccurr after x. Handler dispatch all the events in the message one by one in the given order and collect returned status. Event sent are\nnot consumed and won't be removed from queue.\n*/\nvar tape = require('tape');\nvar lodash = require('lodash');\nimport Ctrlz from '../src/ctrlz.js';\n\n/*\nCtrlz is created with an 'undefined' as status to keep and an empty events queue.\n*/\ntape('Ctrlz is created with undefined as status and an empty events queue.', function(assert){\n  var sut = new Ctrlz;\n  assert.ok(brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(sut));\n  assert.end();\n});\n\nfunction brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(ctrlz) {\n  return lodash.isUndefined(ctrlz.status) && lodash.isEmpty(ctrlz.eventqueue);\n};\n\n/*\nIf no queue size is specified, default max size is 10.\n*/\ntape('Ctrlz set a default value of 10 as queue max size if no value is provided.', function(assert){\n  var sut = new Ctrlz;\n  assert.equals(sut.queueMaxSize, 10, '10 is the default Ctrlz\\'s queue max size');\n  assert.end();\n});\n\n/*\nCtrlz's queue is empty and an event arrives. Because queue is empty, state is updated too.\n*/\ntape('Ctrlz stores in the queue the first event that comes and updates its state.', function(assert){\n  var sut = new Ctrlz;\n  var command = { say: \"hello\" };\n  var state = { hello_count: 0 };\n  sut.accept(command, state);\n  assert.ok(ctrlzStoresStateAndEvents(sut, [ command ], state));\n  assert.end();\n});\n\n/*\nCtrlz's queue already stores 3 events and an event arrives. Ctrlz's state is left unchanged.\n*/\ntape('Ctrlz stores the third incoming event in queue\\'s third position.', function(assert){\n  var sut = new Ctrlz;\n  sut.accept({ add: 1 }, { count: 0 });\n  sut.accept({ add: 2 }, { count: 1 });\n  sut.accept({ add: 3 }, { count: 3 });\n  assert.ok(ctrlzStoresStateAndEvents(sut, [{ add: 1 }, { add: 2 }, { add: 3 }], { count: 0 }));\n  assert.end();\n});\n\nfunction ctrlzStoresStateAndEvents(ctrlz, commands, state) {\n  return lodash.isEqual(ctrlz.queue, commands) && lodash.isEqual(ctrlz.state, state);\n};\n\n/*\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n\nCtrlz's queue is full and an event arrives.\n*/\n\ntape('Ctrlz has a default handler that listen for events to store them.', function(assert) {\n  var sut = new Ctrlz;\n  fillCtrlzQueue(sut, getTenCommands());\n  sut.accept({ add: 10 }, { count: 45 });\n  assert.ok(ctrlzStoresStateAndEvents(sut, getExpectedTenCommands(), { count: 0 }));\n  assert.end();\n});\n\nfunction getTenCommands() {\n  return [\n    { add: 0 }, { add: 1 }, { add: 2 }, { add: 3 }, { add: 4 },\n    { add: 5 }, { add: 6 }, { add: 7 }, { add: 8 }, { add: 9 }\n  ];\n}\n\nfunction getExpectedTenCommands() {\n  var expected = getTenCommands();\n  expected = expected.slice(1);\n  expected.push({ add: 10 });\n  return expected;\n}\n\nfunction fillCtrlzQueue(sut, commands) {\n  commands.forEach(command => { sut.accept(command, { count: 0 }); });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634757433806
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventbus/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventbus\",\"filename\":\"/home/fpezzati/workspace/movona/eventbus/src/eventbus.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventbus",
      "filename": "/home/fpezzati/workspace/movona/eventbus/src/eventbus.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventbus/src/eventbus.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventbus/src/eventbus.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
        "sourceFileName": "eventbus.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Eventbus = /*#__PURE__*/function () {\n  function Eventbus() {\n    var defaultHandler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      command: \"default\",\n      behave: function behave(msg, state) {\n        console.log(\"Not aware of: \" + JSON.stringify(msg));\n        return state;\n      }\n    };\n\n    _classCallCheck(this, Eventbus);\n\n    this.handlers = new Map();\n    this.handlers.set(defaultHandler.command, defaultHandler.behave);\n  }\n\n  _createClass(Eventbus, [{\n    key: \"accept\",\n    value: function accept(message, state) {\n      try {\n        var copyedState = JSON.parse(JSON.stringify(state));\n        var copyedMessage = JSON.parse(JSON.stringify(message));\n\n        if (typeof this.handlers.get(message.command) === 'undefined') {\n          return this.handlers.get('default').call(this, copyedMessage, copyedState);\n        }\n\n        return this.handlers.get(message.command)['behave'](copyedMessage, copyedState);\n      } catch (error) {\n        return JSON.parse(JSON.stringify(copyedState));\n      }\n    }\n  }]);\n\n  return Eventbus;\n}();\n\n;\nvar _default = Eventbus;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50YnVzLmpzIl0sIm5hbWVzIjpbIkV2ZW50YnVzIiwiZGVmYXVsdEhhbmRsZXIiLCJjb21tYW5kIiwiYmVoYXZlIiwibXNnIiwic3RhdGUiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImhhbmRsZXJzIiwiTWFwIiwic2V0IiwibWVzc2FnZSIsImNvcHllZFN0YXRlIiwicGFyc2UiLCJjb3B5ZWRNZXNzYWdlIiwiZ2V0IiwiY2FsbCIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0lBQU1BLFE7QUFFSixzQkFNRztBQUFBLFFBTlNDLGNBTVQsdUVBTjBCO0FBQzNCQyxNQUFBQSxPQUFPLEVBQUUsU0FEa0I7QUFFM0JDLE1BQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjQyxLQUFkLEVBQXFCO0FBQzNCQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBbUJDLElBQUksQ0FBQ0MsU0FBTCxDQUFlTCxHQUFmLENBQS9CO0FBQ0EsZUFBT0MsS0FBUDtBQUNEO0FBTDBCLEtBTTFCOztBQUFBOztBQUNELFNBQUtLLFFBQUwsR0FBZ0IsSUFBSUMsR0FBSixFQUFoQjtBQUNBLFNBQUtELFFBQUwsQ0FBY0UsR0FBZCxDQUFrQlgsY0FBYyxDQUFDQyxPQUFqQyxFQUEwQ0QsY0FBYyxDQUFDRSxNQUF6RDtBQUNEOzs7O1dBRUQsZ0JBQU9VLE9BQVAsRUFBZ0JSLEtBQWhCLEVBQXVCO0FBQ3JCLFVBQUk7QUFDRixZQUFJUyxXQUFXLEdBQUdOLElBQUksQ0FBQ08sS0FBTCxDQUFXUCxJQUFJLENBQUNDLFNBQUwsQ0FBZUosS0FBZixDQUFYLENBQWxCO0FBQ0EsWUFBSVcsYUFBYSxHQUFHUixJQUFJLENBQUNPLEtBQUwsQ0FBV1AsSUFBSSxDQUFDQyxTQUFMLENBQWVJLE9BQWYsQ0FBWCxDQUFwQjs7QUFDQSxZQUFHLE9BQU8sS0FBS0gsUUFBTCxDQUFjTyxHQUFkLENBQWtCSixPQUFPLENBQUNYLE9BQTFCLENBQVAsS0FBOEMsV0FBakQsRUFBOEQ7QUFDNUQsaUJBQU8sS0FBS1EsUUFBTCxDQUFjTyxHQUFkLENBQWtCLFNBQWxCLEVBQTZCQyxJQUE3QixDQUFrQyxJQUFsQyxFQUF3Q0YsYUFBeEMsRUFBdURGLFdBQXZELENBQVA7QUFDRDs7QUFDRCxlQUFPLEtBQUtKLFFBQUwsQ0FBY08sR0FBZCxDQUFrQkosT0FBTyxDQUFDWCxPQUExQixFQUFtQyxRQUFuQyxFQUE2Q2MsYUFBN0MsRUFBNERGLFdBQTVELENBQVA7QUFDRCxPQVBELENBT0UsT0FBT0ssS0FBUCxFQUFjO0FBQ2QsZUFBT1gsSUFBSSxDQUFDTyxLQUFMLENBQVdQLElBQUksQ0FBQ0MsU0FBTCxDQUFlSyxXQUFmLENBQVgsQ0FBUDtBQUNEO0FBQ0Y7Ozs7OztBQUNGO2VBRWNkLFEiLCJzb3VyY2VSb290IjoiL2hvbWUvZnBlenphdGkvd29ya3NwYWNlL21vdm9uYS9ldmVudGJ1cy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRXZlbnRidXMge1xuXG4gIGNvbnN0cnVjdG9yKGRlZmF1bHRIYW5kbGVyID0ge1xuICAgIGNvbW1hbmQ6IFwiZGVmYXVsdFwiLFxuICAgIGJlaGF2ZTogZnVuY3Rpb24obXNnLCBzdGF0ZSkge1xuICAgICAgY29uc29sZS5sb2coXCJOb3QgYXdhcmUgb2Y6IFwiICsgSlNPTi5zdHJpbmdpZnkobXNnKSk7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9KSB7XG4gICAgdGhpcy5oYW5kbGVycyA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLmhhbmRsZXJzLnNldChkZWZhdWx0SGFuZGxlci5jb21tYW5kLCBkZWZhdWx0SGFuZGxlci5iZWhhdmUpO1xuICB9XG5cbiAgYWNjZXB0KG1lc3NhZ2UsIHN0YXRlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBjb3B5ZWRTdGF0ZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3RhdGUpKTtcbiAgICAgIHZhciBjb3B5ZWRNZXNzYWdlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShtZXNzYWdlKSk7XG4gICAgICBpZih0eXBlb2YgdGhpcy5oYW5kbGVycy5nZXQobWVzc2FnZS5jb21tYW5kKSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlcnMuZ2V0KCdkZWZhdWx0JykuY2FsbCh0aGlzLCBjb3B5ZWRNZXNzYWdlLCBjb3B5ZWRTdGF0ZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5oYW5kbGVycy5nZXQobWVzc2FnZS5jb21tYW5kKVsnYmVoYXZlJ10oY29weWVkTWVzc2FnZSwgY29weWVkU3RhdGUpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjb3B5ZWRTdGF0ZSkpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgRXZlbnRidXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "eventbus.js"
      ],
      "names": [
        "Eventbus",
        "defaultHandler",
        "command",
        "behave",
        "msg",
        "state",
        "console",
        "log",
        "JSON",
        "stringify",
        "handlers",
        "Map",
        "set",
        "message",
        "copyedState",
        "parse",
        "copyedMessage",
        "get",
        "call",
        "error"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,Q;AAEJ,sBAMG;AAAA,QANSC,cAMT,uEAN0B;AAC3BC,MAAAA,OAAO,EAAE,SADkB;AAE3BC,MAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeL,GAAf,CAA/B;AACA,eAAOC,KAAP;AACD;AAL0B,KAM1B;;AAAA;;AACD,SAAKK,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACA,SAAKD,QAAL,CAAcE,GAAd,CAAkBX,cAAc,CAACC,OAAjC,EAA0CD,cAAc,CAACE,MAAzD;AACD;;;;WAED,gBAAOU,OAAP,EAAgBR,KAAhB,EAAuB;AACrB,UAAI;AACF,YAAIS,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAX,CAAlB;AACA,YAAIW,aAAa,GAAGR,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeI,OAAf,CAAX,CAApB;;AACA,YAAG,OAAO,KAAKH,QAAL,CAAcO,GAAd,CAAkBJ,OAAO,CAACX,OAA1B,CAAP,KAA8C,WAAjD,EAA8D;AAC5D,iBAAO,KAAKQ,QAAL,CAAcO,GAAd,CAAkB,SAAlB,EAA6BC,IAA7B,CAAkC,IAAlC,EAAwCF,aAAxC,EAAuDF,WAAvD,CAAP;AACD;;AACD,eAAO,KAAKJ,QAAL,CAAcO,GAAd,CAAkBJ,OAAO,CAACX,OAA1B,EAAmC,QAAnC,EAA6Cc,aAA7C,EAA4DF,WAA5D,CAAP;AACD,OAPD,CAOE,OAAOK,KAAP,EAAc;AACd,eAAOX,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeK,WAAf,CAAX,CAAP;AACD;AACF;;;;;;AACF;eAEcd,Q",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
      "sourcesContent": [
        "class Eventbus {\n\n  constructor(defaultHandler = {\n    command: \"default\",\n    behave: function(msg, state) {\n      console.log(\"Not aware of: \" + JSON.stringify(msg));\n      return state;\n    }\n  }) {\n    this.handlers = new Map();\n    this.handlers.set(defaultHandler.command, defaultHandler.behave);\n  }\n\n  accept(message, state) {\n    try {\n      var copyedState = JSON.parse(JSON.stringify(state));\n      var copyedMessage = JSON.parse(JSON.stringify(message));\n      if(typeof this.handlers.get(message.command) === 'undefined') {\n        return this.handlers.get('default').call(this, copyedMessage, copyedState);\n      }\n      return this.handlers.get(message.command)['behave'](copyedMessage, copyedState);\n    } catch (error) {\n      return JSON.parse(JSON.stringify(copyedState));\n    }\n  }\n};\n\nexport default Eventbus;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634403211888
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventbus/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventbus\",\"filename\":\"/home/fpezzati/workspace/movona/eventbus/src/ctrlz.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventbus",
      "filename": "/home/fpezzati/workspace/movona/eventbus/src/ctrlz.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventbus/src/ctrlz.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventbus/src/ctrlz.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
        "sourceFileName": "ctrlz.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Ctrlz = /*#__PURE__*/function () {\n  function Ctrlz() {\n    var queuesize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    var statusHandler = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, Ctrlz);\n\n    this.queueMaxSize = queuesize;\n    this.queue = [];\n    this.state = {};\n    this.stateHandler = statusHandler;\n  }\n\n  _createClass(Ctrlz, [{\n    key: \"accept\",\n    value: function accept(command, state) {\n      if (this.queue.length < 1) {\n        this.state = state;\n      } else if (this.queue.length >= this.queueMaxSize) {\n        this.state = this.updateStateAndQueue(this.queue, this.state, this.stateHandler);\n      }\n\n      this.queue.push(command);\n    }\n  }, {\n    key: \"updateStateAndQueue\",\n    value: function updateStateAndQueue(queue, state, handler) {\n      var command = queue[0];\n      queue.shift();\n\n      if (handler == undefined) {\n        return state;\n      } else {\n        return handler.accept(command, state);\n      }\n    }\n  }]);\n\n  return Ctrlz;\n}();\n\n;\nvar _default = Ctrlz;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN0cmx6LmpzIl0sIm5hbWVzIjpbIkN0cmx6IiwicXVldWVzaXplIiwic3RhdHVzSGFuZGxlciIsInF1ZXVlTWF4U2l6ZSIsInF1ZXVlIiwic3RhdGUiLCJzdGF0ZUhhbmRsZXIiLCJjb21tYW5kIiwibGVuZ3RoIiwidXBkYXRlU3RhdGVBbmRRdWV1ZSIsInB1c2giLCJoYW5kbGVyIiwic2hpZnQiLCJ1bmRlZmluZWQiLCJhY2NlcHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBTUEsSztBQUVKLG1CQUEyQztBQUFBLFFBQS9CQyxTQUErQix1RUFBbkIsRUFBbUI7QUFBQSxRQUFmQyxhQUFlOztBQUFBOztBQUN6QyxTQUFLQyxZQUFMLEdBQW9CRixTQUFwQjtBQUNBLFNBQUtHLEtBQUwsR0FBYSxFQUFiO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLEVBQWI7QUFDQSxTQUFLQyxZQUFMLEdBQW9CSixhQUFwQjtBQUNEOzs7O1dBRUQsZ0JBQU9LLE9BQVAsRUFBZ0JGLEtBQWhCLEVBQXVCO0FBQ3JCLFVBQUcsS0FBS0QsS0FBTCxDQUFXSSxNQUFYLEdBQW9CLENBQXZCLEVBQTBCO0FBQ3hCLGFBQUtILEtBQUwsR0FBYUEsS0FBYjtBQUNELE9BRkQsTUFFTyxJQUFJLEtBQUtELEtBQUwsQ0FBV0ksTUFBWCxJQUFxQixLQUFLTCxZQUE5QixFQUE0QztBQUNqRCxhQUFLRSxLQUFMLEdBQWEsS0FBS0ksbUJBQUwsQ0FBeUIsS0FBS0wsS0FBOUIsRUFBcUMsS0FBS0MsS0FBMUMsRUFBaUQsS0FBS0MsWUFBdEQsQ0FBYjtBQUNEOztBQUNELFdBQUtGLEtBQUwsQ0FBV00sSUFBWCxDQUFnQkgsT0FBaEI7QUFDRDs7O1dBRUQsNkJBQW9CSCxLQUFwQixFQUEyQkMsS0FBM0IsRUFBa0NNLE9BQWxDLEVBQTJDO0FBQ3pDLFVBQUlKLE9BQU8sR0FBR0gsS0FBSyxDQUFDLENBQUQsQ0FBbkI7QUFDQUEsTUFBQUEsS0FBSyxDQUFDUSxLQUFOOztBQUNBLFVBQUdELE9BQU8sSUFBSUUsU0FBZCxFQUF5QjtBQUN2QixlQUFPUixLQUFQO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsZUFBT00sT0FBTyxDQUFDRyxNQUFSLENBQWVQLE9BQWYsRUFBd0JGLEtBQXhCLENBQVA7QUFDRDtBQUNGOzs7Ozs7QUFDRjtlQUVjTCxLIiwic291cmNlUm9vdCI6Ii9ob21lL2ZwZXp6YXRpL3dvcmtzcGFjZS9tb3ZvbmEvZXZlbnRidXMvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEN0cmx6IHtcblxuICBjb25zdHJ1Y3RvcihxdWV1ZXNpemUgPSAxMCwgc3RhdHVzSGFuZGxlcikge1xuICAgIHRoaXMucXVldWVNYXhTaXplID0gcXVldWVzaXplO1xuICAgIHRoaXMucXVldWUgPSBbXTtcbiAgICB0aGlzLnN0YXRlID0ge307XG4gICAgdGhpcy5zdGF0ZUhhbmRsZXIgPSBzdGF0dXNIYW5kbGVyO1xuICB9XG5cbiAgYWNjZXB0KGNvbW1hbmQsIHN0YXRlKSB7XG4gICAgaWYodGhpcy5xdWV1ZS5sZW5ndGggPCAxKSB7XG4gICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgfSBlbHNlIGlmICh0aGlzLnF1ZXVlLmxlbmd0aCA+PSB0aGlzLnF1ZXVlTWF4U2l6ZSkge1xuICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMudXBkYXRlU3RhdGVBbmRRdWV1ZSh0aGlzLnF1ZXVlLCB0aGlzLnN0YXRlLCB0aGlzLnN0YXRlSGFuZGxlcik7XG4gICAgfVxuICAgIHRoaXMucXVldWUucHVzaChjb21tYW5kKTtcbiAgfVxuXG4gIHVwZGF0ZVN0YXRlQW5kUXVldWUocXVldWUsIHN0YXRlLCBoYW5kbGVyKSB7XG4gICAgbGV0IGNvbW1hbmQgPSBxdWV1ZVswXTtcbiAgICBxdWV1ZS5zaGlmdCgpO1xuICAgIGlmKGhhbmRsZXIgPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBoYW5kbGVyLmFjY2VwdChjb21tYW5kLCBzdGF0ZSk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDdHJsejtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ctrlz.js"
      ],
      "names": [
        "Ctrlz",
        "queuesize",
        "statusHandler",
        "queueMaxSize",
        "queue",
        "state",
        "stateHandler",
        "command",
        "length",
        "updateStateAndQueue",
        "push",
        "handler",
        "shift",
        "undefined",
        "accept"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,K;AAEJ,mBAA2C;AAAA,QAA/BC,SAA+B,uEAAnB,EAAmB;AAAA,QAAfC,aAAe;;AAAA;;AACzC,SAAKC,YAAL,GAAoBF,SAApB;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoBJ,aAApB;AACD;;;;WAED,gBAAOK,OAAP,EAAgBF,KAAhB,EAAuB;AACrB,UAAG,KAAKD,KAAL,CAAWI,MAAX,GAAoB,CAAvB,EAA0B;AACxB,aAAKH,KAAL,GAAaA,KAAb;AACD,OAFD,MAEO,IAAI,KAAKD,KAAL,CAAWI,MAAX,IAAqB,KAAKL,YAA9B,EAA4C;AACjD,aAAKE,KAAL,GAAa,KAAKI,mBAAL,CAAyB,KAAKL,KAA9B,EAAqC,KAAKC,KAA1C,EAAiD,KAAKC,YAAtD,CAAb;AACD;;AACD,WAAKF,KAAL,CAAWM,IAAX,CAAgBH,OAAhB;AACD;;;WAED,6BAAoBH,KAApB,EAA2BC,KAA3B,EAAkCM,OAAlC,EAA2C;AACzC,UAAIJ,OAAO,GAAGH,KAAK,CAAC,CAAD,CAAnB;AACAA,MAAAA,KAAK,CAACQ,KAAN;;AACA,UAAGD,OAAO,IAAIE,SAAd,EAAyB;AACvB,eAAOR,KAAP;AACD,OAFD,MAEO;AACL,eAAOM,OAAO,CAACG,MAAR,CAAeP,OAAf,EAAwBF,KAAxB,CAAP;AACD;AACF;;;;;;AACF;eAEcL,K",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
      "sourcesContent": [
        "class Ctrlz {\n\n  constructor(queuesize = 10, statusHandler) {\n    this.queueMaxSize = queuesize;\n    this.queue = [];\n    this.state = {};\n    this.stateHandler = statusHandler;\n  }\n\n  accept(command, state) {\n    if(this.queue.length < 1) {\n      this.state = state;\n    } else if (this.queue.length >= this.queueMaxSize) {\n      this.state = this.updateStateAndQueue(this.queue, this.state, this.stateHandler);\n    }\n    this.queue.push(command);\n  }\n\n  updateStateAndQueue(queue, state, handler) {\n    let command = queue[0];\n    queue.shift();\n    if(handler == undefined) {\n      return state;\n    } else {\n      return handler.accept(command, state);\n    }\n  }\n};\n\nexport default Ctrlz;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634680499457
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventbus/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventbus\",\"filename\":\"/home/fpezzati/workspace/movona/eventbus/test/eventbus.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventbus",
      "filename": "/home/fpezzati/workspace/movona/eventbus/test/eventbus.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventbus/test/eventbus.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventbus/test/eventbus.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
        "sourceFileName": "eventbus.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _eventbus = _interopRequireDefault(require(\"../src/eventbus.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\nTests about the eventbus.\n*/\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nsut came with a default handler.\n*/\ntape('Eventbus provides a default handler', function (assert) {\n  var defaultHandler = {\n    command: \"default\",\n    behave: function behave(msg) {\n      console.log(\"Not aware of: \" + JSON.stringify(msg));\n    }\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(newSutCameWithASingleDefaultHandler(sut), 'Eventbus: should have a single default handler.');\n  assert.end();\n});\n\nfunction newSutCameWithASingleDefaultHandler(sut) {\n  return sut.handlers.size == 1 && typeof sut.handlers.get('default') === 'function';\n}\n\n;\n/*\nwhen eventbus receives a message with no 'command', he discard it and returns a copy of state immutated.\n*/\n\ntape('Eventbus receives a message with no \"command\", he dumps it.', function (assert) {\n  var message = {};\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has no \"command\".');\n  assert.end();\n});\n/*\nwhen eventbus receives a message with a 'command' he is not aware of, he discard it and returns a copy of state immutated.\n*/\n\ntape('Eventbus receives a message with a \"command\" he is not aware of, he discard it and returns a copy of state immutated.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has unmanageable \"command\".');\n  assert.end();\n});\n/*\neventbus always returns a copy of the managed state, even if managed state was left unchanged while handling.\n*/\n\ntape('Eventbus always returns a copy of the managed state.', function (assert) {\n  var message = {};\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(statesAreEqualButNotTheSameObject(state, sut.accept(message, state)), 'Eventbus: state should a copy not the same object.');\n  assert.end();\n});\n\nfunction statesAreEqualButNotTheSameObject(originalState, copyState) {\n  return lodash.isEqual(originalState, copyState) && originalState !== copyState;\n}\n\n;\n/*\nwhen a wrong handler is setted, eventbus manage the error and returns an immutated copy of state.\n*/\n\ntape('Eventbus handles a message with an invalid handler, he manage the error and returns an immutated copy of state.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  var badHandler = {\n    command: \"dosomething\",\n    behave: function behave(msg, state) {\n      throw 'Unexpected error!';\n    }\n  };\n  sut.handlers.set(\"dosomething\", badHandler);\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message is managed by wrong or invalid handler.');\n  assert.end();\n});\n/*\nwhen eventbus receives a message with a 'command' he is aware of, he passes the message to the handler and returns an updated copy of state.\n*/\n\ntape('Eventbus receives a message he can handle, he passes a copy of message and a copy of the state to the proper handler.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  var someHandler = {\n    command: \"dosomething\",\n    behave: function behave(msg, state) {\n      state.name = \"Joe\";\n      return state;\n    }\n  };\n  sut.handlers.set(\"dosomething\", someHandler);\n  assert.ok(statesAreEqualButNotTheSameObject({\n    say: \"hello\",\n    name: \"Joe\"\n  }, sut.accept(message, state)), 'Eventbus: state should be updated accordingly by adding a \"name\" valued \"Joe\" property.');\n  assert.end();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "eventbus.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "defaultHandler",
        "command",
        "behave",
        "msg",
        "console",
        "log",
        "JSON",
        "stringify",
        "sut",
        "Eventbus",
        "ok",
        "newSutCameWithASingleDefaultHandler",
        "end",
        "handlers",
        "size",
        "get",
        "message",
        "state",
        "say",
        "isEqual",
        "accept",
        "statesAreEqualButNotTheSameObject",
        "originalState",
        "copyState",
        "badHandler",
        "set",
        "someHandler",
        "name"
      ],
      "mappings": ";;AAKA;;;;AALA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,qCAAD,EAAwC,UAASG,MAAT,EAAiB;AAC3D,MAAIC,cAAc,GAAG;AAAEC,IAAAA,OAAO,EAAE,SAAX;AAAsBC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAc;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA/B;AAAoD;AAAlG,GAArB;AACA,MAAIK,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUC,mCAAmC,CAACH,GAAD,CAA7C,EAAoD,iDAApD;AACAT,EAAAA,MAAM,CAACa,GAAP;AACD,CALG,CAAJ;;AAOA,SAASD,mCAAT,CAA6CH,GAA7C,EAAkD;AAChD,SAAOA,GAAG,CAACK,QAAJ,CAAaC,IAAb,IAAqB,CAArB,IAA0B,OAAON,GAAG,CAACK,QAAJ,CAAaE,GAAb,CAAiB,SAAjB,CAAP,KAAuC,UAAxE;AACD;;AAAA;AAED;AACA;AACA;;AACAnB,IAAI,CAAC,6DAAD,EAAgE,UAASG,MAAT,EAAiB;AACnF,MAAIiB,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,sEAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;AAQA;AACA;AACA;;AACAhB,IAAI,CAAC,uHAAD,EAA0H,UAASG,MAAT,EAAiB;AAC7I,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,gFAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;AAQA;AACA;AACA;;AACAhB,IAAI,CAAC,sDAAD,EAAyD,UAASG,MAAT,EAAiB;AAC5E,MAAIiB,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUW,iCAAiC,CAACJ,KAAD,EAAQT,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAR,CAA3C,EAAgF,oDAAhF;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;;AAQA,SAASS,iCAAT,CAA2CC,aAA3C,EAA0DC,SAA1D,EAAqE;AACnE,SAAOzB,MAAM,CAACqB,OAAP,CAAeG,aAAf,EAA8BC,SAA9B,KAA4CD,aAAa,KAAKC,SAArE;AACD;;AAAA;AAED;AACA;AACA;;AACA3B,IAAI,CAAC,iHAAD,EAAoH,UAASG,MAAT,EAAiB;AACvI,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AAEA,MAAIe,UAAU,GAAG;AACfvB,IAAAA,OAAO,EAAE,aADM;AAEfC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcc,KAAd,EAAqB;AAC3B,YAAM,mBAAN;AACD;AAJc,GAAjB;AAOAT,EAAAA,GAAG,CAACK,QAAJ,CAAaY,GAAb,CAAiB,aAAjB,EAAgCD,UAAhC;AACAzB,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,4FAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CAfG,CAAJ;AAiBA;AACA;AACA;;AACAhB,IAAI,CAAC,uHAAD,EAA0H,UAASG,MAAT,EAAiB;AAC7I,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AAEA,MAAIiB,WAAW,GAAG;AAChBzB,IAAAA,OAAO,EAAE,aADO;AAEhBC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcc,KAAd,EAAqB;AAC3BA,MAAAA,KAAK,CAACU,IAAN,GAAa,KAAb;AACA,aAAOV,KAAP;AACD;AALe,GAAlB;AAQAT,EAAAA,GAAG,CAACK,QAAJ,CAAaY,GAAb,CAAiB,aAAjB,EAAgCC,WAAhC;AACA3B,EAAAA,MAAM,CAACW,EAAP,CAAUW,iCAAiC,CAAC;AAAEH,IAAAA,GAAG,EAAE,OAAP;AAAgBS,IAAAA,IAAI,EAAE;AAAtB,GAAD,EAAgCnB,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAhC,CAA3C,EAAwG,yFAAxG;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CAhBG,CAAJ",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "sourcesContent": [
        "/*\nTests about the eventbus.\n*/\nvar tape = require('tape');\nvar lodash = require('lodash');\nimport Eventbus from '../src/eventbus.js';\n\n/*\nsut came with a default handler.\n*/\ntape('Eventbus provides a default handler', function(assert) {\n  var defaultHandler = { command: \"default\", behave: function(msg) { console.log(\"Not aware of: \" + JSON.stringify(msg))} };\n  var sut = new Eventbus;\n  assert.ok(newSutCameWithASingleDefaultHandler(sut), 'Eventbus: should have a single default handler.');\n  assert.end();\n});\n\nfunction newSutCameWithASingleDefaultHandler(sut) {\n  return sut.handlers.size == 1 && typeof sut.handlers.get('default') === 'function';\n};\n\n/*\nwhen eventbus receives a message with no 'command', he discard it and returns a copy of state immutated.\n*/\ntape('Eventbus receives a message with no \"command\", he dumps it.', function(assert) {\n  var message = {};\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has no \"command\".');\n  assert.end();\n});\n\n/*\nwhen eventbus receives a message with a 'command' he is not aware of, he discard it and returns a copy of state immutated.\n*/\ntape('Eventbus receives a message with a \"command\" he is not aware of, he discard it and returns a copy of state immutated.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has unmanageable \"command\".');\n  assert.end();\n});\n\n/*\neventbus always returns a copy of the managed state, even if managed state was left unchanged while handling.\n*/\ntape('Eventbus always returns a copy of the managed state.', function(assert) {\n  var message = {};\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(statesAreEqualButNotTheSameObject(state, sut.accept(message, state)), 'Eventbus: state should a copy not the same object.');\n  assert.end();\n});\n\nfunction statesAreEqualButNotTheSameObject(originalState, copyState) {\n  return lodash.isEqual(originalState, copyState) && originalState !== copyState;\n};\n\n/*\nwhen a wrong handler is setted, eventbus manage the error and returns an immutated copy of state.\n*/\ntape('Eventbus handles a message with an invalid handler, he manage the error and returns an immutated copy of state.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n\n  var badHandler = {\n    command: \"dosomething\",\n    behave: function(msg, state) {\n      throw 'Unexpected error!';\n    }\n  }\n\n  sut.handlers.set(\"dosomething\", badHandler);\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message is managed by wrong or invalid handler.');\n  assert.end();\n});\n\n/*\nwhen eventbus receives a message with a 'command' he is aware of, he passes the message to the handler and returns an updated copy of state.\n*/\ntape('Eventbus receives a message he can handle, he passes a copy of message and a copy of the state to the proper handler.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n\n  var someHandler = {\n    command: \"dosomething\",\n    behave: function(msg, state) {\n      state.name = \"Joe\";\n      return state;\n    }\n  }\n\n  sut.handlers.set(\"dosomething\", someHandler);\n  assert.ok(statesAreEqualButNotTheSameObject({ say: \"hello\", name: \"Joe\" }, sut.accept(message, state)), 'Eventbus: state should be updated accordingly by adding a \"name\" valued \"Joe\" property.');\n  assert.end();\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634679332935
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventbus/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventbus\",\"filename\":\"/home/fpezzati/workspace/movona/eventbus/test/combine_eventbus_and_ctrlz.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventbus",
      "filename": "/home/fpezzati/workspace/movona/eventbus/test/combine_eventbus_and_ctrlz.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventbus/test/combine_eventbus_and_ctrlz.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventbus/test/combine_eventbus_and_ctrlz.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
        "sourceFileName": "combine_eventbus_and_ctrlz.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _eventbus = _interopRequireDefault(require(\"../src/eventbus.js\"));\n\nvar _ctrlz = _interopRequireDefault(require(\"../src/ctrlz.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nCombining Eventbus and Ctrlz allows to manage events and back-in-time effect.\n*/\ntape('Eventbus and Ctrlz manage a back-in-time event', function (assert) {\n  var eventshandler = new EventsHandler(new _eventbus[\"default\"](), new _ctrlz[\"default\"]());\n  var state = {\n    count: 0\n  };\n  eventshandler.eventbus.handlers.set(\"add\", getAddHandler());\n  assert.end();\n});\n\nfunction getAddHandler() {\n  return {\n    behave: function behave(msg, state) {\n      state.count = state.count + msg.payload;\n      return state;\n    }\n  };\n}\n\nfunction getTenEvents() {\n  return [{\n    command: 'add',\n    payload: 0\n  }, {\n    command: 'add',\n    payload: 1\n  }, {\n    command: 'add',\n    payload: 2\n  }, {\n    command: 'add',\n    payload: 3\n  }, {\n    command: 'add',\n    payload: 4\n  }, {\n    command: 'add',\n    payload: 5\n  }, {\n    command: 'add',\n    payload: 6\n  }, {\n    command: 'add',\n    payload: 7\n  }, {\n    command: 'add',\n    payload: 8\n  }, {\n    command: 'add',\n    payload: 9\n  }];\n}\n\nfunction EventsHandler(eventbus, ctrlz) {\n  var eventsHandler = {\n    handle: function handle(evt, state) {\n      newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWJpbmVfZXZlbnRidXNfYW5kX2N0cmx6LnRlc3QuanMiXSwibmFtZXMiOlsidGFwZSIsInJlcXVpcmUiLCJsb2Rhc2giLCJhc3NlcnQiLCJldmVudHNoYW5kbGVyIiwiRXZlbnRzSGFuZGxlciIsIkV2ZW50YnVzIiwiQ3RybHoiLCJzdGF0ZSIsImNvdW50IiwiZXZlbnRidXMiLCJoYW5kbGVycyIsInNldCIsImdldEFkZEhhbmRsZXIiLCJlbmQiLCJiZWhhdmUiLCJtc2ciLCJwYXlsb2FkIiwiZ2V0VGVuRXZlbnRzIiwiY29tbWFuZCIsImN0cmx6IiwiZXZlbnRzSGFuZGxlciIsImhhbmRsZSIsImV2dCIsIm5ld3N0YXRlIiwiYWNjZXB0Il0sIm1hcHBpbmdzIjoiOztBQUVBOztBQUNBOzs7O0FBSEEsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUlBO0FBQ0E7QUFDQTtBQUNBRCxJQUFJLENBQUMsZ0RBQUQsRUFBbUQsVUFBU0csTUFBVCxFQUFpQjtBQUN0RSxNQUFJQyxhQUFhLEdBQUcsSUFBSUMsYUFBSixDQUFrQixJQUFJQyxvQkFBSixFQUFsQixFQUFnQyxJQUFJQyxpQkFBSixFQUFoQyxDQUFwQjtBQUNBLE1BQUlDLEtBQUssR0FBRztBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFaO0FBQ0FMLEVBQUFBLGFBQWEsQ0FBQ00sUUFBZCxDQUF1QkMsUUFBdkIsQ0FBZ0NDLEdBQWhDLENBQW9DLEtBQXBDLEVBQTJDQyxhQUFhLEVBQXhEO0FBQ0FWLEVBQUFBLE1BQU0sQ0FBQ1csR0FBUDtBQUNELENBTEcsQ0FBSjs7QUFPQSxTQUFTRCxhQUFULEdBQXlCO0FBQ3ZCLFNBQU87QUFBRUUsSUFBQUEsTUFBTSxFQUFFLGdCQUFTQyxHQUFULEVBQWNSLEtBQWQsRUFBcUI7QUFDcENBLE1BQUFBLEtBQUssQ0FBQ0MsS0FBTixHQUFjRCxLQUFLLENBQUNDLEtBQU4sR0FBY08sR0FBRyxDQUFDQyxPQUFoQztBQUNBLGFBQU9ULEtBQVA7QUFDRDtBQUhNLEdBQVA7QUFJRDs7QUFFRCxTQUFTVSxZQUFULEdBQXdCO0FBQ3RCLFNBQU8sQ0FDTDtBQUFFQyxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkYsSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBREssRUFDMkI7QUFBRUUsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JGLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUQzQixFQUMyRDtBQUFFRSxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkYsSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBRDNELEVBRUw7QUFBRUUsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JGLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUZLLEVBRTJCO0FBQUVFLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCRixJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FGM0IsRUFFMkQ7QUFBRUUsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JGLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUYzRCxFQUdMO0FBQUVFLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCRixJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FISyxFQUcyQjtBQUFFRSxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkYsSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBSDNCLEVBRzJEO0FBQUVFLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCRixJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FIM0QsRUFJTDtBQUFFRSxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkYsSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBSkssQ0FBUDtBQU1EOztBQUVELFNBQVNaLGFBQVQsQ0FBdUJLLFFBQXZCLEVBQWlDVSxLQUFqQyxFQUF3QztBQUN0QyxNQUFJQyxhQUFhLEdBQUc7QUFDbEJDLElBQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjZixLQUFkLEVBQXFCO0FBQzNCZ0IsTUFBQUEsUUFBUSxHQUFHZCxRQUFRLENBQUNlLE1BQVQsQ0FBZ0JGLEdBQWhCLEVBQXFCZixLQUFyQixDQUFYO0FBQ0FZLE1BQUFBLEtBQUssQ0FBQ0ssTUFBTixDQUFhRixHQUFiLEVBQWtCZixLQUFsQjtBQUNBLGFBQU9nQixRQUFQO0FBQ0Q7QUFMaUIsR0FBcEI7QUFPQUgsRUFBQUEsYUFBYSxDQUFDWCxRQUFkLEdBQXlCQSxRQUF6QjtBQUNBVyxFQUFBQSxhQUFhLENBQUNELEtBQWQsR0FBc0JBLEtBQXRCO0FBQ0EsU0FBT0MsYUFBUDtBQUNEIiwic291cmNlUm9vdCI6Ii9ob21lL2ZwZXp6YXRpL3dvcmtzcGFjZS9tb3ZvbmEvZXZlbnRidXMvdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdGFwZSA9IHJlcXVpcmUoJ3RhcGUnKTtcbnZhciBsb2Rhc2ggPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmltcG9ydCBFdmVudGJ1cyBmcm9tICcuLi9zcmMvZXZlbnRidXMuanMnO1xuaW1wb3J0IEN0cmx6IGZyb20gJy4uL3NyYy9jdHJsei5qcyc7XG5cbi8qXG5Db21iaW5pbmcgRXZlbnRidXMgYW5kIEN0cmx6IGFsbG93cyB0byBtYW5hZ2UgZXZlbnRzIGFuZCBiYWNrLWluLXRpbWUgZWZmZWN0LlxuKi9cbnRhcGUoJ0V2ZW50YnVzIGFuZCBDdHJseiBtYW5hZ2UgYSBiYWNrLWluLXRpbWUgZXZlbnQnLCBmdW5jdGlvbihhc3NlcnQpIHtcbiAgdmFyIGV2ZW50c2hhbmRsZXIgPSBuZXcgRXZlbnRzSGFuZGxlcihuZXcgRXZlbnRidXMsIG5ldyBDdHJseik7XG4gIHZhciBzdGF0ZSA9IHsgY291bnQ6IDAgfTtcbiAgZXZlbnRzaGFuZGxlci5ldmVudGJ1cy5oYW5kbGVycy5zZXQoXCJhZGRcIiwgZ2V0QWRkSGFuZGxlcigpKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbmZ1bmN0aW9uIGdldEFkZEhhbmRsZXIoKSB7XG4gIHJldHVybiB7IGJlaGF2ZTogZnVuY3Rpb24obXNnLCBzdGF0ZSkge1xuICAgIHN0YXRlLmNvdW50ID0gc3RhdGUuY291bnQgKyBtc2cucGF5bG9hZDtcbiAgICByZXR1cm4gc3RhdGU7XG4gIH19O1xufVxuXG5mdW5jdGlvbiBnZXRUZW5FdmVudHMoKSB7XG4gIHJldHVybiBbXG4gICAgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogMCB9LCB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiAxIH0sIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDIgfSxcbiAgICB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiAzIH0sIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDQgfSwgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogNSB9LFxuICAgIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDYgfSwgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogNyB9LCB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiA4IH0sXG4gICAgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogOSB9XG4gIF07XG59XG5cbmZ1bmN0aW9uIEV2ZW50c0hhbmRsZXIoZXZlbnRidXMsIGN0cmx6KSB7XG4gIHZhciBldmVudHNIYW5kbGVyID0ge1xuICAgIGhhbmRsZTogZnVuY3Rpb24oZXZ0LCBzdGF0ZSkge1xuICAgICAgbmV3c3RhdGUgPSBldmVudGJ1cy5hY2NlcHQoZXZ0LCBzdGF0ZSk7XG4gICAgICBjdHJsei5hY2NlcHQoZXZ0LCBzdGF0ZSk7XG4gICAgICByZXR1cm4gbmV3c3RhdGU7XG4gICAgfVxuICB9O1xuICBldmVudHNIYW5kbGVyLmV2ZW50YnVzID0gZXZlbnRidXM7XG4gIGV2ZW50c0hhbmRsZXIuY3RybHogPSBjdHJsejtcbiAgcmV0dXJuIGV2ZW50c0hhbmRsZXI7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "combine_eventbus_and_ctrlz.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "eventshandler",
        "EventsHandler",
        "Eventbus",
        "Ctrlz",
        "state",
        "count",
        "eventbus",
        "handlers",
        "set",
        "getAddHandler",
        "end",
        "behave",
        "msg",
        "payload",
        "getTenEvents",
        "command",
        "ctrlz",
        "eventsHandler",
        "handle",
        "evt",
        "newstate",
        "accept"
      ],
      "mappings": ";;AAEA;;AACA;;;;AAHA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAIA;AACA;AACA;AACAD,IAAI,CAAC,gDAAD,EAAmD,UAASG,MAAT,EAAiB;AACtE,MAAIC,aAAa,GAAG,IAAIC,aAAJ,CAAkB,IAAIC,oBAAJ,EAAlB,EAAgC,IAAIC,iBAAJ,EAAhC,CAApB;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAZ;AACAL,EAAAA,aAAa,CAACM,QAAd,CAAuBC,QAAvB,CAAgCC,GAAhC,CAAoC,KAApC,EAA2CC,aAAa,EAAxD;AACAV,EAAAA,MAAM,CAACW,GAAP;AACD,CALG,CAAJ;;AAOA,SAASD,aAAT,GAAyB;AACvB,SAAO;AAAEE,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcR,KAAd,EAAqB;AACpCA,MAAAA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,GAAcO,GAAG,CAACC,OAAhC;AACA,aAAOT,KAAP;AACD;AAHM,GAAP;AAID;;AAED,SAASU,YAAT,GAAwB;AACtB,SAAO,CACL;AAAEC,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GADK,EAC2B;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAD3B,EAC2D;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAD3D,EAEL;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAFK,EAE2B;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAF3B,EAE2D;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAF3D,EAGL;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAHK,EAG2B;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAH3B,EAG2D;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAH3D,EAIL;AAAEE,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B,GAJK,CAAP;AAMD;;AAED,SAASZ,aAAT,CAAuBK,QAAvB,EAAiCU,KAAjC,EAAwC;AACtC,MAAIC,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcf,KAAd,EAAqB;AAC3BgB,MAAAA,QAAQ,GAAGd,QAAQ,CAACe,MAAT,CAAgBF,GAAhB,EAAqBf,KAArB,CAAX;AACAY,MAAAA,KAAK,CAACK,MAAN,CAAaF,GAAb,EAAkBf,KAAlB;AACA,aAAOgB,QAAP;AACD;AALiB,GAApB;AAOAH,EAAAA,aAAa,CAACX,QAAd,GAAyBA,QAAzB;AACAW,EAAAA,aAAa,CAACD,KAAd,GAAsBA,KAAtB;AACA,SAAOC,aAAP;AACD",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "sourcesContent": [
        "var tape = require('tape');\nvar lodash = require('lodash');\nimport Eventbus from '../src/eventbus.js';\nimport Ctrlz from '../src/ctrlz.js';\n\n/*\nCombining Eventbus and Ctrlz allows to manage events and back-in-time effect.\n*/\ntape('Eventbus and Ctrlz manage a back-in-time event', function(assert) {\n  var eventshandler = new EventsHandler(new Eventbus, new Ctrlz);\n  var state = { count: 0 };\n  eventshandler.eventbus.handlers.set(\"add\", getAddHandler());\n  assert.end();\n});\n\nfunction getAddHandler() {\n  return { behave: function(msg, state) {\n    state.count = state.count + msg.payload;\n    return state;\n  }};\n}\n\nfunction getTenEvents() {\n  return [\n    { command: 'add', payload: 0 }, { command: 'add', payload: 1 }, { command: 'add', payload: 2 },\n    { command: 'add', payload: 3 }, { command: 'add', payload: 4 }, { command: 'add', payload: 5 },\n    { command: 'add', payload: 6 }, { command: 'add', payload: 7 }, { command: 'add', payload: 8 },\n    { command: 'add', payload: 9 }\n  ];\n}\n\nfunction EventsHandler(eventbus, ctrlz) {\n  var eventsHandler = {\n    handle: function(evt, state) {\n      newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634678314874
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventbus/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventbus\",\"filename\":\"/home/fpezzati/workspace/movona/eventbus/test/eventshandler.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventbus",
      "filename": "/home/fpezzati/workspace/movona/eventbus/test/eventshandler.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventbus/test/eventshandler.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventbus/test/eventshandler.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
        "sourceFileName": "eventshandler.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _eventshandler = require(\"../src/eventshandler.js\");\n\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nCombining Eventbus and Ctrlz allows to manage events and back-in-time effect.\n*/\ntape('Eventbus and Ctrlz manage a back-in-time event', function (assert) {\n  var eventshandler = new _eventshandler.EventsHandler(new _eventshandler.Eventbus(), new _eventshandler.Ctrlz());\n  var state = {\n    count: 0\n  };\n  eventshandler.eventbus.handlers.set(\"add\", getAddHandler());\n  getTenEvents().forEach(function (evt) {\n    state = eventshandler.accept(evt, state);\n  });\n  assert.ok(lodash.isEqual({\n    count: 45\n  }, state));\n  state = eventshandler.accept({\n    command: \"ctrlz\",\n    howmany: 2\n  }, state);\n  assert.ok(lodash.isEqual({\n    count: 28\n  }, state));\n  assert.end();\n});\n\nfunction getAddHandler() {\n  return {\n    behave: function behave(msg, state) {\n      state.count = state.count + msg.payload;\n      return state;\n    }\n  };\n}\n\nfunction getTenEvents() {\n  return [{\n    command: 'add',\n    payload: 0\n  }, {\n    command: 'add',\n    payload: 1\n  }, {\n    command: 'add',\n    payload: 2\n  }, {\n    command: 'add',\n    payload: 3\n  }, {\n    command: 'add',\n    payload: 4\n  }, {\n    command: 'add',\n    payload: 5\n  }, {\n    command: 'add',\n    payload: 6\n  }, {\n    command: 'add',\n    payload: 7\n  }, {\n    command: 'add',\n    payload: 8\n  }, {\n    command: 'add',\n    payload: 9\n  }];\n}\n/*\nfunction EventsHandler(eventbus, ctrlz) {\n\n  eventbus.handlers.set(\"ctrlz\", {\n    behave: function(evt, state) {\n      removeLastHowmanyEvents(ctrlz.queue, evt.howmany || 1);\n      var ctrlzState = JSON.parse(JSON.stringify(ctrlz.state));\n      ctrlz.queue.forEach(event => {\n        ctrlzState = eventbus.accept(event, ctrlzState);\n      });\n      return ctrlzState;\n    }\n  });\n\n  function removeLastHowmanyEvents(queue, howmany) {\n    queue.splice(queue.length - howmany, queue.length - 1);\n  }\n\n  var eventsHandler = {\n    accept: function(evt, state) {\n      var newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50c2hhbmRsZXIudGVzdC5qcyJdLCJuYW1lcyI6WyJ0YXBlIiwicmVxdWlyZSIsImxvZGFzaCIsImFzc2VydCIsImV2ZW50c2hhbmRsZXIiLCJFdmVudHNIYW5kbGVyIiwiRXZlbnRidXMiLCJDdHJseiIsInN0YXRlIiwiY291bnQiLCJldmVudGJ1cyIsImhhbmRsZXJzIiwic2V0IiwiZ2V0QWRkSGFuZGxlciIsImdldFRlbkV2ZW50cyIsImZvckVhY2giLCJldnQiLCJhY2NlcHQiLCJvayIsImlzRXF1YWwiLCJjb21tYW5kIiwiaG93bWFueSIsImVuZCIsImJlaGF2ZSIsIm1zZyIsInBheWxvYWQiXSwibWFwcGluZ3MiOiI7O0FBRUE7O0FBRkEsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUdBO0FBQ0E7QUFDQTtBQUNBRCxJQUFJLENBQUMsZ0RBQUQsRUFBbUQsVUFBU0csTUFBVCxFQUFpQjtBQUN0RSxNQUFJQyxhQUFhLEdBQUcsSUFBSUMsNEJBQUosQ0FBa0IsSUFBSUMsdUJBQUosRUFBbEIsRUFBZ0MsSUFBSUMsb0JBQUosRUFBaEMsQ0FBcEI7QUFDQSxNQUFJQyxLQUFLLEdBQUc7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBWjtBQUNBTCxFQUFBQSxhQUFhLENBQUNNLFFBQWQsQ0FBdUJDLFFBQXZCLENBQWdDQyxHQUFoQyxDQUFvQyxLQUFwQyxFQUEyQ0MsYUFBYSxFQUF4RDtBQUNBQyxFQUFBQSxZQUFZLEdBQUdDLE9BQWYsQ0FBdUIsVUFBQUMsR0FBRyxFQUFJO0FBQzVCUixJQUFBQSxLQUFLLEdBQUdKLGFBQWEsQ0FBQ2EsTUFBZCxDQUFxQkQsR0FBckIsRUFBMEJSLEtBQTFCLENBQVI7QUFDRCxHQUZEO0FBR0FMLEVBQUFBLE1BQU0sQ0FBQ2UsRUFBUCxDQUFVaEIsTUFBTSxDQUFDaUIsT0FBUCxDQUFlO0FBQUVWLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQWYsRUFBOEJELEtBQTlCLENBQVY7QUFDQUEsRUFBQUEsS0FBSyxHQUFHSixhQUFhLENBQUNhLE1BQWQsQ0FBcUI7QUFBRUcsSUFBQUEsT0FBTyxFQUFFLE9BQVg7QUFBb0JDLElBQUFBLE9BQU8sRUFBRTtBQUE3QixHQUFyQixFQUFzRGIsS0FBdEQsQ0FBUjtBQUNBTCxFQUFBQSxNQUFNLENBQUNlLEVBQVAsQ0FBVWhCLE1BQU0sQ0FBQ2lCLE9BQVAsQ0FBZTtBQUFFVixJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFmLEVBQThCRCxLQUE5QixDQUFWO0FBQ0FMLEVBQUFBLE1BQU0sQ0FBQ21CLEdBQVA7QUFDRCxDQVhHLENBQUo7O0FBYUEsU0FBU1QsYUFBVCxHQUF5QjtBQUN2QixTQUFPO0FBQUVVLElBQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjaEIsS0FBZCxFQUFxQjtBQUNwQ0EsTUFBQUEsS0FBSyxDQUFDQyxLQUFOLEdBQWNELEtBQUssQ0FBQ0MsS0FBTixHQUFjZSxHQUFHLENBQUNDLE9BQWhDO0FBQ0EsYUFBT2pCLEtBQVA7QUFDRDtBQUhNLEdBQVA7QUFJRDs7QUFFRCxTQUFTTSxZQUFULEdBQXdCO0FBQ3RCLFNBQU8sQ0FDTDtBQUFFTSxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBREssRUFDMkI7QUFBRUwsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JLLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUQzQixFQUMyRDtBQUFFTCxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBRDNELEVBRUw7QUFBRUwsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JLLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUZLLEVBRTJCO0FBQUVMLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCSyxJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FGM0IsRUFFMkQ7QUFBRUwsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JLLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUYzRCxFQUdMO0FBQUVMLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCSyxJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FISyxFQUcyQjtBQUFFTCxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBSDNCLEVBRzJEO0FBQUVMLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCSyxJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FIM0QsRUFJTDtBQUFFTCxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBSkssQ0FBUDtBQU1EO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9ob21lL2ZwZXp6YXRpL3dvcmtzcGFjZS9tb3ZvbmEvZXZlbnRidXMvdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdGFwZSA9IHJlcXVpcmUoJ3RhcGUnKTtcbnZhciBsb2Rhc2ggPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmltcG9ydCB7IEV2ZW50c0hhbmRsZXIsIEV2ZW50YnVzLCBDdHJseiB9IGZyb20gJy4uL3NyYy9ldmVudHNoYW5kbGVyLmpzJztcblxuLypcbkNvbWJpbmluZyBFdmVudGJ1cyBhbmQgQ3RybHogYWxsb3dzIHRvIG1hbmFnZSBldmVudHMgYW5kIGJhY2staW4tdGltZSBlZmZlY3QuXG4qL1xudGFwZSgnRXZlbnRidXMgYW5kIEN0cmx6IG1hbmFnZSBhIGJhY2staW4tdGltZSBldmVudCcsIGZ1bmN0aW9uKGFzc2VydCkge1xuICB2YXIgZXZlbnRzaGFuZGxlciA9IG5ldyBFdmVudHNIYW5kbGVyKG5ldyBFdmVudGJ1cywgbmV3IEN0cmx6KTtcbiAgdmFyIHN0YXRlID0geyBjb3VudDogMCB9O1xuICBldmVudHNoYW5kbGVyLmV2ZW50YnVzLmhhbmRsZXJzLnNldChcImFkZFwiLCBnZXRBZGRIYW5kbGVyKCkpO1xuICBnZXRUZW5FdmVudHMoKS5mb3JFYWNoKGV2dCA9PiB7XG4gICAgc3RhdGUgPSBldmVudHNoYW5kbGVyLmFjY2VwdChldnQsIHN0YXRlKTtcbiAgfSk7XG4gIGFzc2VydC5vayhsb2Rhc2guaXNFcXVhbCh7IGNvdW50OiA0NSB9LCBzdGF0ZSkpO1xuICBzdGF0ZSA9IGV2ZW50c2hhbmRsZXIuYWNjZXB0KHsgY29tbWFuZDogXCJjdHJselwiLCBob3dtYW55OiAyfSwgc3RhdGUpO1xuICBhc3NlcnQub2sobG9kYXNoLmlzRXF1YWwoeyBjb3VudDogMjggfSwgc3RhdGUpKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbmZ1bmN0aW9uIGdldEFkZEhhbmRsZXIoKSB7XG4gIHJldHVybiB7IGJlaGF2ZTogZnVuY3Rpb24obXNnLCBzdGF0ZSkge1xuICAgIHN0YXRlLmNvdW50ID0gc3RhdGUuY291bnQgKyBtc2cucGF5bG9hZDtcbiAgICByZXR1cm4gc3RhdGU7XG4gIH19O1xufVxuXG5mdW5jdGlvbiBnZXRUZW5FdmVudHMoKSB7XG4gIHJldHVybiBbXG4gICAgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogMCB9LCB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiAxIH0sIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDIgfSxcbiAgICB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiAzIH0sIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDQgfSwgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogNSB9LFxuICAgIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDYgfSwgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogNyB9LCB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiA4IH0sXG4gICAgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogOSB9XG4gIF07XG59XG4vKlxuZnVuY3Rpb24gRXZlbnRzSGFuZGxlcihldmVudGJ1cywgY3RybHopIHtcblxuICBldmVudGJ1cy5oYW5kbGVycy5zZXQoXCJjdHJselwiLCB7XG4gICAgYmVoYXZlOiBmdW5jdGlvbihldnQsIHN0YXRlKSB7XG4gICAgICByZW1vdmVMYXN0SG93bWFueUV2ZW50cyhjdHJsei5xdWV1ZSwgZXZ0Lmhvd21hbnkgfHwgMSk7XG4gICAgICB2YXIgY3RybHpTdGF0ZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoY3RybHouc3RhdGUpKTtcbiAgICAgIGN0cmx6LnF1ZXVlLmZvckVhY2goZXZlbnQgPT4ge1xuICAgICAgICBjdHJselN0YXRlID0gZXZlbnRidXMuYWNjZXB0KGV2ZW50LCBjdHJselN0YXRlKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGN0cmx6U3RhdGU7XG4gICAgfVxuICB9KTtcblxuICBmdW5jdGlvbiByZW1vdmVMYXN0SG93bWFueUV2ZW50cyhxdWV1ZSwgaG93bWFueSkge1xuICAgIHF1ZXVlLnNwbGljZShxdWV1ZS5sZW5ndGggLSBob3dtYW55LCBxdWV1ZS5sZW5ndGggLSAxKTtcbiAgfVxuXG4gIHZhciBldmVudHNIYW5kbGVyID0ge1xuICAgIGFjY2VwdDogZnVuY3Rpb24oZXZ0LCBzdGF0ZSkge1xuICAgICAgdmFyIG5ld3N0YXRlID0gZXZlbnRidXMuYWNjZXB0KGV2dCwgc3RhdGUpO1xuICAgICAgY3RybHouYWNjZXB0KGV2dCwgc3RhdGUpO1xuICAgICAgcmV0dXJuIG5ld3N0YXRlO1xuICAgIH1cbiAgfTtcbiAgZXZlbnRzSGFuZGxlci5ldmVudGJ1cyA9IGV2ZW50YnVzO1xuICBldmVudHNIYW5kbGVyLmN0cmx6ID0gY3RybHo7XG4gIHJldHVybiBldmVudHNIYW5kbGVyO1xufVxuKi9cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "eventshandler.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "eventshandler",
        "EventsHandler",
        "Eventbus",
        "Ctrlz",
        "state",
        "count",
        "eventbus",
        "handlers",
        "set",
        "getAddHandler",
        "getTenEvents",
        "forEach",
        "evt",
        "accept",
        "ok",
        "isEqual",
        "command",
        "howmany",
        "end",
        "behave",
        "msg",
        "payload"
      ],
      "mappings": ";;AAEA;;AAFA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,gDAAD,EAAmD,UAASG,MAAT,EAAiB;AACtE,MAAIC,aAAa,GAAG,IAAIC,4BAAJ,CAAkB,IAAIC,uBAAJ,EAAlB,EAAgC,IAAIC,oBAAJ,EAAhC,CAApB;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAZ;AACAL,EAAAA,aAAa,CAACM,QAAd,CAAuBC,QAAvB,CAAgCC,GAAhC,CAAoC,KAApC,EAA2CC,aAAa,EAAxD;AACAC,EAAAA,YAAY,GAAGC,OAAf,CAAuB,UAAAC,GAAG,EAAI;AAC5BR,IAAAA,KAAK,GAAGJ,aAAa,CAACa,MAAd,CAAqBD,GAArB,EAA0BR,KAA1B,CAAR;AACD,GAFD;AAGAL,EAAAA,MAAM,CAACe,EAAP,CAAUhB,MAAM,CAACiB,OAAP,CAAe;AAAEV,IAAAA,KAAK,EAAE;AAAT,GAAf,EAA8BD,KAA9B,CAAV;AACAA,EAAAA,KAAK,GAAGJ,aAAa,CAACa,MAAd,CAAqB;AAAEG,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAArB,EAAsDb,KAAtD,CAAR;AACAL,EAAAA,MAAM,CAACe,EAAP,CAAUhB,MAAM,CAACiB,OAAP,CAAe;AAAEV,IAAAA,KAAK,EAAE;AAAT,GAAf,EAA8BD,KAA9B,CAAV;AACAL,EAAAA,MAAM,CAACmB,GAAP;AACD,CAXG,CAAJ;;AAaA,SAAST,aAAT,GAAyB;AACvB,SAAO;AAAEU,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAchB,KAAd,EAAqB;AACpCA,MAAAA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,GAAce,GAAG,CAACC,OAAhC;AACA,aAAOjB,KAAP;AACD;AAHM,GAAP;AAID;;AAED,SAASM,YAAT,GAAwB;AACtB,SAAO,CACL;AAAEM,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GADK,EAC2B;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAD3B,EAC2D;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAD3D,EAEL;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAFK,EAE2B;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAF3B,EAE2D;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAF3D,EAGL;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAHK,EAG2B;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAH3B,EAG2D;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAH3D,EAIL;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAJK,CAAP;AAMD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/test/",
      "sourcesContent": [
        "var tape = require('tape');\nvar lodash = require('lodash');\nimport { EventsHandler, Eventbus, Ctrlz } from '../src/eventshandler.js';\n\n/*\nCombining Eventbus and Ctrlz allows to manage events and back-in-time effect.\n*/\ntape('Eventbus and Ctrlz manage a back-in-time event', function(assert) {\n  var eventshandler = new EventsHandler(new Eventbus, new Ctrlz);\n  var state = { count: 0 };\n  eventshandler.eventbus.handlers.set(\"add\", getAddHandler());\n  getTenEvents().forEach(evt => {\n    state = eventshandler.accept(evt, state);\n  });\n  assert.ok(lodash.isEqual({ count: 45 }, state));\n  state = eventshandler.accept({ command: \"ctrlz\", howmany: 2}, state);\n  assert.ok(lodash.isEqual({ count: 28 }, state));\n  assert.end();\n});\n\nfunction getAddHandler() {\n  return { behave: function(msg, state) {\n    state.count = state.count + msg.payload;\n    return state;\n  }};\n}\n\nfunction getTenEvents() {\n  return [\n    { command: 'add', payload: 0 }, { command: 'add', payload: 1 }, { command: 'add', payload: 2 },\n    { command: 'add', payload: 3 }, { command: 'add', payload: 4 }, { command: 'add', payload: 5 },\n    { command: 'add', payload: 6 }, { command: 'add', payload: 7 }, { command: 'add', payload: 8 },\n    { command: 'add', payload: 9 }\n  ];\n}\n/*\nfunction EventsHandler(eventbus, ctrlz) {\n\n  eventbus.handlers.set(\"ctrlz\", {\n    behave: function(evt, state) {\n      removeLastHowmanyEvents(ctrlz.queue, evt.howmany || 1);\n      var ctrlzState = JSON.parse(JSON.stringify(ctrlz.state));\n      ctrlz.queue.forEach(event => {\n        ctrlzState = eventbus.accept(event, ctrlzState);\n      });\n      return ctrlzState;\n    }\n  });\n\n  function removeLastHowmanyEvents(queue, howmany) {\n    queue.splice(queue.length - howmany, queue.length - 1);\n  }\n\n  var eventsHandler = {\n    accept: function(evt, state) {\n      var newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n*/\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635197429498
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventbus/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventbus\",\"filename\":\"/home/fpezzati/workspace/movona/eventbus/src/eventshandler.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventbus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventbus",
      "filename": "/home/fpezzati/workspace/movona/eventbus/src/eventshandler.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventbus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventbus/src/eventshandler.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventbus/src/eventshandler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
        "sourceFileName": "eventshandler.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Ctrlz\", {\n  enumerable: true,\n  get: function get() {\n    return _ctrlz[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Eventbus\", {\n  enumerable: true,\n  get: function get() {\n    return _eventbus[\"default\"];\n  }\n});\nexports.EventsHandler = EventsHandler;\n\nvar _eventbus = _interopRequireDefault(require(\"../src/eventbus.js\"));\n\nvar _ctrlz = _interopRequireDefault(require(\"../src/ctrlz.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction EventsHandler(eventbus, ctrlz) {\n  eventbus.handlers.set(\"ctrlz\", {\n    behave: function behave(evt, state) {\n      removeLastHowmanyEvents(ctrlz.queue, evt.howmany || 1);\n      var ctrlzState = JSON.parse(JSON.stringify(ctrlz.state));\n      ctrlz.queue.forEach(function (event) {\n        ctrlzState = eventbus.accept(event, ctrlzState);\n      });\n      return ctrlzState;\n    }\n  });\n\n  function removeLastHowmanyEvents(queue, howmany) {\n    queue.splice(queue.length - howmany, queue.length - 1);\n  }\n\n  var eventsHandler = {\n    accept: function accept(evt, state) {\n      var newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50c2hhbmRsZXIuanMiXSwibmFtZXMiOlsiRXZlbnRzSGFuZGxlciIsImV2ZW50YnVzIiwiY3RybHoiLCJoYW5kbGVycyIsInNldCIsImJlaGF2ZSIsImV2dCIsInN0YXRlIiwicmVtb3ZlTGFzdEhvd21hbnlFdmVudHMiLCJxdWV1ZSIsImhvd21hbnkiLCJjdHJselN0YXRlIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiZm9yRWFjaCIsImV2ZW50IiwiYWNjZXB0Iiwic3BsaWNlIiwibGVuZ3RoIiwiZXZlbnRzSGFuZGxlciIsIm5ld3N0YXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxTQUFTQSxhQUFULENBQXVCQyxRQUF2QixFQUFpQ0MsS0FBakMsRUFBd0M7QUFFdENELEVBQUFBLFFBQVEsQ0FBQ0UsUUFBVCxDQUFrQkMsR0FBbEIsQ0FBc0IsT0FBdEIsRUFBK0I7QUFDN0JDLElBQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjQyxLQUFkLEVBQXFCO0FBQzNCQyxNQUFBQSx1QkFBdUIsQ0FBQ04sS0FBSyxDQUFDTyxLQUFQLEVBQWNILEdBQUcsQ0FBQ0ksT0FBSixJQUFlLENBQTdCLENBQXZCO0FBQ0EsVUFBSUMsVUFBVSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxTQUFMLENBQWVaLEtBQUssQ0FBQ0ssS0FBckIsQ0FBWCxDQUFqQjtBQUNBTCxNQUFBQSxLQUFLLENBQUNPLEtBQU4sQ0FBWU0sT0FBWixDQUFvQixVQUFBQyxLQUFLLEVBQUk7QUFDM0JMLFFBQUFBLFVBQVUsR0FBR1YsUUFBUSxDQUFDZ0IsTUFBVCxDQUFnQkQsS0FBaEIsRUFBdUJMLFVBQXZCLENBQWI7QUFDRCxPQUZEO0FBR0EsYUFBT0EsVUFBUDtBQUNEO0FBUjRCLEdBQS9COztBQVdBLFdBQVNILHVCQUFULENBQWlDQyxLQUFqQyxFQUF3Q0MsT0FBeEMsRUFBaUQ7QUFDL0NELElBQUFBLEtBQUssQ0FBQ1MsTUFBTixDQUFhVCxLQUFLLENBQUNVLE1BQU4sR0FBZVQsT0FBNUIsRUFBcUNELEtBQUssQ0FBQ1UsTUFBTixHQUFlLENBQXBEO0FBQ0Q7O0FBRUQsTUFBSUMsYUFBYSxHQUFHO0FBQ2xCSCxJQUFBQSxNQUFNLEVBQUUsZ0JBQVNYLEdBQVQsRUFBY0MsS0FBZCxFQUFxQjtBQUMzQixVQUFJYyxRQUFRLEdBQUdwQixRQUFRLENBQUNnQixNQUFULENBQWdCWCxHQUFoQixFQUFxQkMsS0FBckIsQ0FBZjtBQUNBTCxNQUFBQSxLQUFLLENBQUNlLE1BQU4sQ0FBYVgsR0FBYixFQUFrQkMsS0FBbEI7QUFDQSxhQUFPYyxRQUFQO0FBQ0Q7QUFMaUIsR0FBcEI7QUFPQUQsRUFBQUEsYUFBYSxDQUFDbkIsUUFBZCxHQUF5QkEsUUFBekI7QUFDQW1CLEVBQUFBLGFBQWEsQ0FBQ2xCLEtBQWQsR0FBc0JBLEtBQXRCO0FBQ0EsU0FBT2tCLGFBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9mcGV6emF0aS93b3Jrc3BhY2UvbW92b25hL2V2ZW50YnVzL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXZlbnRidXMgZnJvbSAnLi4vc3JjL2V2ZW50YnVzLmpzJztcbmltcG9ydCBDdHJseiBmcm9tICcuLi9zcmMvY3RybHouanMnO1xuXG5mdW5jdGlvbiBFdmVudHNIYW5kbGVyKGV2ZW50YnVzLCBjdHJseikge1xuXG4gIGV2ZW50YnVzLmhhbmRsZXJzLnNldChcImN0cmx6XCIsIHtcbiAgICBiZWhhdmU6IGZ1bmN0aW9uKGV2dCwgc3RhdGUpIHtcbiAgICAgIHJlbW92ZUxhc3RIb3dtYW55RXZlbnRzKGN0cmx6LnF1ZXVlLCBldnQuaG93bWFueSB8fCAxKTtcbiAgICAgIHZhciBjdHJselN0YXRlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjdHJsei5zdGF0ZSkpO1xuICAgICAgY3RybHoucXVldWUuZm9yRWFjaChldmVudCA9PiB7XG4gICAgICAgIGN0cmx6U3RhdGUgPSBldmVudGJ1cy5hY2NlcHQoZXZlbnQsIGN0cmx6U3RhdGUpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gY3RybHpTdGF0ZTtcbiAgICB9XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIHJlbW92ZUxhc3RIb3dtYW55RXZlbnRzKHF1ZXVlLCBob3dtYW55KSB7XG4gICAgcXVldWUuc3BsaWNlKHF1ZXVlLmxlbmd0aCAtIGhvd21hbnksIHF1ZXVlLmxlbmd0aCAtIDEpO1xuICB9XG5cbiAgdmFyIGV2ZW50c0hhbmRsZXIgPSB7XG4gICAgYWNjZXB0OiBmdW5jdGlvbihldnQsIHN0YXRlKSB7XG4gICAgICB2YXIgbmV3c3RhdGUgPSBldmVudGJ1cy5hY2NlcHQoZXZ0LCBzdGF0ZSk7XG4gICAgICBjdHJsei5hY2NlcHQoZXZ0LCBzdGF0ZSk7XG4gICAgICByZXR1cm4gbmV3c3RhdGU7XG4gICAgfVxuICB9O1xuICBldmVudHNIYW5kbGVyLmV2ZW50YnVzID0gZXZlbnRidXM7XG4gIGV2ZW50c0hhbmRsZXIuY3RybHogPSBjdHJsejtcbiAgcmV0dXJuIGV2ZW50c0hhbmRsZXI7XG59XG5cbmV4cG9ydCB7IEV2ZW50c0hhbmRsZXIsIEV2ZW50YnVzLCBDdHJseiB9O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "eventshandler.js"
      ],
      "names": [
        "EventsHandler",
        "eventbus",
        "ctrlz",
        "handlers",
        "set",
        "behave",
        "evt",
        "state",
        "removeLastHowmanyEvents",
        "queue",
        "howmany",
        "ctrlzState",
        "JSON",
        "parse",
        "stringify",
        "forEach",
        "event",
        "accept",
        "splice",
        "length",
        "eventsHandler",
        "newstate"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,KAAjC,EAAwC;AAEtCD,EAAAA,QAAQ,CAACE,QAAT,CAAkBC,GAAlB,CAAsB,OAAtB,EAA+B;AAC7BC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3BC,MAAAA,uBAAuB,CAACN,KAAK,CAACO,KAAP,EAAcH,GAAG,CAACI,OAAJ,IAAe,CAA7B,CAAvB;AACA,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,KAAK,CAACK,KAArB,CAAX,CAAjB;AACAL,MAAAA,KAAK,CAACO,KAAN,CAAYM,OAAZ,CAAoB,UAAAC,KAAK,EAAI;AAC3BL,QAAAA,UAAU,GAAGV,QAAQ,CAACgB,MAAT,CAAgBD,KAAhB,EAAuBL,UAAvB,CAAb;AACD,OAFD;AAGA,aAAOA,UAAP;AACD;AAR4B,GAA/B;;AAWA,WAASH,uBAAT,CAAiCC,KAAjC,EAAwCC,OAAxC,EAAiD;AAC/CD,IAAAA,KAAK,CAACS,MAAN,CAAaT,KAAK,CAACU,MAAN,GAAeT,OAA5B,EAAqCD,KAAK,CAACU,MAAN,GAAe,CAApD;AACD;;AAED,MAAIC,aAAa,GAAG;AAClBH,IAAAA,MAAM,EAAE,gBAASX,GAAT,EAAcC,KAAd,EAAqB;AAC3B,UAAIc,QAAQ,GAAGpB,QAAQ,CAACgB,MAAT,CAAgBX,GAAhB,EAAqBC,KAArB,CAAf;AACAL,MAAAA,KAAK,CAACe,MAAN,CAAaX,GAAb,EAAkBC,KAAlB;AACA,aAAOc,QAAP;AACD;AALiB,GAApB;AAOAD,EAAAA,aAAa,CAACnB,QAAd,GAAyBA,QAAzB;AACAmB,EAAAA,aAAa,CAAClB,KAAd,GAAsBA,KAAtB;AACA,SAAOkB,aAAP;AACD",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventbus/src/",
      "sourcesContent": [
        "import Eventbus from '../src/eventbus.js';\nimport Ctrlz from '../src/ctrlz.js';\n\nfunction EventsHandler(eventbus, ctrlz) {\n\n  eventbus.handlers.set(\"ctrlz\", {\n    behave: function(evt, state) {\n      removeLastHowmanyEvents(ctrlz.queue, evt.howmany || 1);\n      var ctrlzState = JSON.parse(JSON.stringify(ctrlz.state));\n      ctrlz.queue.forEach(event => {\n        ctrlzState = eventbus.accept(event, ctrlzState);\n      });\n      return ctrlzState;\n    }\n  });\n\n  function removeLastHowmanyEvents(queue, howmany) {\n    queue.splice(queue.length - howmany, queue.length - 1);\n  }\n\n  var eventsHandler = {\n    accept: function(evt, state) {\n      var newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n\nexport { EventsHandler, Eventbus, Ctrlz };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635197178122
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventshandler/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventshandler\",\"filename\":\"/home/fpezzati/workspace/movona/eventshandler/test/ctrlz.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventshandler\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventshandler",
      "filename": "/home/fpezzati/workspace/movona/eventshandler/test/ctrlz.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventshandler",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventshandler/test/ctrlz.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventshandler/test/ctrlz.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
        "sourceFileName": "ctrlz.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ctrlz = _interopRequireDefault(require(\"../src/ctrlz.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n# Ctrlz\nCtrlz keeps an application's state copy and a collection of already occurred events.\n\nUser wants to return back to, let's say three events earlier in time. Ctrlz pick state copy and applies all the events he stored\nminus three.\n\nCtrlz does not need Eventbus, but Eventbus is Ctrlz's natural symbiont.\n\n## How do Ctrlz interact with Eventbus? Or is Eventbus interacting with Ctrlz?\nEventbus handle events. Events arrive always with status. While finished handling the event, Eventbus pass it and status to Ctrlz.\nCtrlz stores status if none and store event if there are free slots. Ctrlz does not care if event is good or wrong.\n\nSo Eventbus and Ctrlz are completely separated tools developer can use as components.\n\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n-TESTS\n\nAs event arrives, if status is not 'undefined', Ctrl puts event in queue only.\n\nAs event arrives, if status is not 'undefined' and queue is full, a special event is dispatched with a copy of status and the first\nevent in queue. Say 'n' is the size of the queue, that event will trigger update of the 'n' old status by something(?) who knows how\nto manage that 'n' event to obtain an 'n-1' in time status. Event sent is removed from the queue.\n\nCtrlz provides an handler to manage 'return at status x in time': handler manage an event shipping status and all the events in queue that\noccurr after x. Handler dispatch all the events in the message one by one in the given order and collect returned status. Event sent are\nnot consumed and won't be removed from queue.\n*/\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nCtrlz is created with an 'undefined' as status to keep and an empty events queue.\n*/\ntape('Ctrlz is created with undefined as status and an empty events queue.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  assert.ok(brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(sut));\n  assert.end();\n});\n\nfunction brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(ctrlz) {\n  return lodash.isUndefined(ctrlz.status) && lodash.isEmpty(ctrlz.eventqueue);\n}\n\n;\n/*\nIf no queue size is specified, default max size is 10.\n*/\n\ntape('Ctrlz set a default value of 10 as queue max size if no value is provided.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  assert.equals(sut.queueMaxSize, 10, '10 is the default Ctrlz\\'s queue max size');\n  assert.end();\n});\n/*\nCtrlz's queue is empty and an event arrives. Because queue is empty, state is updated too.\n*/\n\ntape('Ctrlz stores in the queue the first event that comes and updates its state.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  var command = {\n    say: \"hello\"\n  };\n  var state = {\n    hello_count: 0\n  };\n  sut.accept(command, state);\n  assert.ok(ctrlzStoresStateAndEvents(sut, [command], state));\n  assert.end();\n});\n/*\nCtrlz's queue already stores 3 events and an event arrives. Ctrlz's state is left unchanged.\n*/\n\ntape('Ctrlz stores the third incoming event in queue\\'s third position.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  sut.accept({\n    add: 1\n  }, {\n    count: 0\n  });\n  sut.accept({\n    add: 2\n  }, {\n    count: 1\n  });\n  sut.accept({\n    add: 3\n  }, {\n    count: 3\n  });\n  assert.ok(ctrlzStoresStateAndEvents(sut, [{\n    add: 1\n  }, {\n    add: 2\n  }, {\n    add: 3\n  }], {\n    count: 0\n  }));\n  assert.end();\n});\n\nfunction ctrlzStoresStateAndEvents(ctrlz, commands, state) {\n  return lodash.isEqual(ctrlz.queue, commands) && lodash.isEqual(ctrlz.state, state);\n}\n\n;\n/*\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n\nCtrlz's queue is full and an event arrives.\n*/\n\ntape('Ctrlz has a default handler that listen for events to store them.', function (assert) {\n  var sut = new _ctrlz[\"default\"]();\n  fillCtrlzQueue(sut, getTenCommands());\n  sut.accept({\n    add: 10\n  }, {\n    count: 45\n  });\n  assert.ok(ctrlzStoresStateAndEvents(sut, getExpectedTenCommands(), {\n    count: 0\n  }));\n  assert.end();\n});\n\nfunction getTenCommands() {\n  return [{\n    add: 0\n  }, {\n    add: 1\n  }, {\n    add: 2\n  }, {\n    add: 3\n  }, {\n    add: 4\n  }, {\n    add: 5\n  }, {\n    add: 6\n  }, {\n    add: 7\n  }, {\n    add: 8\n  }, {\n    add: 9\n  }];\n}\n\nfunction getExpectedTenCommands() {\n  var expected = getTenCommands();\n  expected = expected.slice(1);\n  expected.push({\n    add: 10\n  });\n  return expected;\n}\n\nfunction fillCtrlzQueue(sut, commands) {\n  commands.forEach(function (command) {\n    sut.accept(command, {\n      count: 0\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN0cmx6LnRlc3QuanMiXSwibmFtZXMiOlsidGFwZSIsInJlcXVpcmUiLCJsb2Rhc2giLCJhc3NlcnQiLCJzdXQiLCJDdHJseiIsIm9rIiwiYnJhbmROZXdDdHJsekhhc1VuZGVmaW5lZFN0YXR1c0FuZEVtcHR5RXZlbnRRdWV1ZSIsImVuZCIsImN0cmx6IiwiaXNVbmRlZmluZWQiLCJzdGF0dXMiLCJpc0VtcHR5IiwiZXZlbnRxdWV1ZSIsImVxdWFscyIsInF1ZXVlTWF4U2l6ZSIsImNvbW1hbmQiLCJzYXkiLCJzdGF0ZSIsImhlbGxvX2NvdW50IiwiYWNjZXB0IiwiY3RybHpTdG9yZXNTdGF0ZUFuZEV2ZW50cyIsImFkZCIsImNvdW50IiwiY29tbWFuZHMiLCJpc0VxdWFsIiwicXVldWUiLCJmaWxsQ3RybHpRdWV1ZSIsImdldFRlbkNvbW1hbmRzIiwiZ2V0RXhwZWN0ZWRUZW5Db21tYW5kcyIsImV4cGVjdGVkIiwic2xpY2UiLCJwdXNoIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6Ijs7QUFtQ0E7Ozs7QUFuQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUdBO0FBQ0E7QUFDQTtBQUNBRCxJQUFJLENBQUMsc0VBQUQsRUFBeUUsVUFBU0csTUFBVCxFQUFnQjtBQUMzRixNQUFJQyxHQUFHLEdBQUcsSUFBSUMsaUJBQUosRUFBVjtBQUNBRixFQUFBQSxNQUFNLENBQUNHLEVBQVAsQ0FBVUMsaURBQWlELENBQUNILEdBQUQsQ0FBM0Q7QUFDQUQsRUFBQUEsTUFBTSxDQUFDSyxHQUFQO0FBQ0QsQ0FKRyxDQUFKOztBQU1BLFNBQVNELGlEQUFULENBQTJERSxLQUEzRCxFQUFrRTtBQUNoRSxTQUFPUCxNQUFNLENBQUNRLFdBQVAsQ0FBbUJELEtBQUssQ0FBQ0UsTUFBekIsS0FBb0NULE1BQU0sQ0FBQ1UsT0FBUCxDQUFlSCxLQUFLLENBQUNJLFVBQXJCLENBQTNDO0FBQ0Q7O0FBQUE7QUFFRDtBQUNBO0FBQ0E7O0FBQ0FiLElBQUksQ0FBQyw0RUFBRCxFQUErRSxVQUFTRyxNQUFULEVBQWdCO0FBQ2pHLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxpQkFBSixFQUFWO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ1csTUFBUCxDQUFjVixHQUFHLENBQUNXLFlBQWxCLEVBQWdDLEVBQWhDLEVBQW9DLDJDQUFwQztBQUNBWixFQUFBQSxNQUFNLENBQUNLLEdBQVA7QUFDRCxDQUpHLENBQUo7QUFNQTtBQUNBO0FBQ0E7O0FBQ0FSLElBQUksQ0FBQyw2RUFBRCxFQUFnRixVQUFTRyxNQUFULEVBQWdCO0FBQ2xHLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxpQkFBSixFQUFWO0FBQ0EsTUFBSVcsT0FBTyxHQUFHO0FBQUVDLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQWQ7QUFDQSxNQUFJQyxLQUFLLEdBQUc7QUFBRUMsSUFBQUEsV0FBVyxFQUFFO0FBQWYsR0FBWjtBQUNBZixFQUFBQSxHQUFHLENBQUNnQixNQUFKLENBQVdKLE9BQVgsRUFBb0JFLEtBQXBCO0FBQ0FmLEVBQUFBLE1BQU0sQ0FBQ0csRUFBUCxDQUFVZSx5QkFBeUIsQ0FBQ2pCLEdBQUQsRUFBTSxDQUFFWSxPQUFGLENBQU4sRUFBbUJFLEtBQW5CLENBQW5DO0FBQ0FmLEVBQUFBLE1BQU0sQ0FBQ0ssR0FBUDtBQUNELENBUEcsQ0FBSjtBQVNBO0FBQ0E7QUFDQTs7QUFDQVIsSUFBSSxDQUFDLG1FQUFELEVBQXNFLFVBQVNHLE1BQVQsRUFBZ0I7QUFDeEYsTUFBSUMsR0FBRyxHQUFHLElBQUlDLGlCQUFKLEVBQVY7QUFDQUQsRUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXO0FBQUVFLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQVgsRUFBdUI7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBdkI7QUFDQW5CLEVBQUFBLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBVztBQUFFRSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUFYLEVBQXVCO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQXZCO0FBQ0FuQixFQUFBQSxHQUFHLENBQUNnQixNQUFKLENBQVc7QUFBRUUsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FBWCxFQUF1QjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUF2QjtBQUNBcEIsRUFBQUEsTUFBTSxDQUFDRyxFQUFQLENBQVVlLHlCQUF5QixDQUFDakIsR0FBRCxFQUFNLENBQUM7QUFBRWtCLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQUQsRUFBYTtBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUFiLEVBQXlCO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQXpCLENBQU4sRUFBNEM7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBNUMsQ0FBbkM7QUFDQXBCLEVBQUFBLE1BQU0sQ0FBQ0ssR0FBUDtBQUNELENBUEcsQ0FBSjs7QUFTQSxTQUFTYSx5QkFBVCxDQUFtQ1osS0FBbkMsRUFBMENlLFFBQTFDLEVBQW9ETixLQUFwRCxFQUEyRDtBQUN6RCxTQUFPaEIsTUFBTSxDQUFDdUIsT0FBUCxDQUFlaEIsS0FBSyxDQUFDaUIsS0FBckIsRUFBNEJGLFFBQTVCLEtBQXlDdEIsTUFBTSxDQUFDdUIsT0FBUCxDQUFlaEIsS0FBSyxDQUFDUyxLQUFyQixFQUE0QkEsS0FBNUIsQ0FBaEQ7QUFDRDs7QUFBQTtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBbEIsSUFBSSxDQUFDLG1FQUFELEVBQXNFLFVBQVNHLE1BQVQsRUFBaUI7QUFDekYsTUFBSUMsR0FBRyxHQUFHLElBQUlDLGlCQUFKLEVBQVY7QUFDQXNCLEVBQUFBLGNBQWMsQ0FBQ3ZCLEdBQUQsRUFBTXdCLGNBQWMsRUFBcEIsQ0FBZDtBQUNBeEIsRUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXO0FBQUVFLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQVgsRUFBd0I7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBeEI7QUFDQXBCLEVBQUFBLE1BQU0sQ0FBQ0csRUFBUCxDQUFVZSx5QkFBeUIsQ0FBQ2pCLEdBQUQsRUFBTXlCLHNCQUFzQixFQUE1QixFQUFnQztBQUFFTixJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFoQyxDQUFuQztBQUNBcEIsRUFBQUEsTUFBTSxDQUFDSyxHQUFQO0FBQ0QsQ0FORyxDQUFKOztBQVFBLFNBQVNvQixjQUFULEdBQTBCO0FBQ3hCLFNBQU8sQ0FDTDtBQUFFTixJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQURLLEVBQ087QUFBRUEsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FEUCxFQUNtQjtBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQURuQixFQUMrQjtBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUQvQixFQUMyQztBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUQzQyxFQUVMO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRkssRUFFTztBQUFFQSxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUZQLEVBRW1CO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRm5CLEVBRStCO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRi9CLEVBRTJDO0FBQUVBLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRjNDLENBQVA7QUFJRDs7QUFFRCxTQUFTTyxzQkFBVCxHQUFrQztBQUNoQyxNQUFJQyxRQUFRLEdBQUdGLGNBQWMsRUFBN0I7QUFDQUUsRUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUNDLEtBQVQsQ0FBZSxDQUFmLENBQVg7QUFDQUQsRUFBQUEsUUFBUSxDQUFDRSxJQUFULENBQWM7QUFBRVYsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FBZDtBQUNBLFNBQU9RLFFBQVA7QUFDRDs7QUFFRCxTQUFTSCxjQUFULENBQXdCdkIsR0FBeEIsRUFBNkJvQixRQUE3QixFQUF1QztBQUNyQ0EsRUFBQUEsUUFBUSxDQUFDUyxPQUFULENBQWlCLFVBQUFqQixPQUFPLEVBQUk7QUFBRVosSUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXSixPQUFYLEVBQW9CO0FBQUVPLE1BQUFBLEtBQUssRUFBRTtBQUFULEtBQXBCO0FBQW9DLEdBQWxFO0FBQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvZnBlenphdGkvd29ya3NwYWNlL21vdm9uYS9ldmVudHNoYW5kbGVyL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiMgQ3RybHpcbkN0cmx6IGtlZXBzIGFuIGFwcGxpY2F0aW9uJ3Mgc3RhdGUgY29weSBhbmQgYSBjb2xsZWN0aW9uIG9mIGFscmVhZHkgb2NjdXJyZWQgZXZlbnRzLlxuXG5Vc2VyIHdhbnRzIHRvIHJldHVybiBiYWNrIHRvLCBsZXQncyBzYXkgdGhyZWUgZXZlbnRzIGVhcmxpZXIgaW4gdGltZS4gQ3RybHogcGljayBzdGF0ZSBjb3B5IGFuZCBhcHBsaWVzIGFsbCB0aGUgZXZlbnRzIGhlIHN0b3JlZFxubWludXMgdGhyZWUuXG5cbkN0cmx6IGRvZXMgbm90IG5lZWQgRXZlbnRidXMsIGJ1dCBFdmVudGJ1cyBpcyBDdHJseidzIG5hdHVyYWwgc3ltYmlvbnQuXG5cbiMjIEhvdyBkbyBDdHJseiBpbnRlcmFjdCB3aXRoIEV2ZW50YnVzPyBPciBpcyBFdmVudGJ1cyBpbnRlcmFjdGluZyB3aXRoIEN0cmx6P1xuRXZlbnRidXMgaGFuZGxlIGV2ZW50cy4gRXZlbnRzIGFycml2ZSBhbHdheXMgd2l0aCBzdGF0dXMuIFdoaWxlIGZpbmlzaGVkIGhhbmRsaW5nIHRoZSBldmVudCwgRXZlbnRidXMgcGFzcyBpdCBhbmQgc3RhdHVzIHRvIEN0cmx6LlxuQ3RybHogc3RvcmVzIHN0YXR1cyBpZiBub25lIGFuZCBzdG9yZSBldmVudCBpZiB0aGVyZSBhcmUgZnJlZSBzbG90cy4gQ3RybHogZG9lcyBub3QgY2FyZSBpZiBldmVudCBpcyBnb29kIG9yIHdyb25nLlxuXG5TbyBFdmVudGJ1cyBhbmQgQ3RybHogYXJlIGNvbXBsZXRlbHkgc2VwYXJhdGVkIHRvb2xzIGRldmVsb3BlciBjYW4gdXNlIGFzIGNvbXBvbmVudHMuXG5cbiMjIFdoYXQgaGFwcGVuIHdoZW4gYSBuZXcgZXZlbnQgYXJyaXZlcyBhbmQgQ3RybHoncyBxdWV1ZSBpcyBmdWxsP1xuQ3RybHogcGljayB0aGUgb2xkZXN0IGV2ZW50IGluIHF1ZXVlIGFuZCBwYXNzIGl0IGFsb25nIHdpdGggc3RhdGUgdG8gY29tcG9uZW50IHRoYXQgaXMgYWJsZSB0byBoYW5kbGUgaXQuIEN0cmx6IGV4cGVjdCBjb21wb25lbnQgcmV0dXJuc1xuYW4gdXBkYXRlZCBzdGF0ZS4gQ3RybHogZG9lcyBub3QgY2FyZSB3aG8gY29tcG9uZW50IHJlYWxseSBpcywgaWYgbm8gY29tcG9uZW50IGlzIHByb3ZpZGVkIGhlIHNpbXBseSB1c2VzIHRoZSBsYXRlc3QgcmVsaWFibGUgc3RhdGUgaGVcbnN0b3Jlcy5cbk9sZGVzdCBldmVudCBpcyByZW1vdmVkIGZyb20gcXVldWUsIGV2ZW4gaWYgbm8gY29tcG9uZW50IGlzIHByb3ZpZGVkLlxuXG4tVEVTVFNcblxuQXMgZXZlbnQgYXJyaXZlcywgaWYgc3RhdHVzIGlzIG5vdCAndW5kZWZpbmVkJywgQ3RybCBwdXRzIGV2ZW50IGluIHF1ZXVlIG9ubHkuXG5cbkFzIGV2ZW50IGFycml2ZXMsIGlmIHN0YXR1cyBpcyBub3QgJ3VuZGVmaW5lZCcgYW5kIHF1ZXVlIGlzIGZ1bGwsIGEgc3BlY2lhbCBldmVudCBpcyBkaXNwYXRjaGVkIHdpdGggYSBjb3B5IG9mIHN0YXR1cyBhbmQgdGhlIGZpcnN0XG5ldmVudCBpbiBxdWV1ZS4gU2F5ICduJyBpcyB0aGUgc2l6ZSBvZiB0aGUgcXVldWUsIHRoYXQgZXZlbnQgd2lsbCB0cmlnZ2VyIHVwZGF0ZSBvZiB0aGUgJ24nIG9sZCBzdGF0dXMgYnkgc29tZXRoaW5nKD8pIHdobyBrbm93cyBob3dcbnRvIG1hbmFnZSB0aGF0ICduJyBldmVudCB0byBvYnRhaW4gYW4gJ24tMScgaW4gdGltZSBzdGF0dXMuIEV2ZW50IHNlbnQgaXMgcmVtb3ZlZCBmcm9tIHRoZSBxdWV1ZS5cblxuQ3RybHogcHJvdmlkZXMgYW4gaGFuZGxlciB0byBtYW5hZ2UgJ3JldHVybiBhdCBzdGF0dXMgeCBpbiB0aW1lJzogaGFuZGxlciBtYW5hZ2UgYW4gZXZlbnQgc2hpcHBpbmcgc3RhdHVzIGFuZCBhbGwgdGhlIGV2ZW50cyBpbiBxdWV1ZSB0aGF0XG5vY2N1cnIgYWZ0ZXIgeC4gSGFuZGxlciBkaXNwYXRjaCBhbGwgdGhlIGV2ZW50cyBpbiB0aGUgbWVzc2FnZSBvbmUgYnkgb25lIGluIHRoZSBnaXZlbiBvcmRlciBhbmQgY29sbGVjdCByZXR1cm5lZCBzdGF0dXMuIEV2ZW50IHNlbnQgYXJlXG5ub3QgY29uc3VtZWQgYW5kIHdvbid0IGJlIHJlbW92ZWQgZnJvbSBxdWV1ZS5cbiovXG52YXIgdGFwZSA9IHJlcXVpcmUoJ3RhcGUnKTtcbnZhciBsb2Rhc2ggPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmltcG9ydCBDdHJseiBmcm9tICcuLi9zcmMvY3RybHouanMnO1xuXG4vKlxuQ3RybHogaXMgY3JlYXRlZCB3aXRoIGFuICd1bmRlZmluZWQnIGFzIHN0YXR1cyB0byBrZWVwIGFuZCBhbiBlbXB0eSBldmVudHMgcXVldWUuXG4qL1xudGFwZSgnQ3RybHogaXMgY3JlYXRlZCB3aXRoIHVuZGVmaW5lZCBhcyBzdGF0dXMgYW5kIGFuIGVtcHR5IGV2ZW50cyBxdWV1ZS4nLCBmdW5jdGlvbihhc3NlcnQpe1xuICB2YXIgc3V0ID0gbmV3IEN0cmx6O1xuICBhc3NlcnQub2soYnJhbmROZXdDdHJsekhhc1VuZGVmaW5lZFN0YXR1c0FuZEVtcHR5RXZlbnRRdWV1ZShzdXQpKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbmZ1bmN0aW9uIGJyYW5kTmV3Q3RybHpIYXNVbmRlZmluZWRTdGF0dXNBbmRFbXB0eUV2ZW50UXVldWUoY3RybHopIHtcbiAgcmV0dXJuIGxvZGFzaC5pc1VuZGVmaW5lZChjdHJsei5zdGF0dXMpICYmIGxvZGFzaC5pc0VtcHR5KGN0cmx6LmV2ZW50cXVldWUpO1xufTtcblxuLypcbklmIG5vIHF1ZXVlIHNpemUgaXMgc3BlY2lmaWVkLCBkZWZhdWx0IG1heCBzaXplIGlzIDEwLlxuKi9cbnRhcGUoJ0N0cmx6IHNldCBhIGRlZmF1bHQgdmFsdWUgb2YgMTAgYXMgcXVldWUgbWF4IHNpemUgaWYgbm8gdmFsdWUgaXMgcHJvdmlkZWQuJywgZnVuY3Rpb24oYXNzZXJ0KXtcbiAgdmFyIHN1dCA9IG5ldyBDdHJsejtcbiAgYXNzZXJ0LmVxdWFscyhzdXQucXVldWVNYXhTaXplLCAxMCwgJzEwIGlzIHRoZSBkZWZhdWx0IEN0cmx6XFwncyBxdWV1ZSBtYXggc2l6ZScpO1xuICBhc3NlcnQuZW5kKCk7XG59KTtcblxuLypcbkN0cmx6J3MgcXVldWUgaXMgZW1wdHkgYW5kIGFuIGV2ZW50IGFycml2ZXMuIEJlY2F1c2UgcXVldWUgaXMgZW1wdHksIHN0YXRlIGlzIHVwZGF0ZWQgdG9vLlxuKi9cbnRhcGUoJ0N0cmx6IHN0b3JlcyBpbiB0aGUgcXVldWUgdGhlIGZpcnN0IGV2ZW50IHRoYXQgY29tZXMgYW5kIHVwZGF0ZXMgaXRzIHN0YXRlLicsIGZ1bmN0aW9uKGFzc2VydCl7XG4gIHZhciBzdXQgPSBuZXcgQ3RybHo7XG4gIHZhciBjb21tYW5kID0geyBzYXk6IFwiaGVsbG9cIiB9O1xuICB2YXIgc3RhdGUgPSB7IGhlbGxvX2NvdW50OiAwIH07XG4gIHN1dC5hY2NlcHQoY29tbWFuZCwgc3RhdGUpO1xuICBhc3NlcnQub2soY3RybHpTdG9yZXNTdGF0ZUFuZEV2ZW50cyhzdXQsIFsgY29tbWFuZCBdLCBzdGF0ZSkpO1xuICBhc3NlcnQuZW5kKCk7XG59KTtcblxuLypcbkN0cmx6J3MgcXVldWUgYWxyZWFkeSBzdG9yZXMgMyBldmVudHMgYW5kIGFuIGV2ZW50IGFycml2ZXMuIEN0cmx6J3Mgc3RhdGUgaXMgbGVmdCB1bmNoYW5nZWQuXG4qL1xudGFwZSgnQ3RybHogc3RvcmVzIHRoZSB0aGlyZCBpbmNvbWluZyBldmVudCBpbiBxdWV1ZVxcJ3MgdGhpcmQgcG9zaXRpb24uJywgZnVuY3Rpb24oYXNzZXJ0KXtcbiAgdmFyIHN1dCA9IG5ldyBDdHJsejtcbiAgc3V0LmFjY2VwdCh7IGFkZDogMSB9LCB7IGNvdW50OiAwIH0pO1xuICBzdXQuYWNjZXB0KHsgYWRkOiAyIH0sIHsgY291bnQ6IDEgfSk7XG4gIHN1dC5hY2NlcHQoeyBhZGQ6IDMgfSwgeyBjb3VudDogMyB9KTtcbiAgYXNzZXJ0Lm9rKGN0cmx6U3RvcmVzU3RhdGVBbmRFdmVudHMoc3V0LCBbeyBhZGQ6IDEgfSwgeyBhZGQ6IDIgfSwgeyBhZGQ6IDMgfV0sIHsgY291bnQ6IDAgfSkpO1xuICBhc3NlcnQuZW5kKCk7XG59KTtcblxuZnVuY3Rpb24gY3RybHpTdG9yZXNTdGF0ZUFuZEV2ZW50cyhjdHJseiwgY29tbWFuZHMsIHN0YXRlKSB7XG4gIHJldHVybiBsb2Rhc2guaXNFcXVhbChjdHJsei5xdWV1ZSwgY29tbWFuZHMpICYmIGxvZGFzaC5pc0VxdWFsKGN0cmx6LnN0YXRlLCBzdGF0ZSk7XG59O1xuXG4vKlxuIyMgV2hhdCBoYXBwZW4gd2hlbiBhIG5ldyBldmVudCBhcnJpdmVzIGFuZCBDdHJseidzIHF1ZXVlIGlzIGZ1bGw/XG5DdHJseiBwaWNrIHRoZSBvbGRlc3QgZXZlbnQgaW4gcXVldWUgYW5kIHBhc3MgaXQgYWxvbmcgd2l0aCBzdGF0ZSB0byBjb21wb25lbnQgdGhhdCBpcyBhYmxlIHRvIGhhbmRsZSBpdC4gQ3RybHogZXhwZWN0IGNvbXBvbmVudCByZXR1cm5zXG5hbiB1cGRhdGVkIHN0YXRlLiBDdHJseiBkb2VzIG5vdCBjYXJlIHdobyBjb21wb25lbnQgcmVhbGx5IGlzLCBpZiBubyBjb21wb25lbnQgaXMgcHJvdmlkZWQgaGUgc2ltcGx5IHVzZXMgdGhlIGxhdGVzdCByZWxpYWJsZSBzdGF0ZSBoZVxuc3RvcmVzLlxuT2xkZXN0IGV2ZW50IGlzIHJlbW92ZWQgZnJvbSBxdWV1ZSwgZXZlbiBpZiBubyBjb21wb25lbnQgaXMgcHJvdmlkZWQuXG5cblxuQ3RybHoncyBxdWV1ZSBpcyBmdWxsIGFuZCBhbiBldmVudCBhcnJpdmVzLlxuKi9cblxudGFwZSgnQ3RybHogaGFzIGEgZGVmYXVsdCBoYW5kbGVyIHRoYXQgbGlzdGVuIGZvciBldmVudHMgdG8gc3RvcmUgdGhlbS4nLCBmdW5jdGlvbihhc3NlcnQpIHtcbiAgdmFyIHN1dCA9IG5ldyBDdHJsejtcbiAgZmlsbEN0cmx6UXVldWUoc3V0LCBnZXRUZW5Db21tYW5kcygpKTtcbiAgc3V0LmFjY2VwdCh7IGFkZDogMTAgfSwgeyBjb3VudDogNDUgfSk7XG4gIGFzc2VydC5vayhjdHJselN0b3Jlc1N0YXRlQW5kRXZlbnRzKHN1dCwgZ2V0RXhwZWN0ZWRUZW5Db21tYW5kcygpLCB7IGNvdW50OiAwIH0pKTtcbiAgYXNzZXJ0LmVuZCgpO1xufSk7XG5cbmZ1bmN0aW9uIGdldFRlbkNvbW1hbmRzKCkge1xuICByZXR1cm4gW1xuICAgIHsgYWRkOiAwIH0sIHsgYWRkOiAxIH0sIHsgYWRkOiAyIH0sIHsgYWRkOiAzIH0sIHsgYWRkOiA0IH0sXG4gICAgeyBhZGQ6IDUgfSwgeyBhZGQ6IDYgfSwgeyBhZGQ6IDcgfSwgeyBhZGQ6IDggfSwgeyBhZGQ6IDkgfVxuICBdO1xufVxuXG5mdW5jdGlvbiBnZXRFeHBlY3RlZFRlbkNvbW1hbmRzKCkge1xuICB2YXIgZXhwZWN0ZWQgPSBnZXRUZW5Db21tYW5kcygpO1xuICBleHBlY3RlZCA9IGV4cGVjdGVkLnNsaWNlKDEpO1xuICBleHBlY3RlZC5wdXNoKHsgYWRkOiAxMCB9KTtcbiAgcmV0dXJuIGV4cGVjdGVkO1xufVxuXG5mdW5jdGlvbiBmaWxsQ3RybHpRdWV1ZShzdXQsIGNvbW1hbmRzKSB7XG4gIGNvbW1hbmRzLmZvckVhY2goY29tbWFuZCA9PiB7IHN1dC5hY2NlcHQoY29tbWFuZCwgeyBjb3VudDogMCB9KTsgfSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ctrlz.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "sut",
        "Ctrlz",
        "ok",
        "brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue",
        "end",
        "ctrlz",
        "isUndefined",
        "status",
        "isEmpty",
        "eventqueue",
        "equals",
        "queueMaxSize",
        "command",
        "say",
        "state",
        "hello_count",
        "accept",
        "ctrlzStoresStateAndEvents",
        "add",
        "count",
        "commands",
        "isEqual",
        "queue",
        "fillCtrlzQueue",
        "getTenCommands",
        "getExpectedTenCommands",
        "expected",
        "slice",
        "push",
        "forEach"
      ],
      "mappings": ";;AAmCA;;;;AAnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,sEAAD,EAAyE,UAASG,MAAT,EAAgB;AAC3F,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACG,EAAP,CAAUC,iDAAiD,CAACH,GAAD,CAA3D;AACAD,EAAAA,MAAM,CAACK,GAAP;AACD,CAJG,CAAJ;;AAMA,SAASD,iDAAT,CAA2DE,KAA3D,EAAkE;AAChE,SAAOP,MAAM,CAACQ,WAAP,CAAmBD,KAAK,CAACE,MAAzB,KAAoCT,MAAM,CAACU,OAAP,CAAeH,KAAK,CAACI,UAArB,CAA3C;AACD;;AAAA;AAED;AACA;AACA;;AACAb,IAAI,CAAC,4EAAD,EAA+E,UAASG,MAAT,EAAgB;AACjG,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAF,EAAAA,MAAM,CAACW,MAAP,CAAcV,GAAG,CAACW,YAAlB,EAAgC,EAAhC,EAAoC,2CAApC;AACAZ,EAAAA,MAAM,CAACK,GAAP;AACD,CAJG,CAAJ;AAMA;AACA;AACA;;AACAR,IAAI,CAAC,6EAAD,EAAgF,UAASG,MAAT,EAAgB;AAClG,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACA,MAAIW,OAAO,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAZ;AACAf,EAAAA,GAAG,CAACgB,MAAJ,CAAWJ,OAAX,EAAoBE,KAApB;AACAf,EAAAA,MAAM,CAACG,EAAP,CAAUe,yBAAyB,CAACjB,GAAD,EAAM,CAAEY,OAAF,CAAN,EAAmBE,KAAnB,CAAnC;AACAf,EAAAA,MAAM,CAACK,GAAP;AACD,CAPG,CAAJ;AASA;AACA;AACA;;AACAR,IAAI,CAAC,mEAAD,EAAsE,UAASG,MAAT,EAAgB;AACxF,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAD,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAuB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAvB;AACAnB,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAuB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAvB;AACAnB,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAuB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAvB;AACApB,EAAAA,MAAM,CAACG,EAAP,CAAUe,yBAAyB,CAACjB,GAAD,EAAM,CAAC;AAAEkB,IAAAA,GAAG,EAAE;AAAP,GAAD,EAAa;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAAb,EAAyB;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAAzB,CAAN,EAA4C;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA5C,CAAnC;AACApB,EAAAA,MAAM,CAACK,GAAP;AACD,CAPG,CAAJ;;AASA,SAASa,yBAAT,CAAmCZ,KAAnC,EAA0Ce,QAA1C,EAAoDN,KAApD,EAA2D;AACzD,SAAOhB,MAAM,CAACuB,OAAP,CAAehB,KAAK,CAACiB,KAArB,EAA4BF,QAA5B,KAAyCtB,MAAM,CAACuB,OAAP,CAAehB,KAAK,CAACS,KAArB,EAA4BA,KAA5B,CAAhD;AACD;;AAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlB,IAAI,CAAC,mEAAD,EAAsE,UAASG,MAAT,EAAiB;AACzF,MAAIC,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACAsB,EAAAA,cAAc,CAACvB,GAAD,EAAMwB,cAAc,EAApB,CAAd;AACAxB,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAX,EAAwB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAxB;AACApB,EAAAA,MAAM,CAACG,EAAP,CAAUe,yBAAyB,CAACjB,GAAD,EAAMyB,sBAAsB,EAA5B,EAAgC;AAAEN,IAAAA,KAAK,EAAE;AAAT,GAAhC,CAAnC;AACApB,EAAAA,MAAM,CAACK,GAAP;AACD,CANG,CAAJ;;AAQA,SAASoB,cAAT,GAA0B;AACxB,SAAO,CACL;AAAEN,IAAAA,GAAG,EAAE;AAAP,GADK,EACO;AAAEA,IAAAA,GAAG,EAAE;AAAP,GADP,EACmB;AAAEA,IAAAA,GAAG,EAAE;AAAP,GADnB,EAC+B;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAD/B,EAC2C;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAD3C,EAEL;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAFK,EAEO;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAFP,EAEmB;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAFnB,EAE+B;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAF/B,EAE2C;AAAEA,IAAAA,GAAG,EAAE;AAAP,GAF3C,CAAP;AAID;;AAED,SAASO,sBAAT,GAAkC;AAChC,MAAIC,QAAQ,GAAGF,cAAc,EAA7B;AACAE,EAAAA,QAAQ,GAAGA,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAX;AACAD,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAEV,IAAAA,GAAG,EAAE;AAAP,GAAd;AACA,SAAOQ,QAAP;AACD;;AAED,SAASH,cAAT,CAAwBvB,GAAxB,EAA6BoB,QAA7B,EAAuC;AACrCA,EAAAA,QAAQ,CAACS,OAAT,CAAiB,UAAAjB,OAAO,EAAI;AAAEZ,IAAAA,GAAG,CAACgB,MAAJ,CAAWJ,OAAX,EAAoB;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAApB;AAAoC,GAAlE;AACD",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
      "sourcesContent": [
        "/*\n# Ctrlz\nCtrlz keeps an application's state copy and a collection of already occurred events.\n\nUser wants to return back to, let's say three events earlier in time. Ctrlz pick state copy and applies all the events he stored\nminus three.\n\nCtrlz does not need Eventbus, but Eventbus is Ctrlz's natural symbiont.\n\n## How do Ctrlz interact with Eventbus? Or is Eventbus interacting with Ctrlz?\nEventbus handle events. Events arrive always with status. While finished handling the event, Eventbus pass it and status to Ctrlz.\nCtrlz stores status if none and store event if there are free slots. Ctrlz does not care if event is good or wrong.\n\nSo Eventbus and Ctrlz are completely separated tools developer can use as components.\n\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n-TESTS\n\nAs event arrives, if status is not 'undefined', Ctrl puts event in queue only.\n\nAs event arrives, if status is not 'undefined' and queue is full, a special event is dispatched with a copy of status and the first\nevent in queue. Say 'n' is the size of the queue, that event will trigger update of the 'n' old status by something(?) who knows how\nto manage that 'n' event to obtain an 'n-1' in time status. Event sent is removed from the queue.\n\nCtrlz provides an handler to manage 'return at status x in time': handler manage an event shipping status and all the events in queue that\noccurr after x. Handler dispatch all the events in the message one by one in the given order and collect returned status. Event sent are\nnot consumed and won't be removed from queue.\n*/\nvar tape = require('tape');\nvar lodash = require('lodash');\nimport Ctrlz from '../src/ctrlz.js';\n\n/*\nCtrlz is created with an 'undefined' as status to keep and an empty events queue.\n*/\ntape('Ctrlz is created with undefined as status and an empty events queue.', function(assert){\n  var sut = new Ctrlz;\n  assert.ok(brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(sut));\n  assert.end();\n});\n\nfunction brandNewCtrlzHasUndefinedStatusAndEmptyEventQueue(ctrlz) {\n  return lodash.isUndefined(ctrlz.status) && lodash.isEmpty(ctrlz.eventqueue);\n};\n\n/*\nIf no queue size is specified, default max size is 10.\n*/\ntape('Ctrlz set a default value of 10 as queue max size if no value is provided.', function(assert){\n  var sut = new Ctrlz;\n  assert.equals(sut.queueMaxSize, 10, '10 is the default Ctrlz\\'s queue max size');\n  assert.end();\n});\n\n/*\nCtrlz's queue is empty and an event arrives. Because queue is empty, state is updated too.\n*/\ntape('Ctrlz stores in the queue the first event that comes and updates its state.', function(assert){\n  var sut = new Ctrlz;\n  var command = { say: \"hello\" };\n  var state = { hello_count: 0 };\n  sut.accept(command, state);\n  assert.ok(ctrlzStoresStateAndEvents(sut, [ command ], state));\n  assert.end();\n});\n\n/*\nCtrlz's queue already stores 3 events and an event arrives. Ctrlz's state is left unchanged.\n*/\ntape('Ctrlz stores the third incoming event in queue\\'s third position.', function(assert){\n  var sut = new Ctrlz;\n  sut.accept({ add: 1 }, { count: 0 });\n  sut.accept({ add: 2 }, { count: 1 });\n  sut.accept({ add: 3 }, { count: 3 });\n  assert.ok(ctrlzStoresStateAndEvents(sut, [{ add: 1 }, { add: 2 }, { add: 3 }], { count: 0 }));\n  assert.end();\n});\n\nfunction ctrlzStoresStateAndEvents(ctrlz, commands, state) {\n  return lodash.isEqual(ctrlz.queue, commands) && lodash.isEqual(ctrlz.state, state);\n};\n\n/*\n## What happen when a new event arrives and Ctrlz's queue is full?\nCtrlz pick the oldest event in queue and pass it along with state to component that is able to handle it. Ctrlz expect component returns\nan updated state. Ctrlz does not care who component really is, if no component is provided he simply uses the latest reliable state he\nstores.\nOldest event is removed from queue, even if no component is provided.\n\n\nCtrlz's queue is full and an event arrives.\n*/\n\ntape('Ctrlz has a default handler that listen for events to store them.', function(assert) {\n  var sut = new Ctrlz;\n  fillCtrlzQueue(sut, getTenCommands());\n  sut.accept({ add: 10 }, { count: 45 });\n  assert.ok(ctrlzStoresStateAndEvents(sut, getExpectedTenCommands(), { count: 0 }));\n  assert.end();\n});\n\nfunction getTenCommands() {\n  return [\n    { add: 0 }, { add: 1 }, { add: 2 }, { add: 3 }, { add: 4 },\n    { add: 5 }, { add: 6 }, { add: 7 }, { add: 8 }, { add: 9 }\n  ];\n}\n\nfunction getExpectedTenCommands() {\n  var expected = getTenCommands();\n  expected = expected.slice(1);\n  expected.push({ add: 10 });\n  return expected;\n}\n\nfunction fillCtrlzQueue(sut, commands) {\n  commands.forEach(command => { sut.accept(command, { count: 0 }); });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634757433806
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventshandler/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventshandler\",\"filename\":\"/home/fpezzati/workspace/movona/eventshandler/src/ctrlz.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventshandler\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventshandler",
      "filename": "/home/fpezzati/workspace/movona/eventshandler/src/ctrlz.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventshandler",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventshandler/src/ctrlz.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventshandler/src/ctrlz.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
        "sourceFileName": "ctrlz.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Ctrlz = /*#__PURE__*/function () {\n  function Ctrlz() {\n    var queuesize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    var statusHandler = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, Ctrlz);\n\n    this.queueMaxSize = queuesize;\n    this.queue = [];\n    this.state = {};\n    this.stateHandler = statusHandler;\n  }\n\n  _createClass(Ctrlz, [{\n    key: \"accept\",\n    value: function accept(command, state) {\n      if (this.queue.length < 1) {\n        this.state = state;\n      } else if (this.queue.length >= this.queueMaxSize) {\n        this.state = this.updateStateAndQueue(this.queue, this.state, this.stateHandler);\n      }\n\n      this.queue.push(command);\n    }\n  }, {\n    key: \"updateStateAndQueue\",\n    value: function updateStateAndQueue(queue, state, handler) {\n      var command = queue[0];\n      queue.shift();\n\n      if (handler == undefined) {\n        return state;\n      } else {\n        return handler.accept(command, state);\n      }\n    }\n  }]);\n\n  return Ctrlz;\n}();\n\n;\nvar _default = Ctrlz;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN0cmx6LmpzIl0sIm5hbWVzIjpbIkN0cmx6IiwicXVldWVzaXplIiwic3RhdHVzSGFuZGxlciIsInF1ZXVlTWF4U2l6ZSIsInF1ZXVlIiwic3RhdGUiLCJzdGF0ZUhhbmRsZXIiLCJjb21tYW5kIiwibGVuZ3RoIiwidXBkYXRlU3RhdGVBbmRRdWV1ZSIsInB1c2giLCJoYW5kbGVyIiwic2hpZnQiLCJ1bmRlZmluZWQiLCJhY2NlcHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBTUEsSztBQUVKLG1CQUEyQztBQUFBLFFBQS9CQyxTQUErQix1RUFBbkIsRUFBbUI7QUFBQSxRQUFmQyxhQUFlOztBQUFBOztBQUN6QyxTQUFLQyxZQUFMLEdBQW9CRixTQUFwQjtBQUNBLFNBQUtHLEtBQUwsR0FBYSxFQUFiO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLEVBQWI7QUFDQSxTQUFLQyxZQUFMLEdBQW9CSixhQUFwQjtBQUNEOzs7O1dBRUQsZ0JBQU9LLE9BQVAsRUFBZ0JGLEtBQWhCLEVBQXVCO0FBQ3JCLFVBQUcsS0FBS0QsS0FBTCxDQUFXSSxNQUFYLEdBQW9CLENBQXZCLEVBQTBCO0FBQ3hCLGFBQUtILEtBQUwsR0FBYUEsS0FBYjtBQUNELE9BRkQsTUFFTyxJQUFJLEtBQUtELEtBQUwsQ0FBV0ksTUFBWCxJQUFxQixLQUFLTCxZQUE5QixFQUE0QztBQUNqRCxhQUFLRSxLQUFMLEdBQWEsS0FBS0ksbUJBQUwsQ0FBeUIsS0FBS0wsS0FBOUIsRUFBcUMsS0FBS0MsS0FBMUMsRUFBaUQsS0FBS0MsWUFBdEQsQ0FBYjtBQUNEOztBQUNELFdBQUtGLEtBQUwsQ0FBV00sSUFBWCxDQUFnQkgsT0FBaEI7QUFDRDs7O1dBRUQsNkJBQW9CSCxLQUFwQixFQUEyQkMsS0FBM0IsRUFBa0NNLE9BQWxDLEVBQTJDO0FBQ3pDLFVBQUlKLE9BQU8sR0FBR0gsS0FBSyxDQUFDLENBQUQsQ0FBbkI7QUFDQUEsTUFBQUEsS0FBSyxDQUFDUSxLQUFOOztBQUNBLFVBQUdELE9BQU8sSUFBSUUsU0FBZCxFQUF5QjtBQUN2QixlQUFPUixLQUFQO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsZUFBT00sT0FBTyxDQUFDRyxNQUFSLENBQWVQLE9BQWYsRUFBd0JGLEtBQXhCLENBQVA7QUFDRDtBQUNGOzs7Ozs7QUFDRjtlQUVjTCxLIiwic291cmNlUm9vdCI6Ii9ob21lL2ZwZXp6YXRpL3dvcmtzcGFjZS9tb3ZvbmEvZXZlbnRzaGFuZGxlci9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ3RybHoge1xuXG4gIGNvbnN0cnVjdG9yKHF1ZXVlc2l6ZSA9IDEwLCBzdGF0dXNIYW5kbGVyKSB7XG4gICAgdGhpcy5xdWV1ZU1heFNpemUgPSBxdWV1ZXNpemU7XG4gICAgdGhpcy5xdWV1ZSA9IFtdO1xuICAgIHRoaXMuc3RhdGUgPSB7fTtcbiAgICB0aGlzLnN0YXRlSGFuZGxlciA9IHN0YXR1c0hhbmRsZXI7XG4gIH1cblxuICBhY2NlcHQoY29tbWFuZCwgc3RhdGUpIHtcbiAgICBpZih0aGlzLnF1ZXVlLmxlbmd0aCA8IDEpIHtcbiAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICB9IGVsc2UgaWYgKHRoaXMucXVldWUubGVuZ3RoID49IHRoaXMucXVldWVNYXhTaXplKSB7XG4gICAgICB0aGlzLnN0YXRlID0gdGhpcy51cGRhdGVTdGF0ZUFuZFF1ZXVlKHRoaXMucXVldWUsIHRoaXMuc3RhdGUsIHRoaXMuc3RhdGVIYW5kbGVyKTtcbiAgICB9XG4gICAgdGhpcy5xdWV1ZS5wdXNoKGNvbW1hbmQpO1xuICB9XG5cbiAgdXBkYXRlU3RhdGVBbmRRdWV1ZShxdWV1ZSwgc3RhdGUsIGhhbmRsZXIpIHtcbiAgICBsZXQgY29tbWFuZCA9IHF1ZXVlWzBdO1xuICAgIHF1ZXVlLnNoaWZ0KCk7XG4gICAgaWYoaGFuZGxlciA9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGhhbmRsZXIuYWNjZXB0KGNvbW1hbmQsIHN0YXRlKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEN0cmx6O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ctrlz.js"
      ],
      "names": [
        "Ctrlz",
        "queuesize",
        "statusHandler",
        "queueMaxSize",
        "queue",
        "state",
        "stateHandler",
        "command",
        "length",
        "updateStateAndQueue",
        "push",
        "handler",
        "shift",
        "undefined",
        "accept"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,K;AAEJ,mBAA2C;AAAA,QAA/BC,SAA+B,uEAAnB,EAAmB;AAAA,QAAfC,aAAe;;AAAA;;AACzC,SAAKC,YAAL,GAAoBF,SAApB;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoBJ,aAApB;AACD;;;;WAED,gBAAOK,OAAP,EAAgBF,KAAhB,EAAuB;AACrB,UAAG,KAAKD,KAAL,CAAWI,MAAX,GAAoB,CAAvB,EAA0B;AACxB,aAAKH,KAAL,GAAaA,KAAb;AACD,OAFD,MAEO,IAAI,KAAKD,KAAL,CAAWI,MAAX,IAAqB,KAAKL,YAA9B,EAA4C;AACjD,aAAKE,KAAL,GAAa,KAAKI,mBAAL,CAAyB,KAAKL,KAA9B,EAAqC,KAAKC,KAA1C,EAAiD,KAAKC,YAAtD,CAAb;AACD;;AACD,WAAKF,KAAL,CAAWM,IAAX,CAAgBH,OAAhB;AACD;;;WAED,6BAAoBH,KAApB,EAA2BC,KAA3B,EAAkCM,OAAlC,EAA2C;AACzC,UAAIJ,OAAO,GAAGH,KAAK,CAAC,CAAD,CAAnB;AACAA,MAAAA,KAAK,CAACQ,KAAN;;AACA,UAAGD,OAAO,IAAIE,SAAd,EAAyB;AACvB,eAAOR,KAAP;AACD,OAFD,MAEO;AACL,eAAOM,OAAO,CAACG,MAAR,CAAeP,OAAf,EAAwBF,KAAxB,CAAP;AACD;AACF;;;;;;AACF;eAEcL,K",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
      "sourcesContent": [
        "class Ctrlz {\n\n  constructor(queuesize = 10, statusHandler) {\n    this.queueMaxSize = queuesize;\n    this.queue = [];\n    this.state = {};\n    this.stateHandler = statusHandler;\n  }\n\n  accept(command, state) {\n    if(this.queue.length < 1) {\n      this.state = state;\n    } else if (this.queue.length >= this.queueMaxSize) {\n      this.state = this.updateStateAndQueue(this.queue, this.state, this.stateHandler);\n    }\n    this.queue.push(command);\n  }\n\n  updateStateAndQueue(queue, state, handler) {\n    let command = queue[0];\n    queue.shift();\n    if(handler == undefined) {\n      return state;\n    } else {\n      return handler.accept(command, state);\n    }\n  }\n};\n\nexport default Ctrlz;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634680499457
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventshandler/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventshandler\",\"filename\":\"/home/fpezzati/workspace/movona/eventshandler/test/eventshandler.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventshandler\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventshandler",
      "filename": "/home/fpezzati/workspace/movona/eventshandler/test/eventshandler.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventshandler",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventshandler/test/eventshandler.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventshandler/test/eventshandler.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
        "sourceFileName": "eventshandler.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _eventshandler = require(\"../src/eventshandler.js\");\n\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nCombining Eventbus and Ctrlz allows to manage events and back-in-time effect.\n*/\ntape('Eventbus and Ctrlz manage a back-in-time event', function (assert) {\n  var eventshandler = new _eventshandler.EventsHandler(new _eventshandler.Eventbus(), new _eventshandler.Ctrlz());\n  var state = {\n    count: 0\n  };\n  eventshandler.eventbus.handlers.set(\"add\", getAddHandler());\n  getTenEvents().forEach(function (evt) {\n    state = eventshandler.accept(evt, state);\n  });\n  assert.ok(lodash.isEqual({\n    count: 45\n  }, state));\n  state = eventshandler.accept({\n    command: \"ctrlz\",\n    howmany: 2\n  }, state);\n  assert.ok(lodash.isEqual({\n    count: 28\n  }, state));\n  assert.end();\n});\n\nfunction getAddHandler() {\n  return {\n    behave: function behave(msg, state) {\n      state.count = state.count + msg.payload;\n      return state;\n    }\n  };\n}\n\nfunction getTenEvents() {\n  return [{\n    command: 'add',\n    payload: 0\n  }, {\n    command: 'add',\n    payload: 1\n  }, {\n    command: 'add',\n    payload: 2\n  }, {\n    command: 'add',\n    payload: 3\n  }, {\n    command: 'add',\n    payload: 4\n  }, {\n    command: 'add',\n    payload: 5\n  }, {\n    command: 'add',\n    payload: 6\n  }, {\n    command: 'add',\n    payload: 7\n  }, {\n    command: 'add',\n    payload: 8\n  }, {\n    command: 'add',\n    payload: 9\n  }];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50c2hhbmRsZXIudGVzdC5qcyJdLCJuYW1lcyI6WyJ0YXBlIiwicmVxdWlyZSIsImxvZGFzaCIsImFzc2VydCIsImV2ZW50c2hhbmRsZXIiLCJFdmVudHNIYW5kbGVyIiwiRXZlbnRidXMiLCJDdHJseiIsInN0YXRlIiwiY291bnQiLCJldmVudGJ1cyIsImhhbmRsZXJzIiwic2V0IiwiZ2V0QWRkSGFuZGxlciIsImdldFRlbkV2ZW50cyIsImZvckVhY2giLCJldnQiLCJhY2NlcHQiLCJvayIsImlzRXF1YWwiLCJjb21tYW5kIiwiaG93bWFueSIsImVuZCIsImJlaGF2ZSIsIm1zZyIsInBheWxvYWQiXSwibWFwcGluZ3MiOiI7O0FBRUE7O0FBRkEsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUdBO0FBQ0E7QUFDQTtBQUNBRCxJQUFJLENBQUMsZ0RBQUQsRUFBbUQsVUFBU0csTUFBVCxFQUFpQjtBQUN0RSxNQUFJQyxhQUFhLEdBQUcsSUFBSUMsNEJBQUosQ0FBa0IsSUFBSUMsdUJBQUosRUFBbEIsRUFBZ0MsSUFBSUMsb0JBQUosRUFBaEMsQ0FBcEI7QUFDQSxNQUFJQyxLQUFLLEdBQUc7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBWjtBQUNBTCxFQUFBQSxhQUFhLENBQUNNLFFBQWQsQ0FBdUJDLFFBQXZCLENBQWdDQyxHQUFoQyxDQUFvQyxLQUFwQyxFQUEyQ0MsYUFBYSxFQUF4RDtBQUNBQyxFQUFBQSxZQUFZLEdBQUdDLE9BQWYsQ0FBdUIsVUFBQUMsR0FBRyxFQUFJO0FBQzVCUixJQUFBQSxLQUFLLEdBQUdKLGFBQWEsQ0FBQ2EsTUFBZCxDQUFxQkQsR0FBckIsRUFBMEJSLEtBQTFCLENBQVI7QUFDRCxHQUZEO0FBR0FMLEVBQUFBLE1BQU0sQ0FBQ2UsRUFBUCxDQUFVaEIsTUFBTSxDQUFDaUIsT0FBUCxDQUFlO0FBQUVWLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQWYsRUFBOEJELEtBQTlCLENBQVY7QUFDQUEsRUFBQUEsS0FBSyxHQUFHSixhQUFhLENBQUNhLE1BQWQsQ0FBcUI7QUFBRUcsSUFBQUEsT0FBTyxFQUFFLE9BQVg7QUFBb0JDLElBQUFBLE9BQU8sRUFBRTtBQUE3QixHQUFyQixFQUFzRGIsS0FBdEQsQ0FBUjtBQUNBTCxFQUFBQSxNQUFNLENBQUNlLEVBQVAsQ0FBVWhCLE1BQU0sQ0FBQ2lCLE9BQVAsQ0FBZTtBQUFFVixJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFmLEVBQThCRCxLQUE5QixDQUFWO0FBQ0FMLEVBQUFBLE1BQU0sQ0FBQ21CLEdBQVA7QUFDRCxDQVhHLENBQUo7O0FBYUEsU0FBU1QsYUFBVCxHQUF5QjtBQUN2QixTQUFPO0FBQUVVLElBQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjaEIsS0FBZCxFQUFxQjtBQUNwQ0EsTUFBQUEsS0FBSyxDQUFDQyxLQUFOLEdBQWNELEtBQUssQ0FBQ0MsS0FBTixHQUFjZSxHQUFHLENBQUNDLE9BQWhDO0FBQ0EsYUFBT2pCLEtBQVA7QUFDRDtBQUhNLEdBQVA7QUFJRDs7QUFFRCxTQUFTTSxZQUFULEdBQXdCO0FBQ3RCLFNBQU8sQ0FDTDtBQUFFTSxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBREssRUFDMkI7QUFBRUwsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JLLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUQzQixFQUMyRDtBQUFFTCxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBRDNELEVBRUw7QUFBRUwsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JLLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUZLLEVBRTJCO0FBQUVMLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCSyxJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FGM0IsRUFFMkQ7QUFBRUwsSUFBQUEsT0FBTyxFQUFFLEtBQVg7QUFBa0JLLElBQUFBLE9BQU8sRUFBRTtBQUEzQixHQUYzRCxFQUdMO0FBQUVMLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCSyxJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FISyxFQUcyQjtBQUFFTCxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBSDNCLEVBRzJEO0FBQUVMLElBQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCSyxJQUFBQSxPQUFPLEVBQUU7QUFBM0IsR0FIM0QsRUFJTDtBQUFFTCxJQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkssSUFBQUEsT0FBTyxFQUFFO0FBQTNCLEdBSkssQ0FBUDtBQU1EIiwic291cmNlUm9vdCI6Ii9ob21lL2ZwZXp6YXRpL3dvcmtzcGFjZS9tb3ZvbmEvZXZlbnRzaGFuZGxlci90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbInZhciB0YXBlID0gcmVxdWlyZSgndGFwZScpO1xudmFyIGxvZGFzaCA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuaW1wb3J0IHsgRXZlbnRzSGFuZGxlciwgRXZlbnRidXMsIEN0cmx6IH0gZnJvbSAnLi4vc3JjL2V2ZW50c2hhbmRsZXIuanMnO1xuXG4vKlxuQ29tYmluaW5nIEV2ZW50YnVzIGFuZCBDdHJseiBhbGxvd3MgdG8gbWFuYWdlIGV2ZW50cyBhbmQgYmFjay1pbi10aW1lIGVmZmVjdC5cbiovXG50YXBlKCdFdmVudGJ1cyBhbmQgQ3RybHogbWFuYWdlIGEgYmFjay1pbi10aW1lIGV2ZW50JywgZnVuY3Rpb24oYXNzZXJ0KSB7XG4gIHZhciBldmVudHNoYW5kbGVyID0gbmV3IEV2ZW50c0hhbmRsZXIobmV3IEV2ZW50YnVzLCBuZXcgQ3RybHopO1xuICB2YXIgc3RhdGUgPSB7IGNvdW50OiAwIH07XG4gIGV2ZW50c2hhbmRsZXIuZXZlbnRidXMuaGFuZGxlcnMuc2V0KFwiYWRkXCIsIGdldEFkZEhhbmRsZXIoKSk7XG4gIGdldFRlbkV2ZW50cygpLmZvckVhY2goZXZ0ID0+IHtcbiAgICBzdGF0ZSA9IGV2ZW50c2hhbmRsZXIuYWNjZXB0KGV2dCwgc3RhdGUpO1xuICB9KTtcbiAgYXNzZXJ0Lm9rKGxvZGFzaC5pc0VxdWFsKHsgY291bnQ6IDQ1IH0sIHN0YXRlKSk7XG4gIHN0YXRlID0gZXZlbnRzaGFuZGxlci5hY2NlcHQoeyBjb21tYW5kOiBcImN0cmx6XCIsIGhvd21hbnk6IDJ9LCBzdGF0ZSk7XG4gIGFzc2VydC5vayhsb2Rhc2guaXNFcXVhbCh7IGNvdW50OiAyOCB9LCBzdGF0ZSkpO1xuICBhc3NlcnQuZW5kKCk7XG59KTtcblxuZnVuY3Rpb24gZ2V0QWRkSGFuZGxlcigpIHtcbiAgcmV0dXJuIHsgYmVoYXZlOiBmdW5jdGlvbihtc2csIHN0YXRlKSB7XG4gICAgc3RhdGUuY291bnQgPSBzdGF0ZS5jb3VudCArIG1zZy5wYXlsb2FkO1xuICAgIHJldHVybiBzdGF0ZTtcbiAgfX07XG59XG5cbmZ1bmN0aW9uIGdldFRlbkV2ZW50cygpIHtcbiAgcmV0dXJuIFtcbiAgICB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiAwIH0sIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDEgfSwgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogMiB9LFxuICAgIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDMgfSwgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogNCB9LCB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiA1IH0sXG4gICAgeyBjb21tYW5kOiAnYWRkJywgcGF5bG9hZDogNiB9LCB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiA3IH0sIHsgY29tbWFuZDogJ2FkZCcsIHBheWxvYWQ6IDggfSxcbiAgICB7IGNvbW1hbmQ6ICdhZGQnLCBwYXlsb2FkOiA5IH1cbiAgXTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "eventshandler.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "eventshandler",
        "EventsHandler",
        "Eventbus",
        "Ctrlz",
        "state",
        "count",
        "eventbus",
        "handlers",
        "set",
        "getAddHandler",
        "getTenEvents",
        "forEach",
        "evt",
        "accept",
        "ok",
        "isEqual",
        "command",
        "howmany",
        "end",
        "behave",
        "msg",
        "payload"
      ],
      "mappings": ";;AAEA;;AAFA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,gDAAD,EAAmD,UAASG,MAAT,EAAiB;AACtE,MAAIC,aAAa,GAAG,IAAIC,4BAAJ,CAAkB,IAAIC,uBAAJ,EAAlB,EAAgC,IAAIC,oBAAJ,EAAhC,CAApB;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAZ;AACAL,EAAAA,aAAa,CAACM,QAAd,CAAuBC,QAAvB,CAAgCC,GAAhC,CAAoC,KAApC,EAA2CC,aAAa,EAAxD;AACAC,EAAAA,YAAY,GAAGC,OAAf,CAAuB,UAAAC,GAAG,EAAI;AAC5BR,IAAAA,KAAK,GAAGJ,aAAa,CAACa,MAAd,CAAqBD,GAArB,EAA0BR,KAA1B,CAAR;AACD,GAFD;AAGAL,EAAAA,MAAM,CAACe,EAAP,CAAUhB,MAAM,CAACiB,OAAP,CAAe;AAAEV,IAAAA,KAAK,EAAE;AAAT,GAAf,EAA8BD,KAA9B,CAAV;AACAA,EAAAA,KAAK,GAAGJ,aAAa,CAACa,MAAd,CAAqB;AAAEG,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAArB,EAAsDb,KAAtD,CAAR;AACAL,EAAAA,MAAM,CAACe,EAAP,CAAUhB,MAAM,CAACiB,OAAP,CAAe;AAAEV,IAAAA,KAAK,EAAE;AAAT,GAAf,EAA8BD,KAA9B,CAAV;AACAL,EAAAA,MAAM,CAACmB,GAAP;AACD,CAXG,CAAJ;;AAaA,SAAST,aAAT,GAAyB;AACvB,SAAO;AAAEU,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAchB,KAAd,EAAqB;AACpCA,MAAAA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,GAAce,GAAG,CAACC,OAAhC;AACA,aAAOjB,KAAP;AACD;AAHM,GAAP;AAID;;AAED,SAASM,YAAT,GAAwB;AACtB,SAAO,CACL;AAAEM,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GADK,EAC2B;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAD3B,EAC2D;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAD3D,EAEL;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAFK,EAE2B;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAF3B,EAE2D;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAF3D,EAGL;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAHK,EAG2B;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAH3B,EAG2D;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAH3D,EAIL;AAAEL,IAAAA,OAAO,EAAE,KAAX;AAAkBK,IAAAA,OAAO,EAAE;AAA3B,GAJK,CAAP;AAMD",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
      "sourcesContent": [
        "var tape = require('tape');\nvar lodash = require('lodash');\nimport { EventsHandler, Eventbus, Ctrlz } from '../src/eventshandler.js';\n\n/*\nCombining Eventbus and Ctrlz allows to manage events and back-in-time effect.\n*/\ntape('Eventbus and Ctrlz manage a back-in-time event', function(assert) {\n  var eventshandler = new EventsHandler(new Eventbus, new Ctrlz);\n  var state = { count: 0 };\n  eventshandler.eventbus.handlers.set(\"add\", getAddHandler());\n  getTenEvents().forEach(evt => {\n    state = eventshandler.accept(evt, state);\n  });\n  assert.ok(lodash.isEqual({ count: 45 }, state));\n  state = eventshandler.accept({ command: \"ctrlz\", howmany: 2}, state);\n  assert.ok(lodash.isEqual({ count: 28 }, state));\n  assert.end();\n});\n\nfunction getAddHandler() {\n  return { behave: function(msg, state) {\n    state.count = state.count + msg.payload;\n    return state;\n  }};\n}\n\nfunction getTenEvents() {\n  return [\n    { command: 'add', payload: 0 }, { command: 'add', payload: 1 }, { command: 'add', payload: 2 },\n    { command: 'add', payload: 3 }, { command: 'add', payload: 4 }, { command: 'add', payload: 5 },\n    { command: 'add', payload: 6 }, { command: 'add', payload: 7 }, { command: 'add', payload: 8 },\n    { command: 'add', payload: 9 }\n  ];\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1642875100458
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventshandler/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventshandler\",\"filename\":\"/home/fpezzati/workspace/movona/eventshandler/src/eventshandler.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventshandler\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventshandler",
      "filename": "/home/fpezzati/workspace/movona/eventshandler/src/eventshandler.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventshandler",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventshandler/src/eventshandler.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventshandler/src/eventshandler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
        "sourceFileName": "eventshandler.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Ctrlz\", {\n  enumerable: true,\n  get: function get() {\n    return _ctrlz[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Eventbus\", {\n  enumerable: true,\n  get: function get() {\n    return _eventbus[\"default\"];\n  }\n});\nexports.EventsHandler = EventsHandler;\n\nvar _eventbus = _interopRequireDefault(require(\"../src/eventbus.js\"));\n\nvar _ctrlz = _interopRequireDefault(require(\"../src/ctrlz.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction EventsHandler(eventbus, ctrlz) {\n  eventbus.handlers.set(\"ctrlz\", {\n    behave: function behave(evt, state) {\n      removeLastHowmanyEvents(ctrlz.queue, evt.howmany || 1);\n      var ctrlzState = JSON.parse(JSON.stringify(ctrlz.state));\n      ctrlz.queue.forEach(function (event) {\n        ctrlzState = eventbus.accept(event, ctrlzState);\n      });\n      return ctrlzState;\n    }\n  });\n\n  function removeLastHowmanyEvents(queue, howmany) {\n    queue.splice(queue.length - howmany, queue.length - 1);\n  }\n\n  var eventsHandler = {\n    accept: function accept(evt, state) {\n      var newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50c2hhbmRsZXIuanMiXSwibmFtZXMiOlsiRXZlbnRzSGFuZGxlciIsImV2ZW50YnVzIiwiY3RybHoiLCJoYW5kbGVycyIsInNldCIsImJlaGF2ZSIsImV2dCIsInN0YXRlIiwicmVtb3ZlTGFzdEhvd21hbnlFdmVudHMiLCJxdWV1ZSIsImhvd21hbnkiLCJjdHJselN0YXRlIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiZm9yRWFjaCIsImV2ZW50IiwiYWNjZXB0Iiwic3BsaWNlIiwibGVuZ3RoIiwiZXZlbnRzSGFuZGxlciIsIm5ld3N0YXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxTQUFTQSxhQUFULENBQXVCQyxRQUF2QixFQUFpQ0MsS0FBakMsRUFBd0M7QUFFdENELEVBQUFBLFFBQVEsQ0FBQ0UsUUFBVCxDQUFrQkMsR0FBbEIsQ0FBc0IsT0FBdEIsRUFBK0I7QUFDN0JDLElBQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjQyxLQUFkLEVBQXFCO0FBQzNCQyxNQUFBQSx1QkFBdUIsQ0FBQ04sS0FBSyxDQUFDTyxLQUFQLEVBQWNILEdBQUcsQ0FBQ0ksT0FBSixJQUFlLENBQTdCLENBQXZCO0FBQ0EsVUFBSUMsVUFBVSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxTQUFMLENBQWVaLEtBQUssQ0FBQ0ssS0FBckIsQ0FBWCxDQUFqQjtBQUNBTCxNQUFBQSxLQUFLLENBQUNPLEtBQU4sQ0FBWU0sT0FBWixDQUFvQixVQUFBQyxLQUFLLEVBQUk7QUFDM0JMLFFBQUFBLFVBQVUsR0FBR1YsUUFBUSxDQUFDZ0IsTUFBVCxDQUFnQkQsS0FBaEIsRUFBdUJMLFVBQXZCLENBQWI7QUFDRCxPQUZEO0FBR0EsYUFBT0EsVUFBUDtBQUNEO0FBUjRCLEdBQS9COztBQVdBLFdBQVNILHVCQUFULENBQWlDQyxLQUFqQyxFQUF3Q0MsT0FBeEMsRUFBaUQ7QUFDL0NELElBQUFBLEtBQUssQ0FBQ1MsTUFBTixDQUFhVCxLQUFLLENBQUNVLE1BQU4sR0FBZVQsT0FBNUIsRUFBcUNELEtBQUssQ0FBQ1UsTUFBTixHQUFlLENBQXBEO0FBQ0Q7O0FBRUQsTUFBSUMsYUFBYSxHQUFHO0FBQ2xCSCxJQUFBQSxNQUFNLEVBQUUsZ0JBQVNYLEdBQVQsRUFBY0MsS0FBZCxFQUFxQjtBQUMzQixVQUFJYyxRQUFRLEdBQUdwQixRQUFRLENBQUNnQixNQUFULENBQWdCWCxHQUFoQixFQUFxQkMsS0FBckIsQ0FBZjtBQUNBTCxNQUFBQSxLQUFLLENBQUNlLE1BQU4sQ0FBYVgsR0FBYixFQUFrQkMsS0FBbEI7QUFDQSxhQUFPYyxRQUFQO0FBQ0Q7QUFMaUIsR0FBcEI7QUFPQUQsRUFBQUEsYUFBYSxDQUFDbkIsUUFBZCxHQUF5QkEsUUFBekI7QUFDQW1CLEVBQUFBLGFBQWEsQ0FBQ2xCLEtBQWQsR0FBc0JBLEtBQXRCO0FBQ0EsU0FBT2tCLGFBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9mcGV6emF0aS93b3Jrc3BhY2UvbW92b25hL2V2ZW50c2hhbmRsZXIvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFdmVudGJ1cyBmcm9tICcuLi9zcmMvZXZlbnRidXMuanMnO1xuaW1wb3J0IEN0cmx6IGZyb20gJy4uL3NyYy9jdHJsei5qcyc7XG5cbmZ1bmN0aW9uIEV2ZW50c0hhbmRsZXIoZXZlbnRidXMsIGN0cmx6KSB7XG5cbiAgZXZlbnRidXMuaGFuZGxlcnMuc2V0KFwiY3RybHpcIiwge1xuICAgIGJlaGF2ZTogZnVuY3Rpb24oZXZ0LCBzdGF0ZSkge1xuICAgICAgcmVtb3ZlTGFzdEhvd21hbnlFdmVudHMoY3RybHoucXVldWUsIGV2dC5ob3dtYW55IHx8IDEpO1xuICAgICAgdmFyIGN0cmx6U3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGN0cmx6LnN0YXRlKSk7XG4gICAgICBjdHJsei5xdWV1ZS5mb3JFYWNoKGV2ZW50ID0+IHtcbiAgICAgICAgY3RybHpTdGF0ZSA9IGV2ZW50YnVzLmFjY2VwdChldmVudCwgY3RybHpTdGF0ZSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBjdHJselN0YXRlO1xuICAgIH1cbiAgfSk7XG5cbiAgZnVuY3Rpb24gcmVtb3ZlTGFzdEhvd21hbnlFdmVudHMocXVldWUsIGhvd21hbnkpIHtcbiAgICBxdWV1ZS5zcGxpY2UocXVldWUubGVuZ3RoIC0gaG93bWFueSwgcXVldWUubGVuZ3RoIC0gMSk7XG4gIH1cblxuICB2YXIgZXZlbnRzSGFuZGxlciA9IHtcbiAgICBhY2NlcHQ6IGZ1bmN0aW9uKGV2dCwgc3RhdGUpIHtcbiAgICAgIHZhciBuZXdzdGF0ZSA9IGV2ZW50YnVzLmFjY2VwdChldnQsIHN0YXRlKTtcbiAgICAgIGN0cmx6LmFjY2VwdChldnQsIHN0YXRlKTtcbiAgICAgIHJldHVybiBuZXdzdGF0ZTtcbiAgICB9XG4gIH07XG4gIGV2ZW50c0hhbmRsZXIuZXZlbnRidXMgPSBldmVudGJ1cztcbiAgZXZlbnRzSGFuZGxlci5jdHJseiA9IGN0cmx6O1xuICByZXR1cm4gZXZlbnRzSGFuZGxlcjtcbn1cblxuZXhwb3J0IHsgRXZlbnRzSGFuZGxlciwgRXZlbnRidXMsIEN0cmx6IH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "eventshandler.js"
      ],
      "names": [
        "EventsHandler",
        "eventbus",
        "ctrlz",
        "handlers",
        "set",
        "behave",
        "evt",
        "state",
        "removeLastHowmanyEvents",
        "queue",
        "howmany",
        "ctrlzState",
        "JSON",
        "parse",
        "stringify",
        "forEach",
        "event",
        "accept",
        "splice",
        "length",
        "eventsHandler",
        "newstate"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,KAAjC,EAAwC;AAEtCD,EAAAA,QAAQ,CAACE,QAAT,CAAkBC,GAAlB,CAAsB,OAAtB,EAA+B;AAC7BC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3BC,MAAAA,uBAAuB,CAACN,KAAK,CAACO,KAAP,EAAcH,GAAG,CAACI,OAAJ,IAAe,CAA7B,CAAvB;AACA,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,KAAK,CAACK,KAArB,CAAX,CAAjB;AACAL,MAAAA,KAAK,CAACO,KAAN,CAAYM,OAAZ,CAAoB,UAAAC,KAAK,EAAI;AAC3BL,QAAAA,UAAU,GAAGV,QAAQ,CAACgB,MAAT,CAAgBD,KAAhB,EAAuBL,UAAvB,CAAb;AACD,OAFD;AAGA,aAAOA,UAAP;AACD;AAR4B,GAA/B;;AAWA,WAASH,uBAAT,CAAiCC,KAAjC,EAAwCC,OAAxC,EAAiD;AAC/CD,IAAAA,KAAK,CAACS,MAAN,CAAaT,KAAK,CAACU,MAAN,GAAeT,OAA5B,EAAqCD,KAAK,CAACU,MAAN,GAAe,CAApD;AACD;;AAED,MAAIC,aAAa,GAAG;AAClBH,IAAAA,MAAM,EAAE,gBAASX,GAAT,EAAcC,KAAd,EAAqB;AAC3B,UAAIc,QAAQ,GAAGpB,QAAQ,CAACgB,MAAT,CAAgBX,GAAhB,EAAqBC,KAArB,CAAf;AACAL,MAAAA,KAAK,CAACe,MAAN,CAAaX,GAAb,EAAkBC,KAAlB;AACA,aAAOc,QAAP;AACD;AALiB,GAApB;AAOAD,EAAAA,aAAa,CAACnB,QAAd,GAAyBA,QAAzB;AACAmB,EAAAA,aAAa,CAAClB,KAAd,GAAsBA,KAAtB;AACA,SAAOkB,aAAP;AACD",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
      "sourcesContent": [
        "import Eventbus from '../src/eventbus.js';\nimport Ctrlz from '../src/ctrlz.js';\n\nfunction EventsHandler(eventbus, ctrlz) {\n\n  eventbus.handlers.set(\"ctrlz\", {\n    behave: function(evt, state) {\n      removeLastHowmanyEvents(ctrlz.queue, evt.howmany || 1);\n      var ctrlzState = JSON.parse(JSON.stringify(ctrlz.state));\n      ctrlz.queue.forEach(event => {\n        ctrlzState = eventbus.accept(event, ctrlzState);\n      });\n      return ctrlzState;\n    }\n  });\n\n  function removeLastHowmanyEvents(queue, howmany) {\n    queue.splice(queue.length - howmany, queue.length - 1);\n  }\n\n  var eventsHandler = {\n    accept: function(evt, state) {\n      var newstate = eventbus.accept(evt, state);\n      ctrlz.accept(evt, state);\n      return newstate;\n    }\n  };\n  eventsHandler.eventbus = eventbus;\n  eventsHandler.ctrlz = ctrlz;\n  return eventsHandler;\n}\n\nexport { EventsHandler, Eventbus, Ctrlz };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1643466185777
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventshandler/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventshandler\",\"filename\":\"/home/fpezzati/workspace/movona/eventshandler/src/eventbus.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventshandler\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventshandler",
      "filename": "/home/fpezzati/workspace/movona/eventshandler/src/eventbus.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventshandler",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventshandler/src/eventbus.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventshandler/src/eventbus.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
        "sourceFileName": "eventbus.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Eventbus = /*#__PURE__*/function () {\n  function Eventbus() {\n    var defaultHandler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      command: \"default\",\n      behave: function behave(msg, state) {\n        console.log(\"Not aware of: \" + JSON.stringify(msg));\n        return state;\n      }\n    };\n\n    _classCallCheck(this, Eventbus);\n\n    this.handlers = new Map();\n    this.handlers.set(defaultHandler.command, defaultHandler.behave);\n  }\n\n  _createClass(Eventbus, [{\n    key: \"accept\",\n    value: function accept(message, state) {\n      try {\n        var copyedState = JSON.parse(JSON.stringify(state));\n        var copyedMessage = JSON.parse(JSON.stringify(message));\n\n        if (typeof this.handlers.get(message.command) === 'undefined') {\n          return this.handlers.get('default').call(this, copyedMessage, copyedState);\n        }\n\n        return this.handlers.get(message.command)['behave'](copyedMessage, copyedState);\n      } catch (error) {\n        return JSON.parse(JSON.stringify(copyedState));\n      }\n    }\n  }]);\n\n  return Eventbus;\n}();\n\n;\nvar _default = Eventbus;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50YnVzLmpzIl0sIm5hbWVzIjpbIkV2ZW50YnVzIiwiZGVmYXVsdEhhbmRsZXIiLCJjb21tYW5kIiwiYmVoYXZlIiwibXNnIiwic3RhdGUiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImhhbmRsZXJzIiwiTWFwIiwic2V0IiwibWVzc2FnZSIsImNvcHllZFN0YXRlIiwicGFyc2UiLCJjb3B5ZWRNZXNzYWdlIiwiZ2V0IiwiY2FsbCIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0lBQU1BLFE7QUFFSixzQkFNRztBQUFBLFFBTlNDLGNBTVQsdUVBTjBCO0FBQzNCQyxNQUFBQSxPQUFPLEVBQUUsU0FEa0I7QUFFM0JDLE1BQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjQyxLQUFkLEVBQXFCO0FBQzNCQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBbUJDLElBQUksQ0FBQ0MsU0FBTCxDQUFlTCxHQUFmLENBQS9CO0FBQ0EsZUFBT0MsS0FBUDtBQUNEO0FBTDBCLEtBTTFCOztBQUFBOztBQUNELFNBQUtLLFFBQUwsR0FBZ0IsSUFBSUMsR0FBSixFQUFoQjtBQUNBLFNBQUtELFFBQUwsQ0FBY0UsR0FBZCxDQUFrQlgsY0FBYyxDQUFDQyxPQUFqQyxFQUEwQ0QsY0FBYyxDQUFDRSxNQUF6RDtBQUNEOzs7O1dBRUQsZ0JBQU9VLE9BQVAsRUFBZ0JSLEtBQWhCLEVBQXVCO0FBQ3JCLFVBQUk7QUFDRixZQUFJUyxXQUFXLEdBQUdOLElBQUksQ0FBQ08sS0FBTCxDQUFXUCxJQUFJLENBQUNDLFNBQUwsQ0FBZUosS0FBZixDQUFYLENBQWxCO0FBQ0EsWUFBSVcsYUFBYSxHQUFHUixJQUFJLENBQUNPLEtBQUwsQ0FBV1AsSUFBSSxDQUFDQyxTQUFMLENBQWVJLE9BQWYsQ0FBWCxDQUFwQjs7QUFDQSxZQUFHLE9BQU8sS0FBS0gsUUFBTCxDQUFjTyxHQUFkLENBQWtCSixPQUFPLENBQUNYLE9BQTFCLENBQVAsS0FBOEMsV0FBakQsRUFBOEQ7QUFDNUQsaUJBQU8sS0FBS1EsUUFBTCxDQUFjTyxHQUFkLENBQWtCLFNBQWxCLEVBQTZCQyxJQUE3QixDQUFrQyxJQUFsQyxFQUF3Q0YsYUFBeEMsRUFBdURGLFdBQXZELENBQVA7QUFDRDs7QUFDRCxlQUFPLEtBQUtKLFFBQUwsQ0FBY08sR0FBZCxDQUFrQkosT0FBTyxDQUFDWCxPQUExQixFQUFtQyxRQUFuQyxFQUE2Q2MsYUFBN0MsRUFBNERGLFdBQTVELENBQVA7QUFDRCxPQVBELENBT0UsT0FBT0ssS0FBUCxFQUFjO0FBQ2QsZUFBT1gsSUFBSSxDQUFDTyxLQUFMLENBQVdQLElBQUksQ0FBQ0MsU0FBTCxDQUFlSyxXQUFmLENBQVgsQ0FBUDtBQUNEO0FBQ0Y7Ozs7OztBQUNGO2VBRWNkLFEiLCJzb3VyY2VSb290IjoiL2hvbWUvZnBlenphdGkvd29ya3NwYWNlL21vdm9uYS9ldmVudHNoYW5kbGVyL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBFdmVudGJ1cyB7XG5cbiAgY29uc3RydWN0b3IoZGVmYXVsdEhhbmRsZXIgPSB7XG4gICAgY29tbWFuZDogXCJkZWZhdWx0XCIsXG4gICAgYmVoYXZlOiBmdW5jdGlvbihtc2csIHN0YXRlKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIk5vdCBhd2FyZSBvZjogXCIgKyBKU09OLnN0cmluZ2lmeShtc2cpKTtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG4gIH0pIHtcbiAgICB0aGlzLmhhbmRsZXJzID0gbmV3IE1hcCgpO1xuICAgIHRoaXMuaGFuZGxlcnMuc2V0KGRlZmF1bHRIYW5kbGVyLmNvbW1hbmQsIGRlZmF1bHRIYW5kbGVyLmJlaGF2ZSk7XG4gIH1cblxuICBhY2NlcHQobWVzc2FnZSwgc3RhdGUpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIGNvcHllZFN0YXRlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzdGF0ZSkpO1xuICAgICAgdmFyIGNvcHllZE1lc3NhZ2UgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTtcbiAgICAgIGlmKHR5cGVvZiB0aGlzLmhhbmRsZXJzLmdldChtZXNzYWdlLmNvbW1hbmQpID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGVycy5nZXQoJ2RlZmF1bHQnKS5jYWxsKHRoaXMsIGNvcHllZE1lc3NhZ2UsIGNvcHllZFN0YXRlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLmhhbmRsZXJzLmdldChtZXNzYWdlLmNvbW1hbmQpWydiZWhhdmUnXShjb3B5ZWRNZXNzYWdlLCBjb3B5ZWRTdGF0ZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGNvcHllZFN0YXRlKSk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFdmVudGJ1cztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "eventbus.js"
      ],
      "names": [
        "Eventbus",
        "defaultHandler",
        "command",
        "behave",
        "msg",
        "state",
        "console",
        "log",
        "JSON",
        "stringify",
        "handlers",
        "Map",
        "set",
        "message",
        "copyedState",
        "parse",
        "copyedMessage",
        "get",
        "call",
        "error"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,Q;AAEJ,sBAMG;AAAA,QANSC,cAMT,uEAN0B;AAC3BC,MAAAA,OAAO,EAAE,SADkB;AAE3BC,MAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeL,GAAf,CAA/B;AACA,eAAOC,KAAP;AACD;AAL0B,KAM1B;;AAAA;;AACD,SAAKK,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACA,SAAKD,QAAL,CAAcE,GAAd,CAAkBX,cAAc,CAACC,OAAjC,EAA0CD,cAAc,CAACE,MAAzD;AACD;;;;WAED,gBAAOU,OAAP,EAAgBR,KAAhB,EAAuB;AACrB,UAAI;AACF,YAAIS,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAX,CAAlB;AACA,YAAIW,aAAa,GAAGR,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeI,OAAf,CAAX,CAApB;;AACA,YAAG,OAAO,KAAKH,QAAL,CAAcO,GAAd,CAAkBJ,OAAO,CAACX,OAA1B,CAAP,KAA8C,WAAjD,EAA8D;AAC5D,iBAAO,KAAKQ,QAAL,CAAcO,GAAd,CAAkB,SAAlB,EAA6BC,IAA7B,CAAkC,IAAlC,EAAwCF,aAAxC,EAAuDF,WAAvD,CAAP;AACD;;AACD,eAAO,KAAKJ,QAAL,CAAcO,GAAd,CAAkBJ,OAAO,CAACX,OAA1B,EAAmC,QAAnC,EAA6Cc,aAA7C,EAA4DF,WAA5D,CAAP;AACD,OAPD,CAOE,OAAOK,KAAP,EAAc;AACd,eAAOX,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeK,WAAf,CAAX,CAAP;AACD;AACF;;;;;;AACF;eAEcd,Q",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/src/",
      "sourcesContent": [
        "class Eventbus {\n\n  constructor(defaultHandler = {\n    command: \"default\",\n    behave: function(msg, state) {\n      console.log(\"Not aware of: \" + JSON.stringify(msg));\n      return state;\n    }\n  }) {\n    this.handlers = new Map();\n    this.handlers.set(defaultHandler.command, defaultHandler.behave);\n  }\n\n  accept(message, state) {\n    try {\n      var copyedState = JSON.parse(JSON.stringify(state));\n      var copyedMessage = JSON.parse(JSON.stringify(message));\n      if(typeof this.handlers.get(message.command) === 'undefined') {\n        return this.handlers.get('default').call(this, copyedMessage, copyedState);\n      }\n      return this.handlers.get(message.command)['behave'](copyedMessage, copyedState);\n    } catch (error) {\n      return JSON.parse(JSON.stringify(copyedState));\n    }\n  }\n};\n\nexport default Eventbus;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1642373723273
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/fpezzati/workspace/movona/eventshandler/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/fpezzati/workspace/movona/eventshandler\",\"filename\":\"/home/fpezzati/workspace/movona/eventshandler/test/eventbus.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/fpezzati/workspace/movona/eventshandler\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/fpezzati/workspace/movona/eventshandler",
      "filename": "/home/fpezzati/workspace/movona/eventshandler/test/eventbus.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/fpezzati/workspace/movona/eventshandler",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/fpezzati/workspace/movona/eventshandler/test/eventbus.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/fpezzati/workspace/movona/eventshandler/test/eventbus.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
        "sourceFileName": "eventbus.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _eventbus = _interopRequireDefault(require(\"../src/eventbus.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\nTests about the eventbus.\n*/\nvar tape = require('tape');\n\nvar lodash = require('lodash');\n\n/*\nsut came with a default handler.\n*/\ntape('Eventbus provides a default handler', function (assert) {\n  var defaultHandler = {\n    command: \"default\",\n    behave: function behave(msg) {\n      console.log(\"Not aware of: \" + JSON.stringify(msg));\n    }\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(newSutCameWithASingleDefaultHandler(sut), 'Eventbus: should have a single default handler.');\n  assert.end();\n});\n\nfunction newSutCameWithASingleDefaultHandler(sut) {\n  return sut.handlers.size == 1 && typeof sut.handlers.get('default') === 'function';\n}\n\n;\n/*\nwhen eventbus receives a message with no 'command', he discard it and returns a copy of state immutated.\n*/\n\ntape('Eventbus receives a message with no \"command\", he dumps it.', function (assert) {\n  var message = {};\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has no \"command\".');\n  assert.end();\n});\n/*\nwhen eventbus receives a message with a 'command' he is not aware of, he discard it and returns a copy of state immutated.\n*/\n\ntape('Eventbus receives a message with a \"command\" he is not aware of, he discard it and returns a copy of state immutated.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has unmanageable \"command\".');\n  assert.end();\n});\n/*\neventbus always returns a copy of the managed state, even if managed state was left unchanged while handling.\n*/\n\ntape('Eventbus always returns a copy of the managed state.', function (assert) {\n  var message = {};\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  assert.ok(statesAreEqualButNotTheSameObject(state, sut.accept(message, state)), 'Eventbus: state should a copy not the same object.');\n  assert.end();\n});\n\nfunction statesAreEqualButNotTheSameObject(originalState, copyState) {\n  return lodash.isEqual(originalState, copyState) && originalState !== copyState;\n}\n\n;\n/*\nwhen a wrong handler is setted, eventbus manage the error and returns an immutated copy of state.\n*/\n\ntape('Eventbus handles a message with an invalid handler, he manage the error and returns an immutated copy of state.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  var badHandler = {\n    command: \"dosomething\",\n    behave: function behave(msg, state) {\n      throw 'Unexpected error!';\n    }\n  };\n  sut.handlers.set(\"dosomething\", badHandler);\n  assert.ok(lodash.isEqual({\n    say: \"hello\"\n  }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message is managed by wrong or invalid handler.');\n  assert.end();\n});\n/*\nwhen eventbus receives a message with a 'command' he is aware of, he passes the message to the handler and returns an updated copy of state.\n*/\n\ntape('Eventbus receives a message he can handle, he passes a copy of message and a copy of the state to the proper handler.', function (assert) {\n  var message = {\n    command: \"dosomething\"\n  };\n  var state = {\n    say: \"hello\"\n  };\n  var sut = new _eventbus[\"default\"]();\n  var someHandler = {\n    command: \"dosomething\",\n    behave: function behave(msg, state) {\n      state.name = \"Joe\";\n      return state;\n    }\n  };\n  sut.handlers.set(\"dosomething\", someHandler);\n  assert.ok(statesAreEqualButNotTheSameObject({\n    say: \"hello\",\n    name: \"Joe\"\n  }, sut.accept(message, state)), 'Eventbus: state should be updated accordingly by adding a \"name\" valued \"Joe\" property.');\n  assert.end();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "eventbus.test.js"
      ],
      "names": [
        "tape",
        "require",
        "lodash",
        "assert",
        "defaultHandler",
        "command",
        "behave",
        "msg",
        "console",
        "log",
        "JSON",
        "stringify",
        "sut",
        "Eventbus",
        "ok",
        "newSutCameWithASingleDefaultHandler",
        "end",
        "handlers",
        "size",
        "get",
        "message",
        "state",
        "say",
        "isEqual",
        "accept",
        "statesAreEqualButNotTheSameObject",
        "originalState",
        "copyState",
        "badHandler",
        "set",
        "someHandler",
        "name"
      ],
      "mappings": ";;AAKA;;;;AALA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAGA;AACA;AACA;AACAD,IAAI,CAAC,qCAAD,EAAwC,UAASG,MAAT,EAAiB;AAC3D,MAAIC,cAAc,GAAG;AAAEC,IAAAA,OAAO,EAAE,SAAX;AAAsBC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAc;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA/B;AAAoD;AAAlG,GAArB;AACA,MAAIK,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUC,mCAAmC,CAACH,GAAD,CAA7C,EAAoD,iDAApD;AACAT,EAAAA,MAAM,CAACa,GAAP;AACD,CALG,CAAJ;;AAOA,SAASD,mCAAT,CAA6CH,GAA7C,EAAkD;AAChD,SAAOA,GAAG,CAACK,QAAJ,CAAaC,IAAb,IAAqB,CAArB,IAA0B,OAAON,GAAG,CAACK,QAAJ,CAAaE,GAAb,CAAiB,SAAjB,CAAP,KAAuC,UAAxE;AACD;;AAAA;AAED;AACA;AACA;;AACAnB,IAAI,CAAC,6DAAD,EAAgE,UAASG,MAAT,EAAiB;AACnF,MAAIiB,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,sEAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;AAQA;AACA;AACA;;AACAhB,IAAI,CAAC,uHAAD,EAA0H,UAASG,MAAT,EAAiB;AAC7I,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,gFAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;AAQA;AACA;AACA;;AACAhB,IAAI,CAAC,sDAAD,EAAyD,UAASG,MAAT,EAAiB;AAC5E,MAAIiB,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AACAV,EAAAA,MAAM,CAACW,EAAP,CAAUW,iCAAiC,CAACJ,KAAD,EAAQT,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAR,CAA3C,EAAgF,oDAAhF;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CANG,CAAJ;;AAQA,SAASS,iCAAT,CAA2CC,aAA3C,EAA0DC,SAA1D,EAAqE;AACnE,SAAOzB,MAAM,CAACqB,OAAP,CAAeG,aAAf,EAA8BC,SAA9B,KAA4CD,aAAa,KAAKC,SAArE;AACD;;AAAA;AAED;AACA;AACA;;AACA3B,IAAI,CAAC,iHAAD,EAAoH,UAASG,MAAT,EAAiB;AACvI,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AAEA,MAAIe,UAAU,GAAG;AACfvB,IAAAA,OAAO,EAAE,aADM;AAEfC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcc,KAAd,EAAqB;AAC3B,YAAM,mBAAN;AACD;AAJc,GAAjB;AAOAT,EAAAA,GAAG,CAACK,QAAJ,CAAaY,GAAb,CAAiB,aAAjB,EAAgCD,UAAhC;AACAzB,EAAAA,MAAM,CAACW,EAAP,CAAUZ,MAAM,CAACqB,OAAP,CAAe;AAAED,IAAAA,GAAG,EAAE;AAAP,GAAf,EAAiCV,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAjC,CAAV,EAAwE,4FAAxE;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CAfG,CAAJ;AAiBA;AACA;AACA;;AACAhB,IAAI,CAAC,uHAAD,EAA0H,UAASG,MAAT,EAAiB;AAC7I,MAAIiB,OAAO,GAAG;AAAEf,IAAAA,OAAO,EAAE;AAAX,GAAd;AACA,MAAIgB,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAZ;AACA,MAAIV,GAAG,GAAG,IAAIC,oBAAJ,EAAV;AAEA,MAAIiB,WAAW,GAAG;AAChBzB,IAAAA,OAAO,EAAE,aADO;AAEhBC,IAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcc,KAAd,EAAqB;AAC3BA,MAAAA,KAAK,CAACU,IAAN,GAAa,KAAb;AACA,aAAOV,KAAP;AACD;AALe,GAAlB;AAQAT,EAAAA,GAAG,CAACK,QAAJ,CAAaY,GAAb,CAAiB,aAAjB,EAAgCC,WAAhC;AACA3B,EAAAA,MAAM,CAACW,EAAP,CAAUW,iCAAiC,CAAC;AAAEH,IAAAA,GAAG,EAAE,OAAP;AAAgBS,IAAAA,IAAI,EAAE;AAAtB,GAAD,EAAgCnB,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,KAApB,CAAhC,CAA3C,EAAwG,yFAAxG;AACAlB,EAAAA,MAAM,CAACa,GAAP;AACD,CAhBG,CAAJ",
      "sourceRoot": "/home/fpezzati/workspace/movona/eventshandler/test/",
      "sourcesContent": [
        "/*\nTests about the eventbus.\n*/\nvar tape = require('tape');\nvar lodash = require('lodash');\nimport Eventbus from '../src/eventbus.js';\n\n/*\nsut came with a default handler.\n*/\ntape('Eventbus provides a default handler', function(assert) {\n  var defaultHandler = { command: \"default\", behave: function(msg) { console.log(\"Not aware of: \" + JSON.stringify(msg))} };\n  var sut = new Eventbus;\n  assert.ok(newSutCameWithASingleDefaultHandler(sut), 'Eventbus: should have a single default handler.');\n  assert.end();\n});\n\nfunction newSutCameWithASingleDefaultHandler(sut) {\n  return sut.handlers.size == 1 && typeof sut.handlers.get('default') === 'function';\n};\n\n/*\nwhen eventbus receives a message with no 'command', he discard it and returns a copy of state immutated.\n*/\ntape('Eventbus receives a message with no \"command\", he dumps it.', function(assert) {\n  var message = {};\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has no \"command\".');\n  assert.end();\n});\n\n/*\nwhen eventbus receives a message with a 'command' he is not aware of, he discard it and returns a copy of state immutated.\n*/\ntape('Eventbus receives a message with a \"command\" he is not aware of, he discard it and returns a copy of state immutated.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message has unmanageable \"command\".');\n  assert.end();\n});\n\n/*\neventbus always returns a copy of the managed state, even if managed state was left unchanged while handling.\n*/\ntape('Eventbus always returns a copy of the managed state.', function(assert) {\n  var message = {};\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n  assert.ok(statesAreEqualButNotTheSameObject(state, sut.accept(message, state)), 'Eventbus: state should a copy not the same object.');\n  assert.end();\n});\n\nfunction statesAreEqualButNotTheSameObject(originalState, copyState) {\n  return lodash.isEqual(originalState, copyState) && originalState !== copyState;\n};\n\n/*\nwhen a wrong handler is setted, eventbus manage the error and returns an immutated copy of state.\n*/\ntape('Eventbus handles a message with an invalid handler, he manage the error and returns an immutated copy of state.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n\n  var badHandler = {\n    command: \"dosomething\",\n    behave: function(msg, state) {\n      throw 'Unexpected error!';\n    }\n  }\n\n  sut.handlers.set(\"dosomething\", badHandler);\n  assert.ok(lodash.isEqual({ say: \"hello\" }, sut.accept(message, state)), 'Eventbus: state should be kept intact when message is managed by wrong or invalid handler.');\n  assert.end();\n});\n\n/*\nwhen eventbus receives a message with a 'command' he is aware of, he passes the message to the handler and returns an updated copy of state.\n*/\ntape('Eventbus receives a message he can handle, he passes a copy of message and a copy of the state to the proper handler.', function(assert) {\n  var message = { command: \"dosomething\" };\n  var state = { say: \"hello\" };\n  var sut = new Eventbus;\n\n  var someHandler = {\n    command: \"dosomething\",\n    behave: function(msg, state) {\n      state.name = \"Joe\";\n      return state;\n    }\n  }\n\n  sut.handlers.set(\"dosomething\", someHandler);\n  assert.ok(statesAreEqualButNotTheSameObject({ say: \"hello\", name: \"Joe\" }, sut.accept(message, state)), 'Eventbus: state should be updated accordingly by adding a \"name\" valued \"Joe\" property.');\n  assert.end();\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1642717628743
  }
}